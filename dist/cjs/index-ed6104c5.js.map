{"version":3,"file":"index-ed6104c5.js","sources":["../../src/ui/MessageStatus/index.jsx","../../src/ui/MessageItemMenu/index.tsx","../../src/ui/ReactionButton/index.jsx","../../src/ui/MessageItemReactionMenu/index.tsx","../../src/ui/Tooltip/index.jsx","../../src/ui/TooltipWrapper/index.jsx","../../src/ui/ReactionBadge/index.jsx","../../src/ui/EmojiReactions/index.tsx","../../src/ui/AdminMessage/index.jsx","../../src/ui/TextMessageItemBody/index.tsx","../../src/ui/FileMessageItemBody/index.tsx","../../src/ui/ThumbnailMessageItemBody/index.tsx","../../src/ui/OGMessageItemBody/index.tsx","../../src/ui/UnknownMessageItemBody/index.tsx","../../src/ui/QuoteMessage/index.tsx","../../src/ui/MessageContent/index.tsx","../../src/smart-components/Conversation/components/RemoveMessage.jsx","../../src/smart-components/Conversation/components/MessageHOC.jsx","../../src/smart-components/Conversation/dux/actionTypes.js","../../src/smart-components/Conversation/utils.js","../../src/smart-components/Conversation/dux/initialState.js","../../src/smart-components/Conversation/dux/reducers.js","../../src/smart-components/Conversation/hooks/useHandleChannelEvents.js","../../src/smart-components/Conversation/hooks/useGetChannel.js","../../src/smart-components/Conversation/hooks/useInitialMessagesFetch.js","../../src/smart-components/Conversation/hooks/useHandleReconnect.ts","../../src/smart-components/Conversation/hooks/useScrollCallback.js","../../src/smart-components/Conversation/hooks/useScrollDownCallback.js","../../src/smart-components/Conversation/hooks/useDeleteMessageCallback.js","../../src/smart-components/Conversation/hooks/useUpdateMessageCallback.js","../../src/smart-components/Conversation/hooks/useResendMessageCallback.js","../../src/smart-components/Conversation/hooks/useSendMessageCallback.js","../../src/smart-components/Conversation/hooks/useSendFileMessageCallback.js","../../src/smart-components/Conversation/hooks/useMemoizedEmojiListItems.jsx","../../src/smart-components/Conversation/hooks/useToggleReactionCallback.js","../../src/smart-components/Conversation/hooks/useScrollToMessage.ts","../../src/smart-components/Conversation/components/ConversationScroll.jsx","../../src/smart-components/Conversation/components/Notification.jsx","../../src/smart-components/Conversation/components/FrozenNotification.tsx","../../src/smart-components/Conversation/components/TypingIndicator.jsx","../../src/ui/QuoteMessageInput/QuoteMessageThumbnail.tsx","../../src/ui/QuoteMessageInput/index.tsx","../../src/smart-components/Conversation/components/MessageInputWrapper.tsx","../../src/ui/ConnectionStatus/index.jsx","../../src/ui/ChatHeader/utils.js","../../src/ui/ChatHeader/index.jsx","../../src/smart-components/Conversation/index.jsx"],"sourcesContent":["import React, { useContext, useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport format from 'date-fns/format';\n\nimport './index.scss';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelColors, LabelTypography } from '../Label';\nimport Loader from '../Loader';\n\nimport {\n  getOutgoingMessageState,\n  getOutgoingMessageStates,\n  isSentStatus,\n} from '../../utils';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nexport const MessageStatusTypes = getOutgoingMessageStates();\nexport default function MessageStatus({\n  className,\n  message,\n  channel,\n}) {\n  const { dateLocale } = useContext(LocalizationContext);\n  const showMessageStatusIcon = channel?.isGroupChannel()\n    && !channel?.isSuper\n    && !channel?.isPublic\n    && !channel?.isBroadcast;\n  const iconType = {\n    [MessageStatusTypes.SENT]: IconTypes.DONE,\n    [MessageStatusTypes.DELIVERED]: IconTypes.DONE_ALL,\n    [MessageStatusTypes.READ]: IconTypes.DONE_ALL,\n    [MessageStatusTypes.FAILED]: IconTypes.ERROR,\n  };\n  const iconColor = {\n    [MessageStatusTypes.SENT]: IconColors.SENT,\n    [MessageStatusTypes.DELIVERED]: IconColors.SENT,\n    [MessageStatusTypes.READ]: IconColors.READ,\n    [MessageStatusTypes.FAILED]: IconColors.ERROR,\n  };\n\n  const messageStatus = useMemo(() => (\n    getOutgoingMessageState(channel, message)\n  ), [channel?.getUnreadMemberCount?.(message), channel?.getUndeliveredMemberCount?.(message)]);\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-message-status',\n      ].join(' ')}\n    >\n      {(showMessageStatusIcon) && (\n        (messageStatus === MessageStatusTypes.PENDING) ? (\n          <Loader\n            className=\"sendbird-message-status__icon\"\n            width=\"16px\"\n            height=\"16px\"\n          >\n            <Icon\n              type={IconTypes.SPINNER}\n              fillColor={IconColors.PRIMARY}\n              width=\"16px\"\n              height=\"16px\"\n            />\n          </Loader>\n        ) : (\n          <Icon\n            className=\"sendbird-message-status__icon\"\n            type={iconType[messageStatus] || IconTypes.ERROR}\n            fillColor={iconColor[messageStatus]}\n            width=\"16px\"\n            height=\"16px\"\n          />\n        )\n      )}\n      {isSentStatus(messageStatus) && (\n        <Label\n          className=\"sendbird-message-status__text\"\n          type={LabelTypography.CAPTION_3}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {format(message?.createdAt, 'p', { locale: dateLocale })}\n        </Label>\n      )}\n    </div>\n  );\n}\n\nMessageStatus.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  message: PropTypes.shape({\n    createdAt: PropTypes.number,\n    sender: PropTypes.shape({\n      friendName: PropTypes.string,\n      nickname: PropTypes.string,\n      userId: PropTypes.string,\n      profileUrl: PropTypes.string,\n    }),\n    sendingStatus: PropTypes.string,\n  }),\n  channel: PropTypes.shape({\n    isGroupChannel: PropTypes.func,\n    isSuper: PropTypes.bool,\n    isBroadcast: PropTypes.bool,\n    isPublic: PropTypes.bool,\n    getUnreadMemberCount: PropTypes.func,\n    getUndeliveredMemberCount: PropTypes.func,\n  }),\n};\n\nMessageStatus.defaultProps = {\n  className: '',\n  message: null,\n  channel: null,\n};\n","import React, { ReactElement, useContext, useRef } from 'react';\nimport { FileMessage, GroupChannel, OpenChannel, UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport {\n  getClassName,\n  copyToClipboard,\n  isUserMessage,\n  isSentMessage,\n  isFailedMessage,\n  isPendingMessage,\n} from '../../utils/index';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { ReplyType } from '../../index';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage | FileMessage;\n  channel: GroupChannel | OpenChannel;\n  isByMe?: boolean;\n  disabled?: boolean;\n  replyType?: ReplyType;\n  showEdit?: (bool: boolean) => void;\n  showRemove?: (bool: boolean) => void;\n  resendMessage?: (message: UserMessage | FileMessage) => void;\n  setQuoteMessage?: (message: UserMessage | FileMessage) => void;\n  setSupposedHover?: (bool: boolean) => void;\n}\n\nexport default function MessageItemMenu({\n  className,\n  message,\n  channel,\n  isByMe = false,\n  disabled = false,\n  replyType,\n  showEdit,\n  showRemove,\n  resendMessage,\n  setQuoteMessage,\n  setSupposedHover,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const triggerRef = useRef(null);\n  const containerRef = useRef(null);\n\n  const showMenuItemCopy: boolean = isUserMessage(message as UserMessage);\n  const showMenuItemReply: boolean = replyType === 'QUOTE_REPLY' && !isFailedMessage(channel, message) && !isPendingMessage(channel, message);\n  const showMenuItemEdit: boolean = (isUserMessage(message as UserMessage) && isSentMessage(channel, message) && isByMe);\n  const showMenuItemResend: boolean = (isFailedMessage(channel, message) && message?.isResendable?.() && isByMe);\n  const showMenuItemDelete: boolean = !isPendingMessage(channel, message) && isByMe;\n\n  if (!(showMenuItemCopy || showMenuItemReply || showMenuItemEdit || showMenuItemResend || showMenuItemDelete)) {\n    return null;\n  }\n  return (\n    <div\n      className={getClassName([className, 'sendbird-message-item-menu'])}\n      ref={containerRef}\n    >\n      <ContextMenu\n        menuTrigger={(toggleDropdown: () => void): ReactElement => (\n          <IconButton\n            className=\"sendbird-message-item-menu__trigger\"\n            ref={triggerRef}\n            width=\"32px\"\n            height=\"32px\"\n            onClick={(): void => {\n              toggleDropdown();\n              setSupposedHover(true);\n            }}\n            onBlur={(): void => {\n              setSupposedHover(false);\n            }}\n          >\n            <Icon\n              className=\"sendbird-message-item-menu__trigger__icon\"\n              type={IconTypes.MORE}\n              fillColor={IconColors.CONTENT_INVERSE}\n              width=\"24px\"\n              height=\"24px\"\n            />\n          </IconButton>\n        )}\n        menuItems={(close: () => void): ReactElement => {\n          const closeDropdown = (): void => {\n            close();\n            setSupposedHover(false);\n          };\n          return (\n            <MenuItems\n              className=\"sendbird-message-item-menu__list\"\n              parentRef={triggerRef}\n              parentContainRef={containerRef}\n              closeDropdown={closeDropdown}\n              openLeft={isByMe}\n            >\n              {showMenuItemCopy && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-copy\"\n                  onClick={() => {\n                    copyToClipboard((message as UserMessage)?.message);\n                    closeDropdown();\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__COPY}\n                </MenuItem>\n              )}\n              {showMenuItemReply && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-reply\"\n                  onClick={() => {\n                    setQuoteMessage(message);\n                    closeDropdown();\n                  }}\n                  disable={message?.parentMessageId > 0}\n                >\n                  {stringSet.MESSAGE_MENU__REPLY}\n                </MenuItem>\n              )}\n              {showMenuItemEdit && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-edit\"\n                  onClick={() => {\n                    if (!disabled) {\n                      showEdit(true);\n                      closeDropdown();\n                    }\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__EDIT}\n                </MenuItem>\n              )}\n              {showMenuItemResend && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-resend\"\n                  onClick={() => {\n                    if (!disabled) {\n                      resendMessage(message);\n                      closeDropdown();\n                    }\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__RESEND}\n                </MenuItem>\n              )}\n              {showMenuItemDelete && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-delete\"\n                  onClick={() => {\n                    if (!disabled) {\n                      showRemove(true);\n                      closeDropdown();\n                    }\n                  }}\n                  disable={message?.threadInfo?.replyCount > 0}\n                >\n                  {stringSet.MESSAGE_MENU__DELETE}\n                </MenuItem>\n              )}\n            </MenuItems>\n          );\n        }}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst ReactionButton = React.forwardRef((props, ref) => {\n  const {\n    className,\n    width,\n    height,\n    selected,\n    onClick,\n    children,\n  } = props;\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        `sendbird-reaction-button${selected ? '--selected' : ''}`,\n      ].join(' ')}\n      ref={ref}\n      role=\"button\"\n      style={{\n        width: typeof width === 'string' ? `${width.slice(0, -2) - 2}px` : `${width - 2}px`,\n        height: typeof height === 'string' ? `${height.slice(0, -2) - 2}px` : `${height - 2}px`,\n      }}\n      onClick={(e) => onClick(e)}\n      onKeyDown={(e) => onClick(e)}\n      tabIndex={0}\n    >\n      <div className=\"sendbird-reaction-button__inner\">\n        {children}\n      </div>\n    </div>\n  );\n});\n\nReactionButton.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  width: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  height: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  selected: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.element.isRequired,\n};\n\nReactionButton.defaultProps = {\n  className: '',\n  width: '36px',\n  height: '36px',\n  selected: false,\n  onClick: () => { },\n};\n\nexport default ReactionButton;\n","import React, { ReactElement, useRef } from 'react';\nimport { FileMessage, UserMessage, Emoji, Reaction, EmojiContainer, GroupChannel, OpenChannel } from 'sendbird';\nimport './index.scss';\n\nimport ContextMenu, { EmojiListItems } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport ImageRenderer from '../ImageRenderer';\nimport ReactionButton from '../ReactionButton';\nimport { getClassName, getEmojiListAll, isPendingMessage, isFailedMessage } from '../../utils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage | FileMessage;\n  channel: GroupChannel | OpenChannel;\n  userId: string;\n  spaceFromTrigger?: Record<string, unknown>;\n  emojiContainer?: EmojiContainer;\n  toggleReaction?: (message: UserMessage | FileMessage, reactionKey: string, isReacted: boolean) => void;\n  setSupposedHover?: (bool: boolean) => void;\n}\n\nexport default function MessageItemReactionMenu({\n  className,\n  message,\n  channel,\n  userId,\n  spaceFromTrigger = {},\n  emojiContainer,\n  toggleReaction,\n  setSupposedHover,\n}: Props): ReactElement {\n  const triggerRef = useRef(null);\n  const containerRef = useRef(null);\n\n  if(isPendingMessage(channel, message) || isFailedMessage(channel, message)) {\n    return null;\n  }\n\n  return (\n    <div\n      className={getClassName([className, 'sendbird-message-item-reaction-menu'])}\n      ref={containerRef}\n    >\n      <ContextMenu\n        menuTrigger={(toggleDropdown: () => void): ReactElement => (\n          <IconButton\n            className=\"sendbird-message-item-reaction-menu__trigger\"\n            ref={triggerRef}\n            width=\"32px\"\n            height=\"32px\"\n            onClick={(): void => {\n              toggleDropdown();\n              setSupposedHover(true);\n            }}\n            onBlur={(): void => {\n              setSupposedHover(false);\n            }}\n          >\n            <Icon\n              className=\"sendbird-message-item-reaction-menu__trigger__icon\"\n              type={IconTypes.EMOJI_MORE}\n              fillColor={IconColors.CONTENT_INVERSE}\n              width=\"24px\"\n              height=\"24px\"\n            />\n          </IconButton>\n        )}\n        menuItems={(close: () => void): ReactElement => {\n          const closeDropdown = (): void => {\n            close();\n            setSupposedHover(false);\n          };\n          return (\n            <EmojiListItems\n              parentRef={triggerRef}\n              parentContainRef={containerRef}\n              closeDropdown={closeDropdown}\n              spaceFromTrigger={spaceFromTrigger}\n            >\n              {getEmojiListAll(emojiContainer).map((emoji: Emoji): ReactElement => {\n                const isReacted: boolean = message?.reactions?.\n                  filter((reaction: Reaction) => reaction.key === emoji.key)[0]?.userIds?.\n                  some((reactorId: string) => reactorId === userId);\n                return (\n                  <ReactionButton\n                    key={emoji.key}\n                    width=\"36px\"\n                    height=\"36px\"\n                    selected={isReacted}\n                    onClick={() => {\n                      closeDropdown();\n                      toggleReaction(message, emoji.key, isReacted);\n                    }}\n                  >\n                    <ImageRenderer\n                      url={emoji.url}\n                      width=\"28px\"\n                      height=\"28px\"\n                      placeHolder={(style) => (\n                        <div style={style}>\n                          <Icon\n                            type={IconTypes.QUESTION}\n                            fillColor={IconColors.ON_BACKGROUND_3}\n                            width=\"28px\"\n                            height=\"28px\"\n                          />\n                        </div>\n                      )}\n                    />\n                  </ReactionButton>\n                );\n              })}\n            </EmojiListItems>\n          );\n        }}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nimport Label, { LabelColors, LabelTypography } from '../Label';\n\nexport default function Tooltip({\n  className,\n  children,\n}) {\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-tooltip',\n      ].join(' ')}\n    >\n      <Label\n        className=\"sendbird-tooltip__text\"\n        type={LabelTypography.CAPTION_2}\n        color={LabelColors.ONCONTENT_1}\n      >\n        {children}\n      </Label>\n    </div>\n  );\n}\n\nTooltip.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n};\n\nTooltip.defaultProps = {\n  className: '',\n  children: '',\n};\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst SPACE_FROM_TRIGGER = 8;\n\nexport default function TooltipWrapper({\n  className,\n  children,\n  hoverTooltip,\n  // clickTooltip can be added later\n}) {\n  const [showHoverTooltip, setShowHoverTooltip] = useState(false);\n  const childrenRef = useRef(null);\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-tooltip-wrapper',\n      ].join(' ')}\n      onMouseOver={() => { setShowHoverTooltip(true); }}\n      onFocus={() => { setShowHoverTooltip(true); }}\n      onMouseOut={() => { setShowHoverTooltip(false); }}\n      onBlur={() => { setShowHoverTooltip(false); }}\n    >\n      <div\n        className=\"sendbird-tooltip-wrapper__children\"\n        ref={childrenRef}\n      >\n        {children}\n      </div>\n      {\n        showHoverTooltip && (\n          <div\n            className=\"sendbird-tooltip-wrapper__hover-tooltip\"\n            style={{ bottom: `calc(100% + ${SPACE_FROM_TRIGGER}px)` }}\n          >\n            <div className=\"sendbird-tooltip-wrapper__hover-tooltip__inner\">\n              <div\n                className=\"sendbird-tooltip-wrapper__hover-tooltip__inner__tooltip-container\"\n                style={{ left: childrenRef.current && `calc(${childrenRef.current.offsetWidth / 2}px - 50%)` }}\n              >\n                {hoverTooltip}\n              </div>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nTooltipWrapper.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  children: PropTypes.element.isRequired,\n  hoverTooltip: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]).isRequired,\n};\nTooltipWrapper.defaultProps = {\n  className: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label, { LabelTypography, LabelColors } from '../Label';\n\nimport './index.scss';\n\nconst ReactionBadge = React.forwardRef((props, ref) => {\n  const {\n    className,\n    children,\n    count,\n    selected,\n    isAdd,\n    onClick,\n  } = props;\n\n  const getClassNameTail = () => {\n    if (selected && !isAdd) {\n      return '--selected';\n    }\n    if (isAdd) {\n      return '--is-add';\n    }\n    return '';\n  };\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        `sendbird-reaction-badge${getClassNameTail()}`,\n      ].join(' ')}\n      role=\"button\"\n      ref={ref}\n      onClick={onClick}\n      onKeyDown={onClick}\n      tabIndex={0}\n    >\n      <div className=\"sendbird-reaction-badge__inner\">\n        <div className=\"sendbird-reaction-badge__inner__icon\">\n          {children}\n        </div>\n        <Label\n          className={(children && count) && 'sendbird-reaction-badge__inner__count'}\n          type={LabelTypography.CAPTION_3}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {count}\n        </Label>\n      </div>\n    </div>\n  );\n});\n\nReactionBadge.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  children: PropTypes.element.isRequired,\n  count: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  selected: PropTypes.bool,\n  isAdd: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n\nReactionBadge.defaultProps = {\n  className: '',\n  count: '',\n  selected: false,\n  isAdd: false,\n  onClick: () => { },\n};\n\nexport default ReactionBadge;\n","import React, { ReactElement, useContext, useRef } from 'react';\nimport { Emoji, EmojiContainer, FileMessage, Reaction, UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport Tooltip from '../Tooltip';\nimport TooltipWrapper from '../TooltipWrapper';\nimport ReactionBadge from '../ReactionBadge';\nimport ReactionButton from '../ReactionButton';\nimport ImageRenderer from '../ImageRenderer';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport ContextMenu, { EmojiListItems } from '../ContextMenu';\n\nimport { getClassName, getEmojiListAll, getEmojiMapAll, getEmojiTooltipString, isReactedBy } from '../../utils';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  userId: string;\n  message: UserMessage | FileMessage;\n  emojiContainer: EmojiContainer;\n  memberNicknamesMap: Map<string, string>;\n  spaceFromTrigger?: Record<string, unknown>;\n  isByMe?: boolean;\n  toggleReaction?: (message: UserMessage | FileMessage, key: string, byMe: boolean) => void;\n}\n\nexport default function EmojiReactions2({\n  className,\n  userId,\n  message,\n  emojiContainer,\n  memberNicknamesMap,\n  spaceFromTrigger = {},\n  isByMe = false,\n  toggleReaction,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const emojisMap = getEmojiMapAll(emojiContainer);\n  const addReactionRef = useRef(null);\n\n  return (\n    <div className={getClassName([\n      className, 'sendbird-emoji-reactions',\n      isByMe ? 'outgoing' : 'incoming',\n    ])}>\n      {(message?.reactions?.length > 0) && (\n        message.reactions.map((reaction: Reaction): ReactElement => {\n          const reactedByMe = isReactedBy(userId, reaction);\n          return (\n            <TooltipWrapper\n              className=\"sendbird-emoji-reactions__reaction-badge\"\n              key={reaction?.key}\n              hoverTooltip={(reaction?.userIds?.length > 0) && (\n                <Tooltip>\n                  {getEmojiTooltipString(reaction, userId, memberNicknamesMap, stringSet)}\n                </Tooltip>\n              )}\n            >\n              <ReactionBadge\n                count={reaction.userIds.length}\n                selected={reactedByMe}\n                onClick={() => toggleReaction(message, reaction.key, reactedByMe)}\n              >\n                <ImageRenderer\n                  circle\n                  url={emojisMap.get(reaction?.key)?.url || ''}\n                  width=\"20px\"\n                  height=\"20px\"\n                  defaultComponent={(\n                    <Icon width=\"20px\" height=\"20px\" type={IconTypes.QUESTION} />\n                  )}\n                />\n              </ReactionBadge>\n            </TooltipWrapper>\n          );\n        })\n      )}\n      {(message?.reactions?.length < emojisMap.size) && (\n        <ContextMenu\n          menuTrigger={(toggleDropdown: () => void): ReactElement => (\n            <ReactionBadge\n              className=\"sendbird-emoji-reactions__add-reaction-badge\"\n              ref={addReactionRef}\n              isAdd\n              onClick={toggleDropdown}\n            >\n              <Icon\n                type={IconTypes.EMOJI_MORE}\n                fillColor={IconColors.ON_BACKGROUND_3}\n                width=\"20px\"\n                height=\"20px\"\n              />\n            </ReactionBadge>\n          )}\n          menuItems={(closeDropdown: () => void): ReactElement => (\n            <EmojiListItems\n              parentRef={addReactionRef}\n              parentContainRef={addReactionRef}\n              closeDropdown={closeDropdown}\n              spacefromTrigger={spaceFromTrigger}\n            >\n              {getEmojiListAll(emojiContainer).map((emoji: Emoji): ReactElement => {\n                const isReacted: boolean = message?.reactions?.\n                  filter((reaction: Reaction): boolean => reaction.key === emoji.key)[0]?.userIds?.\n                  some((reactorId: string): boolean => reactorId === userId);\n                return (\n                  <ReactionButton\n                    key={emoji.key}\n                    width=\"36px\"\n                    height=\"36px\"\n                    selected={isReacted}\n                    onClick={(): void => {\n                      closeDropdown();\n                      toggleReaction(message, emoji.key, isReacted);\n                    }}\n                  >\n                    <ImageRenderer\n                      url={emoji?.url || ''}\n                      width=\"28px\"\n                      height=\"28px\"\n                      placeHolder={(style: Record<string, unknown>): ReactElement => (\n                        <div style={style}>\n                          <Icon\n                            type={IconTypes.QUESTION}\n                            fillColor={IconColors.ON_BACKGROUND_3}\n                            width=\"28px\"\n                            height=\"28px\"\n                          />\n                        </div>\n                      )}\n                    />\n                  </ReactionButton>\n                );\n              })}\n            </EmojiListItems>\n          )}\n        />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport Label, { LabelColors, LabelTypography } from '../Label';\n\nexport default function AdminMessage({\n  className,\n  message,\n}) {\n  if (!(message.isAdminMessage || message.messageType) || !message.isAdminMessage() || message.messageType !== 'admin') {\n    return null;\n  }\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-admin-message',\n      ].join(' ')}\n    >\n      <Label\n        className=\"sendbird-admin-message__text\"\n        type={LabelTypography.CAPTION_2}\n        color={LabelColors.ONBACKGROUND_2}\n      >\n        {message.message}\n      </Label>\n    </div>\n  );\n}\n\nAdminMessage.propTypes = {\n  message: PropTypes.shape({\n    message: PropTypes.string,\n    messageType: PropTypes.string,\n    isAdminMessage: PropTypes.func,\n  }),\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n};\n\nAdminMessage.defaultProps = {\n  message: {},\n  className: '',\n};\n","import React, { ReactElement, useContext } from 'react';\nimport { UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport {\n  getClassName,\n  isEditedMessage,\n} from '../../utils';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage;\n  isByMe?: boolean;\n  mouseHover?: boolean;\n}\n\nexport default function TextMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <Label\n      type={LabelTypography.BODY_1}\n      color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n    >\n      <p className={getClassName([\n        className,\n        'sendbird-text-message-item-body',\n        isByMe ? 'outgoing' : 'incoming',\n        mouseHover ? 'mouse-hover' : '',\n        message?.reactions?.length > 0 ? 'reactions' : '',\n      ])}>\n        {message?.message}\n        {\n          isEditedMessage(message) && (\n            <Label\n              className=\"sendbird-text-message-item-body__message edited\"\n              type={LabelTypography.BODY_1}\n              color={isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2}\n            >\n              {` ${stringSet.MESSAGE_EDITED} `}\n            </Label>\n          )\n        }\n      </p>\n    </Label>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport { FileMessage } from 'sendbird';\nimport './index.scss';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport TextButton from '../TextButton';\nimport { getClassName, getUIKitFileType, truncateString } from '../../utils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: FileMessage;\n  isByMe?: boolean;\n  mouseHover?: boolean;\n}\n\nexport default function FileMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n}: Props): ReactElement {\n\n  return (\n    <div className={getClassName([\n      className,\n      'sendbird-file-message-item-body',\n      isByMe ? 'outgoing' : 'incoming',\n      mouseHover ? 'mouse-hover' : '',\n      message?.reactions?.length > 0 ? 'reactions' : '',\n    ])}>\n      <div className=\"sendbird-file-message-item-body__file-icon\">\n        <Icon\n          className={'sendbird-file-message-item-body__file-icon__icon'}\n          type={{\n            IMAGE: IconTypes.PHOTO,\n            VIDEO: IconTypes.PLAY,\n            AUDIO: IconTypes.FILE_AUDIO,\n            GIF: IconTypes.GIF,\n            OTHERS: IconTypes.FILE_DOCUMENT,\n          }[getUIKitFileType(message?.type)]}\n          fillColor={IconColors.PRIMARY}\n          width=\"24px\"\n          height=\"24px\"\n        />\n      </div>\n      <TextButton\n        className=\"sendbird-file-message-item-body__file-name\"\n        onClick={() => { window.open(message?.url) }}\n        color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n      >\n        <Label\n          className=\"sendbird-file-message-item-body__file-name__text\"\n          type={LabelTypography.BODY_1}\n          color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n        >\n          {truncateString(message?.name || message?.url)}\n        </Label>\n      </TextButton>\n    </div>\n  );\n}\n","import React, { ReactElement, useState } from 'react';\nimport { FileMessage } from 'sendbird';\nimport './index.scss';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport ImageRenderer from '../ImageRenderer';\nimport { getClassName, isGifMessage, isVideoMessage } from '../../utils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: FileMessage;\n  isByMe?: boolean;\n  mouseHover?: boolean;\n  showFileViewer?: (bool: boolean) => void;\n}\n\nexport default function ThumbnailMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n  showFileViewer,\n}: Props): ReactElement {\n  const { thumbnails = [] } = message;\n  const thumbnailUrl: string = thumbnails.length > 0 ? thumbnails[0]?.url : '';\n  const [imageRendered, setImageRendered] = useState(false);\n\n  return (\n    <div\n      className={getClassName([\n        className,\n        'sendbird-thumbnail-message-item-body',\n        isByMe ? 'outgoing' : 'incoming',\n        mouseHover ? 'mouse-hover' : '',\n        message?.reactions?.length > 0 ? 'reactions' : '',\n      ])}\n      onClick={() => {\n        if(message?.sendingStatus === 'succeeded'){\n          showFileViewer(true);\n        }\n      }}\n    >\n      <ImageRenderer\n        className=\"sendbird-thumbnail-message-item-body__thumbnail\"\n        url={thumbnailUrl || message?.url}\n        alt={message?.type}\n        width=\"360px\"\n        height=\"270px\"\n        onLoad={() => { setImageRendered(true) }}\n        placeHolder={(style) => (\n          <div\n            className=\"sendbird-thumbnail-message-item-body__placeholder\"\n            style={style}\n          >\n            <div className=\"sendbird-thumbnail-message-item-body__placeholder__icon\">\n              <Icon\n                type={isVideoMessage(message) ? IconTypes.PLAY : IconTypes.PHOTO}\n                fillColor={IconColors.ON_BACKGROUND_2}\n                width=\"34px\"\n                height=\"34px\"\n              />\n            </div>\n          </div>\n        )}\n      />\n      {\n        (isVideoMessage(message) && !thumbnailUrl) && !imageRendered && (\n          <video className=\"sendbird-thumbnail-message-item-body__video\">\n            <source src={message?.url} type={message?.type} />\n          </video>\n        )\n      }\n      <div className=\"sendbird-thumbnail-message-item-body__image-cover\" />\n      {\n        (isVideoMessage(message) || isGifMessage(message)) && (\n          <div className=\"sendbird-thumbnail-message-item-body__icon-wrapper\">\n            <div className=\"sendbird-thumbnail-message-item-body__icon-wrapper__icon\">\n              <Icon\n                type={isVideoMessage(message) ? IconTypes.PLAY : IconTypes.GIF}\n                fillColor={IconColors.GRAY}\n                width=\"34px\"\n                height=\"34px\"\n              />\n            </div>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n","import React, { ReactElement, useContext } from 'react';\nimport { UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport LinkLabel from '../LinkLabel';\nimport Icon, { IconTypes } from '../Icon';\nimport ImageRenderer from '../ImageRenderer';\nimport {\n  getClassName,\n  isEditedMessage,\n  isUrl,\n} from '../../utils';\nimport uuidv4 from '../../utils/uuid';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage;\n  isByMe?: boolean;\n  mouseHover?: boolean;\n}\n\nexport default function OGMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const openOGUrl = (): void => {\n    if (message?.ogMetaData?.url) window.open(message?.ogMetaData?.url);\n  };\n\n  return (\n    <div className={getClassName([\n      className,\n      'sendbird-og-message-item-body',\n      isByMe ? 'outgoing' : 'incoming',\n      mouseHover ? 'mouse-hover' : '',\n      message?.reactions?.length > 0 ? 'reactions' : '',\n    ])}>\n      <Label\n        key={uuidv4()}\n        type={LabelTypography.BODY_1}\n        color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n      >\n        <p className=\"sendbird-og-message-item-body__text-bubble\">\n          {\n            message?.message.split(' ').map((word: string) => (\n              isUrl(word)\n                ? (\n                  <LinkLabel\n                    className=\"sendbird-og-message-item-body__text-bubble__message\"\n                    key={uuidv4()}\n                    src={word}\n                    type={LabelTypography.BODY_1}\n                    color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n                  >\n                    {word}\n                  </LinkLabel>\n                )\n                : (`${word} `)\n            ))\n          }\n          {\n            isEditedMessage(message) && (\n              <Label\n                className=\"sendbird-og-message-item-body__text-bubble__message\"\n                type={LabelTypography.BODY_1}\n                color={isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2}\n              >\n                {` ${stringSet.MESSAGE_EDITED} `}\n              </Label>\n            )\n          }\n        </p>\n      </Label>\n      <div\n        className=\"sendbird-og-message-item-body__og-thumbnail\"\n        onClick={openOGUrl}\n      >\n        <ImageRenderer\n          className=\"sendbird-og-message-item-body__og-thumbnail__image\"\n          url={message?.ogMetaData?.defaultImage?.url || ''}\n          alt={message?.ogMetaData?.defaultImage?.alt}\n          // TODO: Change fixing width and height lengths\n          width=\"320px\"\n          height=\"180px\"\n          defaultComponent={(\n            <div className=\"sendbird-og-message-item-body__og-thumbnail__place-holder\">\n              <Icon\n                className=\"sendbird-og-message-item-body__og-thumbnail__place-holder__icon\"\n                type={IconTypes.THUMBNAIL_NONE}\n                width=\"56px\"\n                height=\"56px\"\n              />\n            </div>\n          )}\n        />\n      </div>\n      <div\n        className=\"sendbird-og-message-item-body__description\"\n        onClick={openOGUrl}\n      >\n        {message?.ogMetaData?.title && (\n          <Label\n            className=\"sendbird-og-message-item-body__description__title\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {message.ogMetaData.title}\n          </Label>\n        )}\n        {message?.ogMetaData?.description && (\n          <Label\n            className=\"sendbird-og-message-item-body__description__description\"\n            type={LabelTypography.BODY_2}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {message.ogMetaData.description}\n          </Label>\n        )}\n        {message?.ogMetaData?.url && (\n          <Label\n            className=\"sendbird-og-message-item-body__description__url\"\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {message.ogMetaData.url}\n          </Label>\n        )}\n      </div>\n      <div className=\"sendbird-og-message-item-body__cover\" />\n    </div>\n  );\n}\n","import React, { ReactElement, useContext } from 'react';\nimport './index.scss';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { CoreMessageType, getClassName } from '../../utils';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  isByMe?: boolean;\n  message: CoreMessageType;\n  mouseHover?: boolean;\n}\n\nexport default function UnknownMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className={getClassName([\n      className,\n      'sendbird-unknown-message-item-body',\n      isByMe ? 'outgoing' : 'incoming',\n      mouseHover ? 'mouse-hover' : '',\n      message?.reactions?.length > 0 ? 'reactions' : '',\n    ])}>\n      <Label\n        className=\"sendbird-unknown-message-item-body__header\"\n        type={LabelTypography.BODY_1}\n        color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n      >\n        {stringSet.UNKNOWN__UNKNOWN_MESSAGE_TYPE}\n      </Label>\n      <Label\n        className=\"sendbird-unknown-message-item-body__description\"\n        type={LabelTypography.BODY_1}\n        color={isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2}\n      >\n        {stringSet.UNKNOWN__CANNOT_READ_MESSAGE}\n      </Label>\n    </div>\n  );\n}\n","import React, { ReactElement, useContext, useState } from 'react';\nimport { FileMessage, UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport ImageRenderer from '../ImageRenderer';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport {\n  getClassName,\n  getUIKitFileType,\n  getUIKitFileTypes,\n  isFileMessage,\n  isGif,\n  isSupportedFileView,\n  isThumbnailMessage,\n  isUserMessage,\n  isVideo,\n  truncateString,\n} from '../../utils';\ninterface Props {\n  message?: UserMessage | FileMessage;\n  userId?: string;\n  isByMe?: boolean;\n  className?: string | Array<string>;\n  onClick?: () => void;\n}\n\nexport default function QuoteMessage({\n  message,\n  userId = '',\n  isByMe = false,\n  className,\n  onClick,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n\n  const { parentMessage } = message;\n  const parentMessageSender = (parentMessage as UserMessage | FileMessage)?.sender;\n  const parentMessageSenderNickname = (userId === parentMessageSender?.userId) ? stringSet.QUOTED_MESSAGE__CURRENT_USER : parentMessageSender?.nickname;\n  const parentMessageUrl = (parentMessage as FileMessage)?.url || '';\n  const parentMessageType = (parentMessage as FileMessage)?.type;\n  const currentMessageSenderNickname = (userId === message?.sender?.userId) ? stringSet.QUOTED_MESSAGE__CURRENT_USER : message?.sender?.nickname;\n\n  const [isThumbnailLoaded, setThumbnailLoaded] = useState(false);\n  const uikitFileTypes = getUIKitFileTypes();\n  const splitFileName = (parentMessage as FileMessage)?.name ? (parentMessage as FileMessage).name.split('/') : parentMessageUrl.split('/');\n\n  return (\n    <div\n      className={getClassName([className, 'sendbird-quote-message', isByMe ? 'outgoing' : 'incoming'])}\n      key={parentMessage?.messageId}\n      onClick={() => { if (onClick) onClick() }}\n    >\n      <div className=\"sendbird-quote-message__replied-to\">\n        <Icon\n          className=\"sendbird-quote-message__replied-to__icon\"\n          type={IconTypes.REPLY}\n          fillColor={IconColors.ON_BACKGROUND_3}\n          width=\"12px\"\n          height=\"12px\"\n        />\n        <Label\n          className=\"sendbird-quote-message__replied-to__text\"\n          type={LabelTypography.CAPTION_2}\n          color={LabelColors.ONBACKGROUND_3}\n        >\n          {`${currentMessageSenderNickname} ${stringSet.QUOTED_MESSAGE__REPLIED_TO} ${parentMessageSenderNickname}`}\n        </Label>\n      </div>\n      <div className=\"sendbird-quote-message__replied-message\">\n        {/* text message */}\n        {(isUserMessage(parentMessage as UserMessage) && (parentMessage as UserMessage)?.message?.length > 0) && (\n          <div className=\"sendbird-quote-message__replied-message__text-message\">\n            <Label\n              className=\"sendbird-quote-message__replied-message__text-message__word\"\n              type={LabelTypography.BODY_2}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {(parentMessage as UserMessage)?.message}\n            </Label>\n          </div>\n        )}\n        {/* thumbnail message */}\n        {(isThumbnailMessage(parentMessage as FileMessage) && parentMessageUrl) && (\n          <div className=\"sendbird-quote-message__replied-message__thumbnail-message\">\n            <ImageRenderer\n              className=\"sendbird-quote-message__replied-message__thumbnail-message__image\"\n              url={parentMessageUrl}\n              alt={parentMessageType}\n              width=\"144px\"\n              height=\"108px\"\n              onLoad={() => setThumbnailLoaded(true)}\n              defaultComponent={(\n                <div className=\"sendbird-quote-message__replied-message__thumbnail-message__placeholder\">\n                  <div className=\"sendbird-quote-message__replied-message__thumbnail-message__placeholder__icon\">\n                    <Icon\n                      type={isVideo(parentMessageType) ? IconTypes.PLAY : IconTypes.PHOTO}\n                      fillColor={IconColors.ON_BACKGROUND_2}\n                      width=\"22px\"\n                      height=\"22px\"\n                    />\n                  </div>\n                </div>\n              )}\n            />\n            {(isVideo(parentMessageType) && !((parentMessage as FileMessage)?.thumbnails?.length > 0)) && (\n              <>\n                <video className=\"sendbird-quote-message__replied-message__thumbnail-message__video\">\n                  <source src={parentMessageUrl} type={parentMessageType} />\n                </video>\n                <div className=\"sendbird-quote-message__replied-message__thumbnail-message__cover\">\n                  <div className=\"sendbird-quote-message__replied-message__thumbnail-message__cover__icon\">\n                    <Icon\n                      type={IconTypes.PLAY}\n                      fillColor={IconColors.GRAY}\n                      width=\"14px\"\n                      height=\"14px\"\n                    />\n                  </div>\n                </div>\n              </>\n            )}\n            {(isThumbnailLoaded && isGif(parentMessageType)) && (\n              <div className=\"sendbird-quote-message__replied-message__thumbnail-message__cover\">\n                <div className=\"sendbird-quote-message__replied-message__thumbnail-message__cover__icon\">\n                  <Icon\n                    type={IconTypes.GIF}\n                    fillColor={IconColors.GRAY}\n                    width=\"14px\"\n                    height=\"14px\"\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n        {/* file message */}\n        {(isFileMessage(parentMessage as FileMessage) && !isSupportedFileView((parentMessage as FileMessage).type) && parentMessageUrl) && (\n          <div className=\"sendbird-quote-message__replied-message__file-message\">\n            <Icon\n              className=\"sendbird-quote-message__replied-message__file-message__type-icon\"\n              type={{\n                [uikitFileTypes.IMAGE]: IconTypes.PHOTO,\n                [uikitFileTypes.VIDEO]: IconTypes.PLAY,\n                [uikitFileTypes.AUDIO]: IconTypes.FILE_AUDIO,\n                [uikitFileTypes.GIF]: IconTypes.GIF,\n                [uikitFileTypes.OTHERS]: IconTypes.FILE_DOCUMENT,\n              }[getUIKitFileType(parentMessageType)]}\n              fillColor={IconColors.ON_BACKGROUND_3}\n              width=\"16px\"\n              height=\"16px\"\n            />\n            <Label\n              className=\"sendbird-quote-message__replied-message__file-message__file-name\"\n              type={LabelTypography.BODY_2}\n              color={LabelColors.ONBACKGROUND_3}\n            >\n              {truncateString(splitFileName[splitFileName.length - 1])}\n            </Label>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useContext,\n  useRef,\n  useState,\n} from 'react';\nimport { GroupChannel, AdminMessage, UserMessage, FileMessage, EmojiContainer } from 'sendbird';\nimport format from 'date-fns/format';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport UserProfile from '../UserProfile';\nimport MessageStatus from '../MessageStatus';\nimport MessageItemMenu from '../MessageItemMenu';\nimport MessageItemReactionMenu from '../MessageItemReactionMenu';\nimport ContextMenu, { MenuItems } from '../ContextMenu';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport EmojiReactions from '../EmojiReactions';\n\nimport ClientAdminMessage from '../AdminMessage';\nimport TextMessageItemBody from '../TextMessageItemBody';\nimport FileMessageItemBody from '../FileMessageItemBody';\nimport ThumbnailMessageItemBody from '../ThumbnailMessageItemBody';\nimport OGMessageItemBody from '../OGMessageItemBody';\nimport UnknownMessageItemBody from '../UnknownMessageItemBody';\nimport QuoteMessage from '../QuoteMessage';\n\nimport {\n  getClassName,\n  getUIKitMessageTypes,\n  getUIKitMessageType,\n  isTextMessage,\n  isOGMessage,\n  isThumbnailMessage,\n  getSenderName,\n} from '../../utils';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { ReplyType } from '../../index.js';\n\ninterface Props {\n  className?: string | Array<string>;\n  userId: string;\n  channel: GroupChannel;\n  message: AdminMessage | UserMessage | FileMessage;\n  disabled?: boolean;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n  useReaction?: boolean;\n  replyType?: ReplyType;\n  nicknamesMap?: Map<string, string>;\n  emojiContainer?: EmojiContainer;\n  scrollToMessage?: (createdAt: number, messageId: number) => void;\n  showEdit?: (bool: boolean) => void;\n  showRemove?: (bool: boolean) => void;\n  showFileViewer?: (bool: boolean) => void;\n  resendMessage?: (message: UserMessage | FileMessage) => void;\n  toggleReaction?: (message: UserMessage | FileMessage, reactionKey: string, isReacted: boolean) => void;\n  setQuoteMessage?: (message: UserMessage | FileMessage) => void;\n}\nexport default function MessageContent({\n  className,\n  userId,\n  channel,\n  message,\n  disabled = false,\n  chainTop = false,\n  chainBottom = false,\n  useReaction = false,\n  replyType,\n  nicknamesMap,\n  emojiContainer,\n  scrollToMessage,\n  showEdit,\n  showRemove,\n  showFileViewer,\n  resendMessage,\n  toggleReaction,\n  setQuoteMessage,\n}: Props): ReactElement {\n  const messageTypes = getUIKitMessageTypes();\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n  const { dateLocale } = useContext(LocalizationContext);\n  const avatarRef = useRef(null);\n  const [mouseHover, setMouseHover] = useState(false);\n  const [supposedHover, setSupposedHover] = useState(false);\n\n  const isByMe = (userId === (message as UserMessage | FileMessage)?.sender?.userId)\n    || ((message as UserMessage | FileMessage).sendingStatus === 'pending')\n    || ((message as UserMessage | FileMessage).sendingStatus === 'failed');\n  const isByMeClassName = isByMe ? 'outgoing' : 'incoming';\n  const chainTopClassName = chainTop ? 'chain-top' : '';\n  const useReactionClassName = useReaction ? 'use-reactions' : '';\n  const supposedHoverClassName = supposedHover ? 'supposed-hover' : '';\n  const useReplying = !!((replyType === 'QUOTE_REPLY') && message?.parentMessageId && message?.parentMessage);\n  const useReplyingClassName = useReplying ? 'use-quote' : '';\n  if (message?.isAdminMessage?.() || message?.messageType === 'admin') {\n    return (<ClientAdminMessage message={message} />);\n  }\n  return (\n    <div\n      className={getClassName([className, 'sendbird-message-content', isByMeClassName])}\n      onMouseOver={() => setMouseHover(true)}\n      onMouseLeave={() => setMouseHover(false)}\n    >\n      {/* left */}\n      <div className={getClassName(['sendbird-message-content__left', useReactionClassName, isByMeClassName, useReplyingClassName])}>\n        {(!isByMe && !chainBottom) && (\n          /** user profile */\n          <ContextMenu\n            menuTrigger={(toggleDropdown: () => void): ReactElement => (\n              <Avatar\n                className=\"sendbird-message-content__left__avatar\"\n                src={message?.sender?.profileUrl || ''}\n                ref={avatarRef}\n                width=\"28px\"\n                height=\"28px\"\n                onClick={(): void => { if (!disableUserProfile) toggleDropdown() }}\n              />\n            )}\n            menuItems={(closeDropdown: () => void): ReactElement => (\n              <MenuItems\n                /**\n                * parentRef: For catching location(x, y) of MenuItems\n                * parentContainRef: For toggling more options(menus & reactions)\n                */\n                parentRef={avatarRef}\n                parentContainRef={avatarRef}\n                closeDropdown={closeDropdown}\n                style={{ paddingTop: 0, paddingBottom: 0 }}\n              >\n                {renderUserProfile\n                  ? renderUserProfile({ user: message?.sender, close: closeDropdown })\n                  : (<UserProfile user={message.sender} onSuccess={closeDropdown} />)\n                }\n              </MenuItems>\n            )}\n          />\n        )}\n        {/* outgoing menu */}\n        {isByMe && (\n          <div className={getClassName(['sendbird-message-content-menu', useReactionClassName, supposedHoverClassName, isByMeClassName])}>\n            <MessageItemMenu\n              className=\"sendbird-message-content-menu__normal-menu\"\n              channel={channel}\n              message={message as UserMessage | FileMessage}\n              isByMe={isByMe}\n              replyType={replyType}\n              disabled={disabled}\n              showEdit={showEdit}\n              showRemove={showRemove}\n              resendMessage={resendMessage}\n              setQuoteMessage={setQuoteMessage}\n              setSupposedHover={setSupposedHover}\n            />\n            {useReaction && (\n              <MessageItemReactionMenu\n                className=\"sendbird-message-content-menu__reaction-menu\"\n                message={message as UserMessage | FileMessage}\n                channel={channel}\n                userId={userId}\n                spaceFromTrigger={{}}\n                emojiContainer={emojiContainer}\n                toggleReaction={toggleReaction}\n                setSupposedHover={setSupposedHover}\n              />\n            )}\n          </div>\n        )}\n      </div>\n      {/* middle */}\n      <div className=\"sendbird-message-content__middle\">\n        {(!isByMe && !chainTop && !useReplying) && (\n          <Label\n            className=\"sendbird-message-content__middle__sender-name\"\n            type={LabelTypography.CAPTION_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {getSenderName(message)}\n          </Label>\n        )}\n        {/* quote message */}\n        {(useReplying) ? (\n          <div className={getClassName(['sendbird-message-content__middle__quote-message', isByMe ? 'outgoing' : 'incoming', useReplyingClassName])}>\n            <QuoteMessage\n              message={message}\n              userId={userId}\n              isByMe={isByMe}\n              onClick={() => {\n                if (message?.parentMessage?.createdAt && message?.parentMessageId) {\n                  scrollToMessage(message.parentMessage.createdAt, message.parentMessageId);\n                }\n              }}\n            />\n          </div>\n        ) : null}\n        {/* container: message item body + emoji reactions */}\n        <div className={getClassName(['sendbird-message-content__middle__body-container'])} >\n          {/* message status component */}\n          {(isByMe && !chainBottom) && (\n            <div className={getClassName(['sendbird-message-content__middle__body-container__created-at', 'left', supposedHoverClassName])}>\n              <div className=\"sendbird-message-content__middle__body-container__created-at__component-container\">\n                <MessageStatus\n                  message={message}\n                  channel={channel}\n                />\n              </div>\n            </div>\n          )}\n          {/* message item body components */}\n          {isTextMessage(message as UserMessage) && (\n            <TextMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as UserMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n            />\n          )}\n          {(isOGMessage(message as UserMessage)) && (\n            <OGMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as UserMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n            />\n          )}\n          {(getUIKitMessageType((message as FileMessage)) === messageTypes.FILE) && (\n            <FileMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as FileMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n            />\n          )}\n          {(isThumbnailMessage(message as FileMessage)) && (\n            <ThumbnailMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as FileMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n              showFileViewer={showFileViewer}\n            />\n          )}\n          {(getUIKitMessageType((message as FileMessage)) === messageTypes.UNKNOWN) && (\n            <UnknownMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n            />\n          )}\n          {/* reactions */}\n          {(useReaction && message?.reactions?.length > 0) && (\n            <div className={getClassName([\n              'sendbird-message-content-reactions',\n              (!isByMe || isThumbnailMessage(message as FileMessage) || isOGMessage(message as UserMessage)) ? '' : 'primary',\n              mouseHover ? 'mouse-hover' : '',\n            ])}>\n              <EmojiReactions\n                userId={userId}\n                message={message}\n                isByMe={isByMe}\n                emojiContainer={emojiContainer}\n                memberNicknamesMap={nicknamesMap}\n                toggleReaction={toggleReaction}\n              />\n            </div>\n          )}\n          {(!isByMe && !chainBottom) && (\n            <Label\n              className={getClassName(['sendbird-message-content__middle__body-container__created-at', 'right', supposedHoverClassName])}\n              type={LabelTypography.CAPTION_3}\n              color={LabelColors.ONBACKGROUND_2}\n            >\n              {format(message.createdAt, 'p', { locale: dateLocale })}\n            </Label>\n          )}\n        </div>\n      </div>\n      {/* right */}\n      <div className={getClassName(['sendbird-message-content__right', chainTopClassName, useReactionClassName, useReplyingClassName])}>\n        {/* incoming menu */}\n        {!isByMe && (\n          <div className={getClassName(['sendbird-message-content-menu', chainTopClassName, supposedHoverClassName, isByMeClassName])}>\n            {useReaction && (\n              <MessageItemReactionMenu\n                className=\"sendbird-message-content-menu__reaction-menu\"\n                message={message as UserMessage | FileMessage}\n                channel={channel}\n                userId={userId}\n                spaceFromTrigger={{}}\n                emojiContainer={emojiContainer}\n                toggleReaction={toggleReaction}\n                setSupposedHover={setSupposedHover}\n              />\n            )}\n            <MessageItemMenu\n              className=\"sendbird-message-content-menu__normal-menu\"\n              channel={channel}\n              message={message as UserMessage | FileMessage}\n              isByMe={isByMe}\n              replyType={replyType}\n              disabled={disabled}\n              showEdit={showEdit}\n              showRemove={showRemove}\n              resendMessage={resendMessage}\n              setQuoteMessage={setQuoteMessage}\n              setSupposedHover={setSupposedHover}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Modal from '../../../ui/Modal';\nimport { ButtonTypes } from '../../../ui/Button';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\nconst RemoveMessage = (props) => {\n  const {\n    onCloseModal,\n    onDeleteMessage,\n    message,\n  } = props;\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <Modal\n      type={ButtonTypes.DANGER}\n      disabled={message?.threadInfo?.replyCount > 0}\n      onCancel={onCloseModal}\n      onSubmit={onDeleteMessage}\n      submitText=\"Delete\"\n      titleText={stringSet.MODAL__DELETE_MESSAGE__TITLE}\n    />\n  );\n};\n\nRemoveMessage.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  onDeleteMessage: PropTypes.func.isRequired,\n  message: PropTypes.shape({\n    threadInfo: PropTypes.shape({\n      replyCount: PropTypes.number,\n    }),\n  }).isRequired,\n};\n\nexport default RemoveMessage;\n","import React, {\n  useState,\n  useRef,\n  useMemo,\n  useLayoutEffect,\n  useContext,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport format from 'date-fns/format';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport MessageContent from '../../../ui/MessageContent';\nimport DateSeparator from '../../../ui/DateSeparator';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport MessageInput from '../../../ui/MessageInput';\nimport FileViewer from '../../../ui/FileViewer';\nimport RemoveMessageModal from './RemoveMessage';\nimport { getClassName } from '../../../utils';\n\nexport default function MessageHoc({\n  message,\n  userId,\n  disabled,\n  editDisabled,\n  hasSeparator,\n  deleteMessage,\n  updateMessage,\n  scrollToMessage,\n  resendMessage,\n  useReaction,\n  replyType,\n  chainTop,\n  chainBottom,\n  membersMap,\n  emojiContainer,\n  animatedMessageId,\n  highLightedMessageId,\n  toggleReaction,\n  quoteMessage,\n  setQuoteMessage,\n  renderCustomMessage,\n  currentGroupChannel,\n  handleScroll,\n}) {\n  const { sender = {} } = message;\n  const [showEdit, setShowEdit] = useState(false);\n  const [showRemove, setShowRemove] = useState(false);\n  const [showFileViewer, setShowFileViewer] = useState(false);\n  const [isAnimated, setIsAnimated] = useState(false);\n  const [isHighlighted, setIsHighlighted] = useState(false);\n  const editMessageInputRef = useRef(null);\n  const useMessageScrollRef = useRef(null);\n\n  const { dateLocale } = useContext(LocalizationContext);\n  useLayoutEffect(() => {\n    handleScroll();\n  }, [showEdit, message?.reactions?.length]);\n\n  useLayoutEffect(() => {\n    if (highLightedMessageId === message.messageId) {\n      if (useMessageScrollRef && useMessageScrollRef.current) {\n        useMessageScrollRef.current.scrollIntoView({\n          block: 'center',\n          inline: 'center',\n        });\n        setIsAnimated(false);\n        setTimeout(() => {\n          setIsHighlighted(true);\n        }, 500);\n      }\n    } else {\n      setIsHighlighted(false);\n    }\n  }, [highLightedMessageId, useMessageScrollRef.current, message.messageId]);\n  useLayoutEffect(() => {\n    if (animatedMessageId === message.messageId) {\n      if (useMessageScrollRef && useMessageScrollRef.current) {\n        useMessageScrollRef.current.scrollIntoView({\n          block: 'center',\n          inline: 'center',\n        });\n        setIsHighlighted(false);\n        setTimeout(() => {\n          setIsAnimated(true);\n        }, 500);\n      }\n    } else {\n      setIsAnimated(false);\n    }\n  }, [animatedMessageId, useMessageScrollRef.current, message.messageId]);\n  const RenderedMessage = useMemo(() => {\n    if (renderCustomMessage) {\n      return renderCustomMessage(message, currentGroupChannel, chainTop, chainBottom);\n      // TODO: Let's change this to object type on next major version up\n      // and add params 'hasSeparator' and 'menuDisabled', scrollToMessage\n    }\n    return null;\n  }, [message, message.message, renderCustomMessage]);\n\n  const isByMe = (userId === sender?.userId)\n    || (message.requestState === 'pending')\n    || (message.requestState === 'failed');\n\n  if (RenderedMessage) {\n    return (\n      <div\n        ref={useMessageScrollRef}\n        className={getClassName([\n          'sendbird-msg-hoc sendbird-msg--scroll-ref',\n          isAnimated ? 'sendbird-msg-hoc__animated' : '',\n          isHighlighted ? 'sendbird-msg-hoc__highlighted' : '',\n        ])}\n      >\n        {/* date-separator */}\n        {\n          hasSeparator && (\n            <DateSeparator>\n              <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n                {format(message?.createdAt, 'MMMM dd, yyyy', { locale: dateLocale })}\n              </Label>\n            </DateSeparator>\n          )\n        }\n        <RenderedMessage message={message} />\n      </div>\n    );\n  }\n\n  if (showEdit) {\n    return (\n      <MessageInput\n        isEdit\n        disabled={editDisabled}\n        ref={editMessageInputRef}\n        name={message.messageId}\n        onSendMessage={updateMessage}\n        onCancelEdit={() => { setShowEdit(false); }}\n        value={message.message}\n      />\n    );\n  }\n\n  return (\n    <div\n      ref={useMessageScrollRef}\n      className={getClassName([\n        'sendbird-msg-hoc sendbird-msg--scroll-ref',\n        isAnimated ? 'sendbird-msg-hoc__animated' : '',\n        isHighlighted ? 'sendbird-msg-hoc__highlighted' : '',\n      ])}\n      style={{ marginBottom: '2px' }}\n    >\n      {/* date-separator */}\n      {\n        hasSeparator && (\n          <DateSeparator>\n            <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n              {format(message?.createdAt, 'MMMM dd, yyyy', { locale: dateLocale })}\n            </Label>\n          </DateSeparator>\n        )\n      }\n      {/* Message */}\n      <MessageContent\n        className=\"sendbird-message-hoc__message-content\"\n        userId={userId}\n        scrollToMessage={scrollToMessage}\n        channel={currentGroupChannel}\n        message={message}\n        disabled={disabled}\n        chainTop={chainTop}\n        chainBottom={chainBottom}\n        useReaction={useReaction}\n        replyType={replyType}\n        nicknamesMap={membersMap}\n        emojiContainer={emojiContainer}\n        showEdit={setShowEdit}\n        showRemove={setShowRemove}\n        showFileViewer={setShowFileViewer}\n        resendMessage={resendMessage}\n        toggleReaction={toggleReaction}\n        quoteMessage={quoteMessage}\n        setQuoteMessage={setQuoteMessage}\n      />\n      {/* Modal */}\n      {\n        showRemove && (\n          <RemoveMessageModal\n            message={message}\n            onCloseModal={() => setShowRemove(false)}\n            onDeleteMessage={() => {\n              deleteMessage(message);\n              if (message?.messageId === quoteMessage?.messageId) {\n                setQuoteMessage(null);\n              }\n            }}\n          />\n        )\n      }\n      {\n        showFileViewer && (\n          <FileViewer\n            onClose={() => setShowFileViewer(false)}\n            message={message}\n            onDelete={() => {\n              deleteMessage(message, () => {\n                setShowFileViewer(false);\n              });\n            }}\n            isByMe={isByMe}\n          />\n        )\n      }\n    </div>\n  );\n}\n\nMessageHoc.propTypes = {\n  userId: PropTypes.string,\n  message: PropTypes.shape({\n    isFileMessage: PropTypes.func,\n    isAdminMessage: PropTypes.func,\n    isUserMessage: PropTypes.func,\n    isDateseparator: PropTypes.func,\n    // should be a number, but there's a bug in SDK shich returns string\n    messageId: PropTypes.number,\n    type: PropTypes.string,\n    createdAt: PropTypes.number,\n    message: PropTypes.string,\n    requestState: PropTypes.string,\n    messageType: PropTypes.string,\n    sender: PropTypes.shape({ userId: PropTypes.string }),\n    ogMetaData: PropTypes.shape({}),\n    parentMessageId: PropTypes.number,\n    reactions: PropTypes.arrayOf(PropTypes.number),\n  }),\n  animatedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  highLightedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  renderCustomMessage: PropTypes.func,\n  currentGroupChannel: PropTypes.shape({}),\n  hasSeparator: PropTypes.bool,\n  disabled: PropTypes.bool,\n  editDisabled: PropTypes.bool,\n  deleteMessage: PropTypes.func.isRequired,\n  scrollToMessage: PropTypes.func,\n  updateMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']).isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  emojiContainer: PropTypes.shape({\n    emojiCategories: PropTypes.arrayOf(PropTypes.shape({\n      emojis: PropTypes.arrayOf(PropTypes.shape({\n        key: PropTypes.string,\n        url: PropTypes.string,\n      })),\n    })),\n  }),\n  toggleReaction: PropTypes.func,\n  quoteMessage: PropTypes.shape({\n    messageId: PropTypes.string,\n  }),\n  setQuoteMessage: PropTypes.func.isRequired,\n  handleScroll: PropTypes.func.isRequired,\n};\n\nMessageHoc.defaultProps = {\n  userId: '',\n  editDisabled: false,\n  renderCustomMessage: null,\n  currentGroupChannel: {},\n  message: {},\n  hasSeparator: false,\n  disabled: false,\n  animatedMessageId: null,\n  highLightedMessageId: null,\n  toggleReaction: () => { },\n  scrollToMessage: () => { },\n  emojiContainer: {},\n  quoteMessage: null,\n};\n","export const RESET_MESSAGES = 'RESET_MESSAGES';\nexport const RESET_STATE = 'RESET_STATE';\nexport const CLEAR_SENT_MESSAGES = 'CLEAR_SENT_MESSAGES';\nexport const GET_PREV_MESSAGES_START = 'GET_PREV_MESSAGES_START';\nexport const GET_PREV_MESSAGES_SUCESS = 'GET_PREV_MESSAGES_SUCESS';\nexport const GET_PREV_MESSAGES_FAILURE = 'GET_PREV_MESSAGES_FAILURE';\nexport const GET_NEXT_MESSAGES_SUCESS = 'GET_NEXT_MESSAGES_SUCESS';\nexport const GET_NEXT_MESSAGES_FAILURE = 'GET_NEXT_MESSAGES_FAILURE';\n\nexport const SEND_MESSAGEGE_START = 'SEND_MESSAGEGE_START';\nexport const SEND_MESSAGEGE_SUCESS = 'SEND_MESSAGEGE_SUCESS';\nexport const SEND_MESSAGEGE_FAILURE = 'SEND_MESSAGEGE_FAILURE';\n\nexport const RESEND_MESSAGEGE_START = 'RESEND_MESSAGEGE_START';\n\nexport const ON_MESSAGE_RECEIVED = 'ON_MESSAGE_RECEIVED';\nexport const UPDATE_UNREAD_COUNT = 'UPDATE_UNREAD_COUNT';\nexport const ON_MESSAGE_UPDATED = 'ON_MESSAGE_UPDATED';\nexport const ON_MESSAGE_THREAD_INFO_UPDATED = 'ON_MESSAGE_THREAD_INFO_UPDATED';\nexport const ON_MESSAGE_DELETED = 'ON_MESSAGE_DELETED';\nexport const ON_MESSAGE_DELETED_BY_REQ_ID = 'ON_MESSAGE_DELETED_BY_REQ_ID';\n\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\nexport const SET_CHANNEL_INVALID = 'SET_CHANNEL_INVALID';\nexport const MARK_AS_READ = 'MARK_AS_READ';\n\nexport const ON_REACTION_UPDATED = 'ON_REACTION_UPDATED';\nexport const SET_EMOJI_CONTAINER = 'SET_EMOJI_CONTAINER';\n\nexport const MESSAGE_LIST_PARAMS_CHANGED = 'MESSAGE_LIST_PARAMS_CHANGED';\n","import format from 'date-fns/format';\nimport * as channelActions from './dux/actionTypes';\nimport * as topics from '../../lib/pubSub/topics';\n\nimport {\n  getSendingMessageStatus,\n  getOutgoingMessageStates,\n} from '../../utils';\n\nconst MessageStatusType = getOutgoingMessageStates();\nconst UNDEFINED = 'undefined';\nconst { SUCCEEDED, FAILED, PENDING } = getSendingMessageStatus();\n\nexport const scrollIntoLast = (intialTry = 0) => {\n  const MAX_TRIES = 10;\n  const currentTry = intialTry;\n  if (currentTry > MAX_TRIES) {\n    return;\n  }\n  try {\n    const scrollDOM = document.querySelector('.sendbird-conversation__messages-padding');\n    // eslint-disable-next-line no-multi-assign\n    scrollDOM.scrollTop = scrollDOM.scrollHeight;\n  } catch (error) {\n    setTimeout(() => {\n      scrollIntoLast(currentTry + 1);\n    }, 500 * currentTry);\n  }\n};\n\nexport const pubSubHandleRemover = (subscriber) => {\n  subscriber.forEach((s) => {\n    try {\n      s.remove();\n    } catch {\n      //\n    }\n  });\n};\n\nexport const pubSubHandler = (channelUrl, pubSub, dispatcher) => {\n  const subscriber = new Map();\n  if (!pubSub || !pubSub.subscribe) return subscriber;\n  subscriber.set(topics.SEND_USER_MESSAGE, pubSub.subscribe(topics.SEND_USER_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    scrollIntoLast();\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_SUCESS,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.SEND_MESSAGE_START, pubSub.subscribe(topics.SEND_MESSAGE_START, (msg) => {\n    const { channel, message } = msg;\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_START,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.SEND_FILE_MESSAGE, pubSub.subscribe(topics.SEND_FILE_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    scrollIntoLast();\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_SUCESS,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.UPDATE_USER_MESSAGE, pubSub.subscribe(topics.UPDATE_USER_MESSAGE, (msg) => {\n    const { channel, message, fromSelector } = msg;\n    if (fromSelector && channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.ON_MESSAGE_UPDATED,\n        payload: { channel, message },\n      });\n    }\n  }));\n  subscriber.set(topics.DELETE_MESSAGE, pubSub.subscribe(topics.DELETE_MESSAGE, (msg) => {\n    const { channel, messageId } = msg;\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.ON_MESSAGE_DELETED,\n        payload: messageId,\n      });\n    }\n  }));\n\n  return subscriber;\n};\n\nexport const getParsedStatus = (message, currentGroupChannel) => {\n  if (message.requestState === FAILED) {\n    return MessageStatusType.FAILED;\n  }\n\n  if (message.requestState === PENDING) {\n    return MessageStatusType.PENDING;\n  }\n\n  if (message.requestState === SUCCEEDED) {\n    if (!currentGroupChannel) {\n      return MessageStatusType.SENT;\n    }\n\n    const unreadCount = currentGroupChannel.getReadReceipt(message);\n    if (unreadCount === 0) {\n      return MessageStatusType.READ;\n    }\n\n    const isDelivered = currentGroupChannel.getDeliveryReceipt(message) === 0;\n    if (isDelivered) {\n      return MessageStatusType.DELIVERED;\n    }\n\n    return MessageStatusType.SENT;\n  }\n\n  return null;\n};\n\nexport const isOperator = (groupChannel = {}) => {\n  const { myRole } = groupChannel;\n  return myRole === 'operator';\n};\n\nexport const isDisabledBecauseFrozen = (groupChannel = {}) => {\n  const { isFrozen } = groupChannel;\n  return isFrozen && !isOperator(groupChannel);\n};\n\nexport const isDisabledBecauseMuted = (groupChannel = {}) => {\n  const { myMutedState } = groupChannel;\n  return myMutedState === 'muted';\n};\n\nexport const getEmojiCategoriesFromEmojiContainer = (emojiContainer = {}) => (\n  emojiContainer.emojiCategories ? emojiContainer.emojiCategories : []\n);\n\nexport const getAllEmojisFromEmojiContainer = (emojiContainer = {}) => {\n  const { emojiCategories = [] } = emojiContainer;\n  const allEmojis = [];\n\n  for (let categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    const { emojis } = emojiCategories[categoryIndex];\n    for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      allEmojis.push(emojis[emojiIndex]);\n    }\n  }\n  return allEmojis;\n};\n\nexport const getEmojisFromEmojiContainer = (emojiContainer = {}, emojiCategoryId = '') => (\n  emojiContainer.emojiCategories\n    ? emojiContainer.emojiCategories\n      .filter((emojiCategory) => emojiCategory.id === emojiCategoryId)[0].emojis\n    : []\n);\n\nexport const getAllEmojisMapFromEmojiContainer = (emojiContainer = {}) => {\n  const { emojiCategories = [] } = emojiContainer;\n  const allEmojisMap = new Map();\n\n  for (let categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    const { emojis } = emojiCategories[categoryIndex];\n    for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      const { key, url } = emojis[emojiIndex];\n      allEmojisMap.set(key, url);\n    }\n  }\n  return allEmojisMap;\n};\n\nexport const getNicknamesMapFromMembers = (members = []) => {\n  const nicknamesMap = new Map();\n  for (let memberIndex = 0; memberIndex < members.length; memberIndex += 1) {\n    const { userId, nickname } = members[memberIndex];\n    nicknamesMap.set(userId, nickname);\n  }\n  return nicknamesMap;\n};\n\nexport const getMessageCreatedAt = (message) => format(message.createdAt, 'p');\n\nexport const isSameGroup = (message, comparingMessage) => {\n  if (!(message\n    && comparingMessage\n    && message?.messageType !== 'admin'\n    && comparingMessage?.messageType !== 'admin'\n    && message?.sender\n    && comparingMessage?.sender\n    && message?.createdAt\n    && comparingMessage?.createdAt\n    && message?.sender?.userId\n    && comparingMessage?.sender?.userId\n  )) {\n    return false;\n  }\n\n  return (\n    message?.sendingStatus === comparingMessage?.sendingStatus\n    && message?.sender?.userId === comparingMessage?.sender?.userId\n    && getMessageCreatedAt(message) === getMessageCreatedAt(comparingMessage)\n  );\n};\n\nexport const compareMessagesForGrouping = (\n  prevMessage,\n  currMessage,\n  nextMessage,\n) => {\n  const sendingStatus = currMessage?.sendingStatus || '';\n  const isAcceptable = sendingStatus !== 'pending' && sendingStatus !== 'failed';\n  return [\n    isSameGroup(prevMessage, currMessage) && isAcceptable,\n    isSameGroup(currMessage, nextMessage) && isAcceptable,\n  ];\n};\n\nexport const hasOwnProperty = (property) => (payload) => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (payload && payload.hasOwnProperty && payload.hasOwnProperty(property)) {\n    return true;\n  }\n  return false;\n};\n\nexport const passUnsuccessfullMessages = (allMessages, newMessage) => {\n  const { sendingStatus = UNDEFINED } = newMessage;\n  if (sendingStatus === SUCCEEDED || sendingStatus === PENDING) {\n    const lastIndexOfSucceededMessage = allMessages\n      .map((message) => (\n        message.sendingStatus\n        || ((message.isAdminMessage && message.isAdminMessage()) ? SUCCEEDED : UNDEFINED)\n      ))\n      .lastIndexOf(SUCCEEDED);\n    if (lastIndexOfSucceededMessage + 1 < allMessages.length) {\n      const messages = [...allMessages];\n      messages.splice(lastIndexOfSucceededMessage + 1, 0, newMessage);\n      return messages;\n    }\n  }\n  return [\n    ...allMessages,\n    newMessage,\n  ];\n};\n\nexport const pxToNumber = (px) => {\n  if (typeof px === 'number') {\n    return px;\n  }\n  if (typeof px === 'string') {\n    const parsed = Number.parseFloat(px);\n    if (!Number.isNaN(parsed)) {\n      return parsed;\n    }\n  }\n  return null;\n};\n\nexport default getParsedStatus;\n","export default {\n  initialized: false,\n  loading: false,\n  allMessages: [],\n  currentGroupChannel: { members: [] },\n  // for scrollup\n  hasMore: false,\n  lastMessageTimeStamp: 0,\n  // for scroll down\n  // onScrollDownCallback is added for navigation to different timestamps on messageSearch\n  // hasMoreToBottom, onScrollDownCallback -> scroll down\n  // hasMore, onScrollCallback -> scroll up(default behavior)\n  hasMoreToBottom: false,\n  latestFetchedMessageTimeStamp: 0,\n  emojiContainer: {},\n  unreadCount: 0,\n  unreadSince: null,\n  isInvalid: false,\n  messageListParams: null,\n};\n","import format from 'date-fns/format';\n\nimport * as actionTypes from './actionTypes';\nimport initialState from './initialState';\n\nimport compareIds from '../../../utils/compareIds';\nimport { passUnsuccessfullMessages, hasOwnProperty } from '../utils';\nimport { filterMessageListParams, getSendingMessageStatus } from '../../../utils';\n\nconst {\n  SUCCEEDED,\n  FAILED,\n  PENDING,\n} = getSendingMessageStatus();\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case actionTypes.RESET_STATE:\n      return initialState;\n    case actionTypes.RESET_MESSAGES:\n      return {\n        ...state,\n        // when user switches channel, if the previous channel `hasMore`\n        // the onScroll gets called twice, setting hasMore false prevents this\n        hasMore: false,\n        allMessages: [],\n      };\n    case actionTypes.GET_PREV_MESSAGES_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actionTypes.CLEAR_SENT_MESSAGES:\n      return {\n        ...state,\n        allMessages: [\n          ...state.allMessages.filter((m) => (\n            m.sendingStatus !== SUCCEEDED\n          )),\n        ],\n      };\n    case actionTypes.GET_PREV_MESSAGES_SUCESS: {\n      const receivedMessages = action.payload.messages || [];\n      const { currentGroupChannel = {} } = action.payload;\n\n      const stateChannel = state.currentGroupChannel || {};\n      const stateChannelUrl = stateChannel.url;\n      const actionChannelUrl = currentGroupChannel.url;\n      if (actionChannelUrl !== stateChannelUrl) {\n        return state;\n      }\n\n      // remove duplicate messages\n      const duplicatedMessageIds = [];\n      const updatedAllMessages = state.allMessages.map((msg) => {\n        const duplicatedMessage = receivedMessages.find(({ messageId }) => (\n          compareIds(messageId, msg.messageId)\n        ));\n        if (!duplicatedMessage) {\n          return msg;\n        }\n        duplicatedMessageIds.push(duplicatedMessage.messageId);\n        return (duplicatedMessage.updatedAt > msg.updatedAt) ? duplicatedMessage : msg;\n      });\n      const filteredNewMessages = (duplicatedMessageIds.length > 0)\n        ? receivedMessages.filter((msg) => (\n          !duplicatedMessageIds.find((messageId) => compareIds(messageId, msg.messageId))\n        ))\n        : receivedMessages;\n\n      const hasHasMoreToBottom = hasOwnProperty('hasMoreToBottom')(action.payload);\n      const hasLatestFetchedMessageTimeStamp = hasOwnProperty('latestFetchedMessageTimeStamp')(action.payload);\n      return {\n        ...state,\n        loading: false,\n        initialized: true,\n        hasMore: action.payload.hasMore,\n        lastMessageTimeStamp: action.payload.lastMessageTimeStamp,\n        // if present change else, keep\n        ...(hasHasMoreToBottom && {\n          hasMoreToBottom: action.payload.hasMoreToBottom,\n        }),\n        ...(hasLatestFetchedMessageTimeStamp && {\n          latestFetchedMessageTimeStamp: action.payload.latestFetchedMessageTimeStamp,\n        }),\n        allMessages: [\n          ...filteredNewMessages,\n          ...updatedAllMessages,\n        ],\n      };\n    }\n    case actionTypes.GET_NEXT_MESSAGES_SUCESS: {\n      const receivedMessages = action.payload.messages || [];\n      const { currentGroupChannel = {} } = action.payload;\n\n      const stateChannel = state.currentGroupChannel || {};\n      const stateChannelUrl = stateChannel.url;\n      const actionChannelUrl = currentGroupChannel.url;\n      if (actionChannelUrl !== stateChannelUrl) {\n        return state;\n      }\n\n      // remove duplicate messages\n      const duplicatedMessageIds = [];\n      const updatedAllMessages = state.allMessages.map((msg) => {\n        const duplicatedMessage = receivedMessages.find(({ messageId }) => (\n          compareIds(messageId, msg.messageId)\n        ));\n        if (!duplicatedMessage) {\n          return msg;\n        }\n        duplicatedMessageIds.push(duplicatedMessage.messageId);\n        return (duplicatedMessage.updatedAt > msg.updatedAt) ? duplicatedMessage : msg;\n      });\n      const filteredNewMessages = (duplicatedMessageIds.length > 0)\n        ? receivedMessages.filter((msg) => (\n          !duplicatedMessageIds.find((messageId) => compareIds(messageId, msg.messageId))\n        ))\n        : receivedMessages;\n\n      return {\n        ...state,\n        loading: false,\n        initialized: true,\n        hasMore: action.payload.hasMore,\n        lastMessageTimeStamp: action.payload.lastMessageTimeStamp,\n        hasMoreToBottom: action.payload.hasMoreToBottom,\n        latestFetchedMessageTimeStamp: action.payload.latestFetchedMessageTimeStamp,\n        allMessages: [\n          ...updatedAllMessages,\n          ...filteredNewMessages,\n        ],\n      };\n    }\n    case actionTypes.GET_NEXT_MESSAGES_FAILURE: {\n      return { ...state };\n    }\n    case actionTypes.SEND_MESSAGEGE_START:\n      return {\n        ...state,\n        allMessages: [\n          ...state.allMessages,\n          { ...action.payload },\n        ],\n      };\n    case actionTypes.SEND_MESSAGEGE_SUCESS: {\n      const newMessages = state.allMessages.map((m) => (\n        compareIds(m.reqId, action.payload.reqId) ? action.payload : m\n      ));\n      [...newMessages].sort((a, b) => (\n        (\n          a.sendingStatus\n          && b.sendingStatus\n          && a.sendingStatus === SUCCEEDED\n          && (\n            b.sendingStatus === PENDING\n            || b.sendingStatus === FAILED\n          )\n        ) ? -1 : 1\n      ));\n      return {\n        ...state,\n        allMessages: newMessages,\n      };\n    }\n    case actionTypes.SEND_MESSAGEGE_FAILURE: {\n      // eslint-disable-next-line no-param-reassign\n      action.payload.failed = true;\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, action.payload.reqId)\n            ? action.payload\n            : m\n        )),\n      };\n    }\n    case actionTypes.SET_CURRENT_CHANNEL: {\n      return {\n        ...state,\n        currentGroupChannel: action.payload,\n        isInvalid: false,\n      };\n    }\n    case actionTypes.SET_CHANNEL_INVALID: {\n      return {\n        ...state,\n        isInvalid: true,\n      };\n    }\n    case actionTypes.UPDATE_UNREAD_COUNT: {\n      const { channel } = action.payload;\n      const { currentGroupChannel = {}, unreadCount } = state;\n      const currentGroupChannelUrl = currentGroupChannel.url;\n      if (!compareIds(channel.url, currentGroupChannelUrl)) {\n        return state;\n      }\n      return {\n        ...state,\n        unreadSince: unreadCount + 1,\n      };\n    }\n    case actionTypes.ON_MESSAGE_RECEIVED: {\n      const { channel, message, scrollToEnd } = action.payload;\n      let unreadCount = 0;\n      const { currentGroupChannel = {}, unreadSince } = state;\n      const currentGroupChannelUrl = currentGroupChannel.url;\n\n      if (!compareIds(channel.url, currentGroupChannelUrl)) {\n        return state;\n      }\n      // Excluded overlapping messages\n      if (state.allMessages.some((msg) => msg.messageId === message.messageId)) {\n        return state;\n      }\n      // Filter by userFilledQuery\n      if (state.messageListParams && !filterMessageListParams(state.messageListParams, message)) {\n        return state;\n      }\n\n      unreadCount = state.unreadCount + 1;\n      // reset unreadCount if have to scrollToEnd\n      if (scrollToEnd) {\n        unreadCount = 0;\n      }\n\n      if (message.isAdminMessage && message.isAdminMessage()) {\n        return {\n          ...state,\n          allMessages: passUnsuccessfullMessages(state.allMessages, message),\n        };\n      }\n      return {\n        ...state,\n        unreadCount,\n        unreadSince: (unreadCount === 1)\n          ? format(new Date(), 'p MMM dd')\n          : unreadSince,\n        allMessages: passUnsuccessfullMessages(state.allMessages, message),\n      };\n    }\n    case actionTypes.ON_MESSAGE_UPDATED: {\n      const { channel, message } = action.payload;\n      const currentGroupChannelUrl = (state.currentGroupChannel && state.currentGroupChannel.url) || '';\n      if (!compareIds(channel.url, currentGroupChannelUrl)) {\n        return state; // Ignore event when it is not for the current channel\n      }\n      if (state.messageListParams && !filterMessageListParams(state.messageListParams, message)) {\n        // Delete the message if it doesn't match to the params anymore\n        return {\n          ...state,\n          allMessages: state.allMessages.filter((m) => (\n            !compareIds(m.messageId, message?.messageId)\n          )),\n        };\n      }\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.messageId, action.payload.message.messageId)\n            ? action.payload.message\n            : m\n        )),\n      };\n    }\n    case actionTypes.ON_MESSAGE_THREAD_INFO_UPDATED: {\n      const { channel, event } = action.payload;\n      const { channelUrl, threadInfo, targetMessageId } = event;\n      const currentGroupChannelUrl = (state.currentGroupChannel && state.currentGroupChannel.url) || '';\n      if (\n        !compareIds(channel.url, currentGroupChannelUrl)\n        || !compareIds(channel.url, channelUrl)\n      ) {\n        return state; // Ignore event when it is not for the current channel\n      }\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => {\n          if (compareIds(m.messageId, targetMessageId)) {\n            // eslint-disable-next-line no-param-reassign\n            m.threadInfo = threadInfo; // Upsert threadInfo to the target message\n          }\n          return m;\n        }),\n      };\n    }\n    case actionTypes.RESEND_MESSAGEGE_START:\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, action.payload.reqId)\n            ? action.payload\n            : m\n        )),\n      };\n    case actionTypes.MARK_AS_READ:\n      return {\n        ...state,\n        unreadCount: 0,\n        unreadSince: null,\n      };\n    case actionTypes.ON_MESSAGE_DELETED:\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((m) => (\n          !compareIds(m.messageId, action.payload)\n        )),\n      };\n    case actionTypes.ON_MESSAGE_DELETED_BY_REQ_ID:\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((m) => (\n          !compareIds(m.reqId, action.payload)\n        )),\n      };\n    case actionTypes.SET_EMOJI_CONTAINER: {\n      return {\n        ...state,\n        emojiContainer: action.payload,\n      };\n    }\n    case actionTypes.ON_REACTION_UPDATED: {\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => {\n          if (compareIds(m.messageId, action.payload.messageId)) {\n            if (m.applyReactionEvent && typeof m.applyReactionEvent === 'function') {\n              m.applyReactionEvent(action.payload);\n            }\n            return m;\n          }\n          return m;\n        }),\n      };\n    }\n    case actionTypes.MESSAGE_LIST_PARAMS_CHANGED: {\n      return {\n        ...state,\n        messageListParams: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { useEffect } from 'react';\n\nimport * as messageActions from '../dux/actionTypes';\nimport { uuidv4 } from '../../../utils/uuid';\nimport compareIds from '../../../utils/compareIds';\nimport { scrollIntoLast } from '../utils';\n\n/**\n * Handles ChannelEvents and send values to dispatcher using messagesDispatcher\n * messagesDispatcher: Dispatcher\n * sdk: sdkInstance\n * logger: loggerInstance\n * channelUrl: string\n * sdkInit: bool\n */\nfunction useHandleChannelEvents({ currentGroupChannel, sdkInit, hasMoreToBottom }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n  scrollRef,\n  setQuoteMessage,\n}) {\n  const channelUrl = currentGroupChannel && currentGroupChannel?.url;\n  useEffect(() => {\n    const messageReceiverId = uuidv4();\n    if (channelUrl && sdk && sdk.ChannelHandler) {\n      const ChannelHandler = new sdk.ChannelHandler();\n      logger.info('Channel | useHandleChannelEvents: Setup event handler', messageReceiverId);\n\n      ChannelHandler.onMessageReceived = (channel, message) => {\n        // donot update if hasMoreToBottom\n        if (compareIds(channel.url, channelUrl) && !hasMoreToBottom) {\n          let scrollToEnd = false;\n          try {\n            const { current } = scrollRef;\n            scrollToEnd = current.offsetHeight + current.scrollTop >= current.scrollHeight;\n          } catch (error) {\n            //\n          }\n\n          logger.info('Channel | useHandleChannelEvents: onMessageReceived', message);\n          messagesDispatcher({\n            type: messageActions.ON_MESSAGE_RECEIVED,\n            payload: { channel, message, scrollToEnd },\n          });\n\n          if (scrollToEnd) {\n            try {\n              setTimeout(() => {\n                try {\n                  currentGroupChannel.markAsRead();\n                } catch {\n                  //\n                }\n                scrollIntoLast();\n              });\n            } catch (error) {\n              logger.warning('Channel | onMessageReceived | scroll to end failed');\n            }\n          }\n        }\n        if (compareIds(channel.url, channelUrl) && hasMoreToBottom) {\n          messagesDispatcher({\n            type: messageActions.UPDATE_UNREAD_COUNT,\n            payload: { channel },\n          });\n        }\n      };\n\n      /**\n       * We need to update current channel with the channel,\n       * when onReadReceiptUpdated or onDeliveryReceiptUpdated are called,\n       * because cachedReadReceiptStatus and cachedDeliveryReceiptStatus properties were changed\n       */\n      ChannelHandler.onReadReceiptUpdated = (channel) => {\n        if (compareIds(channel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onReadReceiptUpdated', channel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: channel,\n          });\n        }\n      };\n      ChannelHandler.onDeliveryReceiptUpdated = (channel) => {\n        if (compareIds(channel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onDeliveryReceiptUpdated', channel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: channel,\n          });\n        }\n      };\n\n      ChannelHandler.onMessageUpdated = (channel, message) => {\n        logger.info('Channel | useHandleChannelEvents: onMessageUpdated', message);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_UPDATED,\n          payload: { channel, message },\n        });\n      };\n\n      ChannelHandler.onThreadInfoUpdated = (channel, event) => {\n        logger.info('Channel | useHandleChannelEvents: onThreadInfoUpdated', event);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_THREAD_INFO_UPDATED,\n          payload: { channel, event },\n        });\n      };\n\n      ChannelHandler.onMessageDeleted = (_, messageId) => {\n        logger.info('Channel | useHandleChannelEvents: onMessageDeleted', messageId);\n        setQuoteMessage(null);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_DELETED,\n          payload: messageId,\n        });\n      };\n\n      ChannelHandler.onReactionUpdated = (_, reactionEvent) => {\n        logger.info('Channel | useHandleChannelEvents: onReactionUpdated', reactionEvent);\n        messagesDispatcher({\n          type: messageActions.ON_REACTION_UPDATED,\n          payload: reactionEvent,\n        });\n      };\n\n      ChannelHandler.onChannelChanged = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelChanged', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onChannelFrozen = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelFrozen', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onChannelUnfrozen = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelUnFrozen', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserMuted = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onUserMuted', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserUnmuted = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onUserUnmuted', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserBanned = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onUserBanned', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onOperatorUpdated = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onOperatorUpdated', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      // Add this channel event handler to the SendBird object.\n      sdk.addChannelHandler(messageReceiverId, ChannelHandler);\n    }\n    return () => {\n      if (sdk && sdk.removeChannelHandler) {\n        logger.info('Channel | useHandleChannelEvents: Removing message reciver handler', messageReceiverId);\n        sdk.removeChannelHandler(messageReceiverId);\n      }\n    };\n  }, [channelUrl, sdkInit]);\n}\n\nexport default useHandleChannelEvents;\n","import { useEffect } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useSetChannel({ channelUrl, sdkInit }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n}) {\n  useEffect(() => {\n    if (channelUrl && sdkInit && sdk && sdk.GroupChannel) {\n      logger.info('Channel | useSetChannel fetching channel', channelUrl);\n      sdk.GroupChannel.getChannel(channelUrl)\n        .then((groupChannel) => {\n          logger.info('Channel | useSetChannel fetched channel', groupChannel);\n          messagesDispatcher({\n            type: messageActionTypes.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n\n          logger.info('Channel: Mark as read', groupChannel);\n          // this order is important - this mark as read should update the event handler up above\n          try {\n            groupChannel.markAsRead();\n          } catch {\n            //\n          }\n        })\n        .catch((e) => {\n          logger.warning('Channel | useSetChannel fetch channel failed', { channelUrl, e });\n          messagesDispatcher({\n            type: messageActionTypes.SET_CHANNEL_INVALID,\n          });\n        });\n      sdk.getAllEmoji((emojiContainer_, err) => {\n        if (err) {\n          logger.error('Channel: Getting emojis failed', err);\n          return;\n        }\n        logger.info('Channel: Getting emojis success', emojiContainer_);\n        messagesDispatcher({\n          type: messageActionTypes.SET_EMOJI_CONTAINER,\n          payload: emojiContainer_,\n        });\n      });\n    }\n  }, [channelUrl, sdkInit]);\n}\n\nexport default useSetChannel;\n","import { useEffect } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\n\nconst PREV_RESULT_SIZE = 30;\nconst NEXT_RESULT_SIZE = 10;\n\nconst getLatestMessageTimeStamp = (messages = []) => {\n  const latestMessage = messages[messages.length - 1];\n  return (latestMessage && latestMessage.createdAt) || null;\n};\n\nfunction useInitialMessagesFetch({\n  currentGroupChannel,\n  userFilledMessageListQuery,\n  intialTimeStamp,\n  replyType,\n}, {\n  sdk,\n  logger,\n  messagesDispatcher,\n}) {\n  const channelUrl = currentGroupChannel && currentGroupChannel.url;\n  useEffect(() => {\n    logger.info('Channel useInitialMessagesFetch: Setup started', currentGroupChannel);\n    messagesDispatcher({\n      type: messageActionTypes.RESET_MESSAGES,\n    });\n\n    if (sdk && sdk.MessageListParams\n      && currentGroupChannel && currentGroupChannel.getMessagesByTimestamp) {\n      const messageListParams = new sdk.MessageListParams();\n      messageListParams.prevResultSize = PREV_RESULT_SIZE;\n      messageListParams.isInclusive = true;\n      messageListParams.includeReplies = false;\n      messageListParams.includeReaction = true;\n      if (replyType && replyType === 'QUOTE_REPLY') {\n        messageListParams.includeThreadInfo = true;\n        messageListParams.includeParentMessageInfo = true;\n        messageListParams.replyType = 'only_reply_to_channel';\n      }\n      if (userFilledMessageListQuery) {\n        Object.keys(userFilledMessageListQuery).forEach((key) => {\n          messageListParams[key] = userFilledMessageListQuery[key];\n        });\n      }\n      if ((replyType && replyType === 'QUOTE_REPLY') || userFilledMessageListQuery) {\n        logger.info('Channel useInitialMessagesFetch: Setup messageListParams', messageListParams);\n        messagesDispatcher({\n          type: messageActionTypes.MESSAGE_LIST_PARAMS_CHANGED,\n          payload: messageListParams,\n        });\n      }\n\n      logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n      messagesDispatcher({\n        type: messageActionTypes.GET_PREV_MESSAGES_START,\n      });\n\n      if (intialTimeStamp) {\n        messageListParams.nextResultSize = NEXT_RESULT_SIZE;\n        currentGroupChannel.getMessagesByTimestamp(\n          intialTimeStamp,\n          messageListParams,\n        )\n          .then((messages) => {\n            const hasMore = (messages && messages.length > 0);\n            const lastMessageTimeStamp = hasMore\n              ? messages[0].createdAt\n              : null;\n            const latestFetchedMessageTimeStamp = getLatestMessageTimeStamp(messages);\n            // to make sure there are no more messages below\n            const nextMessageListParams = new sdk.MessageListParams();\n            nextMessageListParams.nextResultSize = NEXT_RESULT_SIZE;\n            nextMessageListParams.isInclusive = true;\n            nextMessageListParams.includeReplies = false;\n            nextMessageListParams.includeReaction = true;\n            if (replyType && replyType === 'QUOTE_REPLY') {\n              nextMessageListParams.includeThreadInfo = true;\n              nextMessageListParams.includeParentMessageInfo = true;\n              nextMessageListParams.replyType = 'only_reply_to_channel';\n            }\n            if (userFilledMessageListQuery) {\n              Object.keys(userFilledMessageListQuery).forEach((key) => {\n                nextMessageListParams[key] = userFilledMessageListQuery[key];\n              });\n            }\n            currentGroupChannel.getMessagesByTimestamp(\n              latestFetchedMessageTimeStamp || new Date().getTime(),\n              nextMessageListParams,\n            ).then((nextMessages) => {\n              messagesDispatcher({\n                type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n                payload: {\n                  messages,\n                  hasMore,\n                  lastMessageTimeStamp,\n                  currentGroupChannel,\n                  latestFetchedMessageTimeStamp,\n                  hasMoreToBottom: nextMessages && nextMessages.length > 0,\n                },\n              });\n            });\n          })\n          .catch((error) => {\n            logger.error('Channel: Fetching messages failed', error);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages: [],\n                hasMore: false,\n                lastMessageTimeStamp: 0,\n                currentGroupChannel,\n              },\n            });\n          })\n          .finally(() => {\n            if (!intialTimeStamp) {\n              setTimeout(() => utils.scrollIntoLast());\n            }\n            try {\n              currentGroupChannel.markAsRead();\n            } catch {\n              //\n            }\n          });\n      } else {\n        currentGroupChannel.getMessagesByTimestamp(\n          new Date().getTime(),\n          messageListParams,\n        )\n          .then((messages) => {\n            const hasMore = (messages && messages.length > 0);\n            const lastMessageTimeStamp = hasMore\n              ? messages[0].createdAt\n              : null;\n            const latestFetchedMessageTimeStamp = getLatestMessageTimeStamp(messages);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages,\n                hasMore,\n                lastMessageTimeStamp,\n                currentGroupChannel,\n                latestFetchedMessageTimeStamp,\n                hasMoreToBottom: false,\n              },\n            });\n          })\n          .catch((error) => {\n            logger.error('Channel: Fetching messages failed', error);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages: [],\n                hasMore: false,\n                lastMessageTimeStamp: 0,\n                currentGroupChannel,\n              },\n            });\n          })\n          .finally(() => {\n            if (!intialTimeStamp) {\n              setTimeout(() => utils.scrollIntoLast());\n            }\n            try {\n              currentGroupChannel.markAsRead();\n            } catch {\n              //\n            }\n          });\n      }\n    }\n  }, [channelUrl, userFilledMessageListQuery, intialTimeStamp]);\n  /**\n   * Note - useEffect(() => {}, [currentGroupChannel])\n   * was buggy, that is why we did\n   * const channelUrl = currentGroupChannel && currentGroupChannel.url;\n   * useEffect(() => {}, [channelUrl])\n   * Again, this hook is supposed to execute when currentGroupChannel changes\n   * The 'channelUrl' here is not the same memory reference from Conversation.props\n   */\n}\n\nexport default useInitialMessagesFetch;\n","import { useEffect } from 'react';\n\nimport * as utils from '../utils';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport { Logger, Sdk } from '../../..';\nimport { GroupChannel } from 'sendbird';\n\ninterface DynamicParams {\n  isOnline: boolean;\n  replyType?: string;\n}\n\ninterface StaticParams {\n  logger: Logger;\n  sdk: Sdk;\n  currentGroupChannel: GroupChannel;\n  messagesDispatcher: ({ type: string, payload: any }) => void;\n  userFilledMessageListQuery?: Record<string, any>;\n}\n\nfunction useHandleReconnect(\n  { isOnline, replyType }: DynamicParams,\n  {\n    logger,\n    sdk,\n    currentGroupChannel,\n    messagesDispatcher,\n    userFilledMessageListQuery,\n  }: StaticParams,\n): void {\n  useEffect(() => {\n    const wasOffline = !isOnline;\n    return () => {\n      // state changed from offline to online\n      if (wasOffline && currentGroupChannel?.url) {\n        logger.info('Refreshing conversation state');\n        const useReaction = sdk?.appInfo?.isUsingReaction || false;\n\n        const messageListParams = new sdk.MessageListParams();\n        messageListParams.prevResultSize = 30;\n        messageListParams.isInclusive = true;\n        messageListParams.includeReplies = false;\n        messageListParams.includeReaction = useReaction;\n        if (replyType && replyType === 'QUOTE_REPLY') {\n          messageListParams.includeThreadInfo = true;\n          messageListParams.includeParentMessageInfo = true;\n          messageListParams.replyType = 'only_reply_to_channel';\n        }\n        if (userFilledMessageListQuery) {\n          Object.keys(userFilledMessageListQuery).forEach((key) => {\n            messageListParams[key] = userFilledMessageListQuery[key];\n          });\n        }\n        logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_START,\n          payload: null,\n        });\n\n        sdk.GroupChannel.getChannel(currentGroupChannel.url)\n          .then((groupChannel) => {\n            const lastMessageTime = new Date().getTime();\n\n            groupChannel.getMessagesByTimestamp(\n              lastMessageTime,\n              messageListParams,\n            )\n              .then((messages) => {\n                messagesDispatcher({\n                  type: messageActionTypes.CLEAR_SENT_MESSAGES,\n                  payload: null,\n                });\n\n                const hasMore = messages?.length > 0;\n                const lastMessageTimeStamp = hasMore\n                  ? messages[0].createdAt\n                  : null;\n                messagesDispatcher({\n                  type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n                  payload: {\n                    messages,\n                    hasMore,\n                    lastMessageTimeStamp,\n                    currentGroupChannel,\n                  },\n                });\n                setTimeout(() => utils.scrollIntoLast());\n              })\n              .catch((error) => {\n                logger.error('Channel: Fetching messages failed', error);\n              })\n              .finally(() => {\n                try {\n                  currentGroupChannel.markAsRead?.();\n                } catch {\n                  //\n                }\n              });\n          });\n      }\n    };\n  }, [isOnline, replyType]);\n}\n\nexport default useHandleReconnect;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useScrollCallback({\n  currentGroupChannel,\n  lastMessageTimeStamp,\n  userFilledMessageListQuery,\n  replyType,\n}, {\n  hasMore,\n  logger,\n  messagesDispatcher,\n  sdk,\n}) {\n  return useCallback((cb) => {\n    if (!hasMore) { return; }\n    const { appInfo = {} } = sdk;\n    const useReaction = appInfo.isUsingReaction || false;\n\n    const messageListParams = new sdk.MessageListParams();\n    messageListParams.prevResultSize = 30;\n    messageListParams.isInclusive = true;\n    messageListParams.includeReplies = false;\n    messageListParams.includeReaction = useReaction;\n    if (replyType && replyType === 'QUOTE_REPLY') {\n      messageListParams.includeThreadInfo = true;\n      messageListParams.includeParentMessageInfo = true;\n      messageListParams.replyType = 'only_reply_to_channel';\n    }\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach((key) => {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n    logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n\n    currentGroupChannel.getMessagesByTimestamp(\n      lastMessageTimeStamp || new Date().getTime(),\n      messageListParams,\n    )\n      .then((messages) => {\n        const hasMoreMessages = (messages && messages.length > 0);\n        const lastMessageTs = hasMoreMessages\n          ? messages[0].createdAt\n          : null;\n\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n          payload: {\n            messages,\n            hasMore: hasMoreMessages,\n            lastMessageTimeStamp: lastMessageTs,\n            currentGroupChannel,\n          },\n        });\n        cb([messages, null]);\n      })\n      .catch((error) => {\n        logger.error('Channel: Fetching messages failed', error);\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n          payload: {\n            messages: [],\n            hasMore: false,\n            lastMessageTimeStamp: 0,\n            currentGroupChannel,\n          },\n        });\n        cb([null, error]);\n      })\n      .finally(() => {\n        try {\n          currentGroupChannel.markAsRead();\n        } catch {\n          //\n        }\n      });\n  }, [currentGroupChannel, lastMessageTimeStamp, replyType]);\n}\n\nexport default useScrollCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nconst RESULT_SIZE = 30;\n\nfunction useScrollDownCallback({\n  currentGroupChannel,\n  latestFetchedMessageTimeStamp,\n  userFilledMessageListQuery,\n  hasMoreToBottom,\n  replyType,\n}, {\n  logger,\n  messagesDispatcher,\n  sdk,\n}) {\n  return useCallback((cb) => {\n    if (!hasMoreToBottom) { return; }\n    const { appInfo = {} } = sdk;\n    const useReaction = appInfo.isUsingReaction || false;\n\n    const messageListParams = new sdk.MessageListParams();\n    messageListParams.nextResultSize = RESULT_SIZE;\n    messageListParams.isInclusive = true;\n    messageListParams.includeReplies = false;\n    messageListParams.includeReaction = useReaction;\n    if (replyType && replyType === 'QUOTE_REPLY') {\n      messageListParams.includeThreadInfo = true;\n      messageListParams.includeParentMessageInfo = true;\n      messageListParams.replyType = 'only_reply_to_channel';\n    }\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach((key) => {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n    logger.info('Channel: Fetching later messages', { currentGroupChannel, userFilledMessageListQuery });\n\n    currentGroupChannel.getMessagesByTimestamp(\n      latestFetchedMessageTimeStamp || new Date().getTime(),\n      messageListParams,\n    )\n      .then((messages) => {\n        const messagesLength = (messages && messages.length) || 0;\n        const hasMoreMessages = (messagesLength > 0)\n          && (messageListParams.nextResultSize === messagesLength);\n        const lastMessageTs = hasMoreMessages\n          ? messages[messages.length - 1].createdAt\n          : null;\n        messagesDispatcher({\n          type: messageActionTypes.GET_NEXT_MESSAGES_SUCESS,\n          payload: {\n            messages,\n            hasMoreToBottom: hasMoreMessages,\n            latestFetchedMessageTimeStamp: lastMessageTs,\n            currentGroupChannel,\n          },\n        });\n        cb([messages, null]);\n      })\n      .catch((error) => {\n        logger.error('Channel: Fetching later messages failed', error);\n        messagesDispatcher({\n          type: messageActionTypes.GET_NEXT_MESSAGES_FAILURE,\n          payload: {\n            messages: [],\n            hasMoreToBottom: false,\n            latestFetchedMessageTimeStamp: 0,\n            currentGroupChannel,\n          },\n        });\n        cb([null, error]);\n      })\n      .finally(() => {\n        try {\n          currentGroupChannel.markAsRead();\n        } catch {\n          //\n        }\n      });\n  }, [currentGroupChannel, latestFetchedMessageTimeStamp, hasMoreToBottom, replyType]);\n}\n\nexport default useScrollDownCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useDeleteMessageCallback({ currentGroupChannel, messagesDispatcher }, { logger }) {\n  return useCallback((message, cb) => {\n    logger.info('Channel | useDeleteMessageCallback: Deleting message', message);\n    const { requestState } = message;\n    logger.info('Channel | useDeleteMessageCallback: Deleting message requestState:', requestState);\n\n    // Message is only on local\n    if (requestState === 'failed' || requestState === 'pending') {\n      logger.info('Channel | useDeleteMessageCallback: Deleted message from local:', message);\n      messagesDispatcher({\n        type: messageActionTypes.ON_MESSAGE_DELETED_BY_REQ_ID,\n        payload: message.reqId,\n      });\n      if (cb) { cb(); }\n      return;\n    }\n\n    // Message is on server\n    currentGroupChannel.deleteMessage(message, (err) => {\n      logger.info('Channel | useDeleteMessageCallback: Deleting message from remote:', requestState);\n      if (cb) { cb(err); }\n      if (!err) {\n        logger.info('Channel | useDeleteMessageCallback: Deleting message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_DELETED,\n          payload: message.messageId,\n        });\n      } else {\n        logger.warning('Channel | useDeleteMessageCallback: Deleting message failed!', err);\n      }\n    });\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nexport default useDeleteMessageCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as topics from '../../../lib/pubSub/topics';\n\nfunction useUpdateMessageCallback({\n  currentGroupChannel,\n  messagesDispatcher,\n  onBeforeUpdateUserMessage,\n}, {\n  logger,\n  pubSub,\n  sdk,\n}) {\n  return useCallback((messageId, text, cb) => {\n    const createParamsDefault = (txt) => {\n      const params = new sdk.UserMessageParams();\n      params.message = txt;\n      return params;\n    };\n\n    const createCustomPrams = onBeforeUpdateUserMessage\n      && typeof onBeforeUpdateUserMessage === 'function';\n\n    if (createCustomPrams) {\n      logger.info('Channel: creating params using onBeforeUpdateUserMessage', onBeforeUpdateUserMessage);\n    }\n\n    const params = onBeforeUpdateUserMessage\n      ? onBeforeUpdateUserMessage(text)\n      : createParamsDefault(text);\n\n    currentGroupChannel.updateUserMessage(messageId, params, (r, e) => {\n      logger.info('Channel: Updating message!', params);\n      const swapParams = sdk.getErrorFirstCallback();\n      let message = r;\n      let err = e;\n      if (swapParams) {\n        message = e;\n        err = r;\n      }\n      if (cb) {\n        cb(err, message);\n      }\n      if (!err) {\n        logger.info('Channel: Updating message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_UPDATED,\n          payload: {\n            channel: currentGroupChannel,\n            message,\n          },\n        });\n        pubSub.publish(\n          topics.UPDATE_USER_MESSAGE,\n          {\n            message,\n            channel: currentGroupChannel,\n          },\n        );\n      } else {\n        logger.warning('Channel: Updating message failed!', err);\n      }\n    });\n  }, [currentGroupChannel.url, messagesDispatcher, onBeforeUpdateUserMessage]);\n}\n\nexport default useUpdateMessageCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useResendMessageCallback({\n  currentGroupChannel,\n  messagesDispatcher,\n}, {\n  logger,\n}) {\n  return useCallback((failedMessage) => {\n    logger.info('Channel: Resending message has started', failedMessage);\n    const { messageType, file } = failedMessage;\n    if (failedMessage && typeof failedMessage.isResendable === 'function'\n      && failedMessage.isResendable()\n    ) {\n      // eslint-disable-next-line no-param-reassign\n      failedMessage.requestState = 'pending';\n      messagesDispatcher({\n        type: messageActionTypes.RESEND_MESSAGEGE_START,\n        payload: failedMessage,\n      });\n\n      // userMessage\n      if (messageType === 'user') {\n        currentGroupChannel\n          .resendUserMessage(failedMessage)\n          .then((message) => {\n            logger.info('Channel: Resending message success!', { message });\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n              payload: message,\n            });\n          })\n          .catch((e) => {\n            logger.warning('Channel: Resending message failed!', { e });\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n              payload: failedMessage,\n            });\n          });\n\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: messageActionTypes.RESEND_MESSAGEGE_START,\n          payload: failedMessage,\n        });\n        return;\n      }\n\n      if (messageType === 'file') {\n        currentGroupChannel\n          .resendFileMessage(failedMessage, file)\n          .then((message) => {\n            logger.info('Channel: Resending file message success!', { message });\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n              payload: message,\n            });\n          })\n          .catch((e) => {\n            logger.warning('Channel: Resending file message failed!', { e });\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n              payload: failedMessage,\n            });\n          });\n\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: messageActionTypes.RESEND_MESSAGEGE_START,\n          payload: failedMessage,\n        });\n      }\n    } else {\n      // to alert user on console\n      // eslint-disable-next-line no-console\n      console.error('Message is not resendable');\n      logger.warning('Message is not resendable', failedMessage);\n    }\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nexport default useResendMessageCallback;\n","import { useRef, useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\nimport * as topics from '../../../lib/pubSub/topics';\n\nexport default function useSendMessageCallback({ currentGroupChannel, onBeforeSendUserMessage }, {\n  sdk,\n  logger,\n  pubSub,\n  messagesDispatcher,\n}) {\n  const messageInputRef = useRef(null);\n\n  const sendMessage = useCallback(\n    (quoteMessage = null) => {\n      const text = messageInputRef.current.value;\n      const createParamsDefault = (txt) => {\n        const message = (typeof txt === 'string') ? txt.trim() : txt;\n        const params = new sdk.UserMessageParams();\n        params.message = message;\n        if (quoteMessage) {\n          params.isReplyToChannel = true;\n          params.parentMessageId = quoteMessage.messageId;\n        }\n        return params;\n      };\n\n      const createCustomPrams = onBeforeSendUserMessage\n        && typeof onBeforeSendUserMessage === 'function';\n\n      if (createCustomPrams) {\n        logger.info('Channel: creating params using onBeforeSendUserMessage', onBeforeSendUserMessage);\n      }\n\n      const params = onBeforeSendUserMessage\n        ? onBeforeSendUserMessage(text, quoteMessage)\n        : createParamsDefault(text);\n\n      logger.info('Channel: Sending message has started', params);\n      const pendingMsg = currentGroupChannel.sendUserMessage(params, (res, err) => {\n        const swapParams = sdk.getErrorFirstCallback();\n        let message = res;\n        let error = err;\n        if (swapParams) {\n          message = err;\n          error = res;\n        }\n        // sending params instead of pending message\n        // to make sure that we can resend the message once it fails\n        if (error) {\n          logger.warning('Channel: Sending message failed!', {\n            message,\n          });\n          messagesDispatcher({\n            type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n            payload: message,\n          });\n          return;\n        }\n        logger.info('Channel: Sending message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n          payload: message,\n        });\n      });\n      pubSub.publish(topics.SEND_MESSAGE_START, {\n        /* pubSub is used instead of messagesDispatcher\n          to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n        message: pendingMsg,\n        channel: currentGroupChannel,\n      });\n      setTimeout(() => utils.scrollIntoLast());\n    },\n    [currentGroupChannel, onBeforeSendUserMessage],\n  );\n\n  return [messageInputRef, sendMessage];\n}\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\nimport * as topics from '../../../lib/pubSub/topics';\n\nexport default function useSendFileMessageCallback({\n  currentGroupChannel,\n  onBeforeSendFileMessage,\n  imageCompression = {},\n}, {\n  sdk,\n  logger,\n  pubSub,\n  messagesDispatcher,\n}) {\n  const sendMessage = useCallback((file, quoteMessage = null) => {\n    const {\n      compressionRate,\n      resizingWidth,\n      resizingHeight,\n    } = imageCompression;\n    const createCustomParams = onBeforeSendFileMessage && typeof onBeforeSendFileMessage === 'function';\n\n    const compressibleFileType = (file.type === 'image/jpg' || file.type === 'image/png' || file.type === 'image/jpeg');\n    const compressibleRatio = (compressionRate > 0) && (compressionRate < 1);\n    // pxToNumber returns null if values are invalid\n    const compressibleDiamensions = utils.pxToNumber(resizingWidth)\n      || utils.pxToNumber(resizingHeight);\n\n    const canCompressImage = compressibleFileType && (compressibleRatio || compressibleDiamensions);\n\n    const createParamsDefault = (file_) => {\n      const params = new sdk.FileMessageParams();\n      params.file = file_;\n      if (quoteMessage) {\n        params.isReplyToChannel = true;\n        params.parentMessageId = quoteMessage.messageId;\n      }\n      return params;\n    };\n\n    if (canCompressImage) { // Using image compression\n      try {\n        const image = document.createElement('img');\n        image.src = URL.createObjectURL(file);\n        image.onload = () => {\n          URL.revokeObjectURL(image.src);\n          const canvas = document.createElement('canvas');\n          const imageWdith = image.naturalWidth || image.width;\n          const imageHeight = image.naturalHeight || image.height;\n\n          let targetWidth = utils.pxToNumber(resizingWidth) || imageWdith;\n          let targetHeight = utils.pxToNumber(resizingHeight) || imageHeight;\n\n          // In canvas.toBlob(callback, mimeType, qualityArgument)\n          // qualityArgument doesnt work\n          // so in case compressibleDiamensions are not present, we use ratio\n          if (file.type === 'image/png' && !compressibleDiamensions) {\n            targetWidth *= compressionRate;\n            targetHeight *= compressionRate;\n          }\n\n          canvas.width = targetWidth;\n          canvas.height = targetHeight;\n          const context = canvas.getContext('2d');\n          context.drawImage(image, 0, 0, targetWidth, targetHeight);\n          context.canvas.toBlob(\n            (newImageBlob) => {\n              const compressedFile = new File([newImageBlob], file.name, { type: file.type });\n              if (createCustomParams) {\n                logger.info('Channel: Creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n              }\n              const params = createCustomParams\n                ? onBeforeSendFileMessage(compressedFile, quoteMessage)\n                : createParamsDefault(compressedFile);\n              logger.info('Channel: Uploading file message start!', params);\n              const pendingMessage = currentGroupChannel.sendFileMessage(\n                params,\n                (response, err) => {\n                  const swapParams = sdk.getErrorFirstCallback();\n                  const [message, error] = swapParams ? [err, response] : [response, err];\n                  if (error) {\n                    // sending params instead of pending message\n                    // to make sure that we can resend the message once it fails\n                    logger.error('Channel: Sending file message failed!', { message, error });\n                    message.localUrl = URL.createObjectURL(compressedFile);\n                    message.file = compressedFile;\n                    messagesDispatcher({\n                      type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n                      payload: message,\n                    });\n                    return;\n                  }\n                  logger.info('Channel: Sending file message success!', message);\n                  messagesDispatcher({\n                    type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n                    payload: message,\n                  });\n                },\n              );\n              pubSub.publish(topics.SEND_MESSAGE_START, {\n                /* pubSub is used instead of messagesDispatcher\n                  to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n                message: {\n                  ...pendingMessage,\n                  url: URL.createObjectURL(compressedFile),\n                  // pending thumbnail message seems to be failed\n                  requestState: 'pending',\n                },\n                channel: currentGroupChannel,\n              });\n              setTimeout(() => utils.scrollIntoLast(), 1000);\n            },\n            file.type,\n            compressionRate,\n          );\n        };\n      } catch (error) {\n        logger.error('Channel: Sending file message failed!', error);\n      }\n    } else { // Not using image compression\n      if (createCustomParams) {\n        logger.info('Channel: creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n      }\n      const params = onBeforeSendFileMessage\n        ? onBeforeSendFileMessage(file, quoteMessage)\n        : createParamsDefault(file);\n      logger.info('Channel: Uploading file message start!', params);\n\n      const pendingMsg = currentGroupChannel.sendFileMessage(params, (response, err) => {\n        const swapParams = sdk.getErrorFirstCallback();\n        const [message, error] = swapParams ? [err, response] : [response, err];\n        if (error) {\n          // sending params instead of pending message\n          // to make sure that we can resend the message once it fails\n          logger.error('Channel: Sending file message failed!', { message, error });\n          message.localUrl = URL.createObjectURL(file);\n          message.file = file;\n          messagesDispatcher({\n            type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n            payload: message,\n          });\n          return;\n        }\n        logger.info('Channel: Sending message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n          payload: message,\n        });\n      });\n      pubSub.publish(topics.SEND_MESSAGE_START, {\n        /* pubSub is used instead of messagesDispatcher\n          to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n        message: {\n          ...pendingMsg,\n          url: URL.createObjectURL(file),\n          // pending thumbnail message seems to be failed\n          requestState: 'pending',\n        },\n        channel: currentGroupChannel,\n      });\n      setTimeout(() => utils.scrollIntoLast(), 1000);\n    }\n  }, [currentGroupChannel, onBeforeSendFileMessage, imageCompression]);\n  return [sendMessage];\n}\n","import React, { useMemo } from 'react';\n\nimport { EmojiListItems } from '../../../ui/ContextMenu';\nimport ReactionButton from '../../../ui/ReactionButton';\nimport ImageRenderer from '../../../ui/ImageRenderer';\nimport Icon, { IconTypes } from '../../../ui/Icon';\n\nexport default function useMemoizedEmojiListItems({\n  emojiContainer, toggleReaction,\n}, {\n  useReaction,\n  logger,\n  userId,\n  emojiAllList,\n}) {\n  /* eslint-disable react/prop-types */\n  return useMemo(() => ({\n    parentRef,\n    parentContainRef,\n    message,\n    closeDropdown,\n    spaceFromTrigger = {},\n  }) => {\n    if (!useReaction || !(parentRef || parentContainRef || message || closeDropdown)) {\n      logger.warning('Channel: Invalid Params in memoizedEmojiListItems');\n      return null;\n    }\n\n    return (\n      <EmojiListItems\n        parentRef={parentRef}\n        parentContainRef={parentContainRef}\n        closeDropdown={closeDropdown}\n        spaceFromTrigger={spaceFromTrigger}\n      >\n        {\n          emojiAllList.map((emoji) => {\n            const reactedReaction = message.reactions\n              .filter((reaction) => reaction.key === emoji.key)[0];\n            const isReacted = reactedReaction\n              ? !(reactedReaction.userIds.indexOf(userId) < 0)\n              : false;\n            return (\n              <ReactionButton\n                key={emoji.key}\n                width=\"36px\"\n                height=\"36px\"\n                selected={isReacted}\n                onClick={() => {\n                  closeDropdown();\n                  toggleReaction(message, emoji.key, isReacted);\n                }}\n              >\n                <ImageRenderer\n                  url={emoji.url}\n                  width=\"28px\"\n                  height=\"28px\"\n                  defaultComponent={\n                    <Icon width=\"28px\" height=\"28px\" type={IconTypes.QUESTION} />\n                  }\n                />\n              </ReactionButton>\n            );\n          })\n        }\n      </EmojiListItems>\n    );\n  }, [emojiContainer, toggleReaction]);\n}\n","import { useCallback } from 'react';\n\nexport default function useToggleReactionCallback({ currentGroupChannel }, { logger }) {\n  return useCallback((message, key, isReacted) => {\n    if (isReacted) {\n      currentGroupChannel.deleteReaction(message, key)\n        .then((res) => {\n          logger.info('Delete reaction success', res);\n        })\n        .catch((err) => {\n          logger.warning('Delete reaction failed', err);\n        });\n      return;\n    }\n    currentGroupChannel.addReaction(message, key)\n      .then((res) => {\n        logger.info('Add reaction success', res);\n      })\n      .catch((err) => {\n        logger.warning('Add reaction failed', err);\n      });\n  }, [currentGroupChannel]);\n}\n","import { useCallback } from 'react';\nimport { SendbirdTypes } from '../../../types';\nimport { Logger } from '../../../index';\n\ninterface DynamicParams {\n  setIntialTimeStamp(ts: number): null;\n  setAnimatedMessageId(id: number): null;\n  allMessages: SendbirdTypes['BaseMessageInstance'][];\n}\n\ninterface StaticParams {\n  logger: Logger;\n}\n\nfunction useScrollToMessage({\n  setIntialTimeStamp,\n  setAnimatedMessageId,\n  allMessages,\n}: DynamicParams,\n  { logger }: StaticParams,\n): (createdAt: number, messageId: number) => void {\n  return useCallback(\n    (createdAt: number, messageId: number) => {\n      const isPresent = allMessages.find((m) => (\n        m.messageId === messageId\n      ));\n      setAnimatedMessageId(null);\n      setTimeout(() => {\n        if (isPresent) {\n          logger.info('Channel: scroll to message - message is present');\n          setAnimatedMessageId(messageId);\n        } else {\n          logger.info('Channel: scroll to message - fetching older messages');\n          setIntialTimeStamp(null);\n          setIntialTimeStamp(createdAt);\n          setAnimatedMessageId(messageId);\n        }\n      });\n    }, [\n    setIntialTimeStamp,\n    setAnimatedMessageId,\n    allMessages,\n  ],\n  );\n}\n\nexport default useScrollToMessage;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport isSameDay from \"date-fns/isSameDay\";\n\nimport \"./conversation-scroll.scss\";\nimport * as messageActionTypes from \"../dux/actionTypes\";\n\nimport MessageHOC from \"./MessageHOC\";\nimport { compareMessagesForGrouping } from \"../utils\";\nimport PlaceHolder, { PlaceHolderTypes } from \"../../../ui/PlaceHolder\";\nimport Icon, { IconTypes, IconColors } from \"../../../ui/Icon\";\n\nconst SCROLL_REF_CLASS_NAME = \".sendbird-msg--scroll-ref\";\n\nexport default class ConversationScroll extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleScroll = () => {\n    const { scrollRef } = this?.props;\n    const current = scrollRef?.current;\n    if (current) {\n      const bottom =\n        current.scrollHeight - current.scrollTop - current.offsetHeight;\n      const { scrollBottom = 0 } = this.state;\n      if (scrollBottom < bottom) {\n        current.scrollTop += bottom - scrollBottom;\n      }\n    }\n  };\n\n  onScroll = (e) => {\n    const {\n      scrollRef,\n      hasMore,\n      messagesDispatcher,\n      onScroll,\n      onScrollDown,\n      currentGroupChannel,\n    } = this.props;\n\n    const element = e.target;\n    const { scrollTop, clientHeight, scrollHeight } = element;\n    if (scrollTop === 0) {\n      if (!hasMore) {\n        return;\n      }\n      const nodes = scrollRef.current.querySelectorAll(SCROLL_REF_CLASS_NAME);\n      const first = nodes && nodes[0];\n      onScroll(([messages]) => {\n        if (messages) {\n          // https://github.com/scabbiaza/react-scroll-position-on-updating-dom\n          // Set block to nearest to prevent unexpected scrolling from outer components\n          try {\n            first.scrollIntoView({ block: \"nearest\" });\n          } catch (error) {\n            //\n          }\n        }\n      });\n    }\n\n    if (clientHeight + scrollTop === scrollHeight) {\n      const nodes = scrollRef.current.querySelectorAll(SCROLL_REF_CLASS_NAME);\n      const last = nodes && nodes[nodes.length - 1];\n      onScrollDown(([messages]) => {\n        if (messages) {\n          // https://github.com/scabbiaza/react-scroll-position-on-updating-dom\n          try {\n            last.scrollIntoView({ block: \"nearest\" });\n          } catch (error) {\n            //\n          }\n        }\n      });\n    }\n\n    // do this later\n    setTimeout(() => {\n      // mark as read if scroll is at end\n      if (clientHeight + scrollTop === scrollHeight) {\n        messagesDispatcher({\n          type: messageActionTypes.MARK_AS_READ,\n        });\n        currentGroupChannel.markAsRead();\n      }\n\n      // save the lastest scroll bottom value\n      if (scrollRef?.current) {\n        const current = scrollRef?.current;\n        this.setState(\n          (state) => ({\n            ...state,\n            scrollBottom:\n              current.scrollHeight - current.scrollTop - current.offsetHeight,\n          }),\n          () => {}\n        );\n      }\n    }, 500);\n  };\n\n  render() {\n    const {\n      userId,\n      disabled,\n      scrollRef,\n      membersMap,\n      allMessages,\n      scrollToMessage,\n      useReaction,\n      replyType,\n      emojiAllMap,\n      editDisabled,\n      deleteMessage,\n      updateMessage,\n      resendMessage,\n      renderCustomMessage,\n      renderChatItem,\n      animatedMessageId,\n      highLightedMessageId,\n      emojiContainer,\n      toggleReaction,\n      useMessageGrouping,\n      currentGroupChannel,\n      memoizedEmojiListItems,\n      showScrollBot,\n      onClickScrollBot,\n      quoteMessage,\n      setQuoteMessage,\n    } = this.props;\n\n    if (allMessages.length < 1) {\n      return (\n        <PlaceHolder\n          className=\"sendbird-conversation__no-messages\"\n          type={PlaceHolderTypes.NO_MESSAGES}\n        />\n      );\n    }\n\n    return (\n      <div className=\"sendbird-conversation__messages\">\n        <div className=\"sendbird-conversation__scroll-container\">\n          <div className=\"sendbird-conversation__padding\" />\n          {/*\n            To do: Implement windowing\n            Implement windowing if you are dealing with large number of messages/channels\n            https://github.com/bvaughn/react-window -> recommendation\n            We hesitate to bring one more dependency to our library,\n            we are planning to implement it inside the library\n          */}\n          <div\n            className=\"sendbird-conversation__messages-padding\"\n            ref={scrollRef}\n            onScroll={this.onScroll}\n          >\n            {allMessages.map((m, idx) => {\n              const previousMessage = allMessages[idx - 1];\n              const nextMessage = allMessages[idx + 1];\n              const [chainTop, chainBottom] = useMessageGrouping\n                ? compareMessagesForGrouping(previousMessage, m, nextMessage)\n                : [false, false];\n              const previousMessageCreatedAt =\n                previousMessage && previousMessage.createdAt;\n              const currentCreatedAt = m.createdAt;\n              // https://stackoverflow.com/a/41855608\n              const hasSeparator = !(\n                previousMessageCreatedAt &&\n                isSameDay(currentCreatedAt, previousMessageCreatedAt)\n              );\n\n              if (renderChatItem) {\n                const rendered = renderChatItem({\n                  message: m,\n                  animatedMessageId,\n                  highLightedMessageId,\n                  channel: currentGroupChannel,\n                  onDeleteMessage: deleteMessage,\n                  onUpdateMessage: updateMessage,\n                  onResendMessage: resendMessage,\n                  onScrollToMessage: scrollToMessage,\n                  onReplyMessage: setQuoteMessage,\n                  emojiContainer,\n                  chainTop,\n                  chainBottom,\n                  hasSeparator,\n                  menuDisabled: disabled,\n                });\n\n                console.log(rendered);\n\n                if (rendered !== undefined && rendered !== null) {\n                  return (\n                    <div\n                      key={m.messageId || m.reqId}\n                      className=\"sendbird-msg--scroll-ref\"\n                    >\n                      {rendered}\n                    </div>\n                  );\n                }\n              }\n\n              return (\n                <MessageHOC\n                  animatedMessageId={animatedMessageId}\n                  highLightedMessageId={highLightedMessageId}\n                  renderCustomMessage={renderCustomMessage}\n                  key={m.messageId || m.reqId}\n                  userId={userId}\n                  handleScroll={this.handleScroll}\n                  message={m}\n                  quoteMessage={quoteMessage}\n                  scrollToMessage={scrollToMessage}\n                  currentGroupChannel={currentGroupChannel}\n                  disabled={disabled}\n                  membersMap={membersMap}\n                  chainTop={chainTop}\n                  useReaction={useReaction}\n                  replyType={replyType}\n                  emojiAllMap={emojiAllMap}\n                  emojiContainer={emojiContainer}\n                  editDisabled={editDisabled}\n                  hasSeparator={hasSeparator}\n                  chainBottom={chainBottom}\n                  updateMessage={updateMessage}\n                  deleteMessage={deleteMessage}\n                  resendMessage={resendMessage}\n                  toggleReaction={toggleReaction}\n                  setQuoteMessage={setQuoteMessage}\n                  memoizedEmojiListItems={memoizedEmojiListItems}\n                />\n              );\n            })}\n          </div>\n        </div>\n        {showScrollBot && (\n          <div\n            className=\"sendbird-conversation__scroll-bottom-button\"\n            onClick={onClickScrollBot}\n            onKeyDown={onClickScrollBot}\n            tabIndex={0}\n            role=\"button\"\n          >\n            <Icon\n              width=\"24px\"\n              height=\"24px\"\n              type={IconTypes.CHEVRON_DOWN}\n              fillColor={IconColors.PRIMARY}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nConversationScroll.propTypes = {\n  // https://stackoverflow.com/a/52646941\n  scrollRef: PropTypes.shape({\n    current: PropTypes.oneOfType([PropTypes.element, PropTypes.shape({})]),\n  }).isRequired,\n  hasMore: PropTypes.bool,\n  messagesDispatcher: PropTypes.func.isRequired,\n  onScroll: PropTypes.func,\n  onScrollDown: PropTypes.func,\n  editDisabled: PropTypes.bool,\n  disabled: PropTypes.bool,\n  userId: PropTypes.string,\n  allMessages: PropTypes.arrayOf(\n    PropTypes.shape({\n      createdAt: PropTypes.number,\n    })\n  ).isRequired,\n  deleteMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  updateMessage: PropTypes.func.isRequired,\n  currentGroupChannel: PropTypes.shape({\n    markAsRead: PropTypes.func,\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n  animatedMessageId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  highLightedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  renderChatItem: PropTypes.func,\n  renderCustomMessage: PropTypes.func,\n  scrollToMessage: PropTypes.func,\n  useReaction: PropTypes.bool,\n  replyType: PropTypes.oneOf([\"NONE\", \"QUOTE_REPLY\", \"THREAD\"]),\n  showScrollBot: PropTypes.bool,\n  onClickScrollBot: PropTypes.func,\n  emojiContainer: PropTypes.shape({}),\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  useMessageGrouping: PropTypes.bool,\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n  quoteMessage: PropTypes.shape({}),\n  setQuoteMessage: PropTypes.func.isRequired,\n};\n\nConversationScroll.defaultProps = {\n  hasMore: false,\n  editDisabled: false,\n  disabled: false,\n  userId: \"\",\n  renderCustomMessage: null,\n  renderChatItem: null,\n  animatedMessageId: null,\n  highLightedMessageId: null,\n  onScroll: null,\n  onScrollDown: null,\n  useReaction: true,\n  replyType: \"NONE\",\n  emojiContainer: {},\n  showScrollBot: false,\n  onClickScrollBot: () => {},\n  scrollToMessage: () => {},\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  useMessageGrouping: true,\n  toggleReaction: () => {},\n  memoizedEmojiListItems: () => \"\",\n  quoteMessage: null,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './notification.scss';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\n\nexport default function Notification({\n  count,\n  time,\n  onClick,\n}) {\n  const { stringSet } = useContext(LocalizationContext);\n  const timeArray = time.split(' ');\n  timeArray.splice(-2, 0, stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__ON);\n  return (\n    // eslint-disable-next-line\n    <div className=\"sendbird-notification\" onClick={onClick}>\n      <Label className=\"sendbird-notification__text\" color={LabelColors.ONCONTENT_1} type={LabelTypography.CAPTION_2}>\n        {`${count} `}\n        {stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE}\n        {` ${timeArray.join(' ')}`}\n      </Label>\n      <Icon\n        width=\"24px\"\n        height=\"24px\"\n        type={IconTypes.CHEVRON_DOWN}\n        fillColor={IconColors.CONTENT}\n      />\n    </div>\n  );\n}\n\nNotification.propTypes = {\n  count: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  time: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nNotification.defaultProps = {\n  count: 0,\n  time: '',\n};\n","import React, { useContext } from 'react';\n\nimport './notification.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelTypography } from '../../../ui/Label';\n\nconst FrozenNotification = (): JSX.Element => {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-notification sendbird-notification--frozen\">\n      <Label\n        className=\"sendbird-notification__text\"\n        type={LabelTypography.CAPTION_2}\n      >\n        {stringSet.CHANNEL_FROZEN}\n      </Label>\n    </div>\n  );\n}\n\nexport default FrozenNotification;\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport { uuidv4 } from '../../../utils/uuid';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\n\nconst TypingIndicatorText = ({ members }) => {\n  const { stringSet } = useContext(LocalizationContext);\n  if (!members || members.length === 0) {\n    return '';\n  }\n\n  if (members && members.length === 1) {\n    return `${members[0].nickname} ${stringSet.TYPING_INDICATOR__IS_TYPING}`;\n  }\n\n  if (members && members.length === 2) {\n    return `${members[0].nickname} ${stringSet.TYPING_INDICATOR__AND} ${members[1].nickname} ${stringSet.TYPING_INDICATOR__ARE_TYPING}`;\n  }\n\n  return stringSet.TYPING_INDICATOR__MULTIPLE_TYPING;\n};\n\nfunction TypingIndicator(props) {\n  const {\n    className,\n    channelUrl,\n    sb,\n    logger,\n  } = props;\n  const [handlerId, setHandlerId] = useState(uuidv4());\n  const [typingMembers, setTypingMembers] = useState([]);\n\n  useEffect(() => {\n    if (sb && sb.ChannelHandler) {\n      sb.removeChannelHandler(handlerId);\n      const newHandlerId = uuidv4();\n      const handler = new sb.ChannelHandler();\n      // there is a possible warning in here - setState called after unmount\n      handler.onTypingStatusUpdated = (groupChannel) => {\n        logger.info('Channel > Typing Indicator: onTypingStatusUpdated', groupChannel);\n        const members = groupChannel.getTypingMembers();\n        if (groupChannel.url === channelUrl) {\n          setTypingMembers(members);\n        }\n      };\n      sb.addChannelHandler(newHandlerId, handler);\n      setHandlerId(newHandlerId);\n    }\n\n    return () => {\n      setTypingMembers([]);\n      if (sb && sb.removeChannelHandler) {\n        sb.removeChannelHandler(handlerId);\n      }\n    };\n  }, [channelUrl]);\n\n  return (\n    <Label\n      className={className}\n      type={LabelTypography.CAPTION_2}\n      color={LabelColors.ONBACKGROUND_2}\n    >\n      <TypingIndicatorText members={typingMembers} />\n    </Label>\n  );\n}\n\nTypingIndicator.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  channelUrl: PropTypes.string.isRequired,\n  sb: PropTypes.shape({\n    ChannelHandler: PropTypes.func,\n    removeChannelHandler: PropTypes.func,\n    addChannelHandler: PropTypes.func,\n  }).isRequired,\n  logger: PropTypes.shape({\n    info: PropTypes.func,\n  }).isRequired,\n};\nTypingIndicator.defaultProps = {\n  className: '',\n};\n\nexport default TypingIndicator;\n","import React, { ReactElement } from 'react';\nimport { FileMessage } from 'sendbird';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport ImageRenderer from '../ImageRenderer';\nimport { isAudioMessage, isFileMessage, isImageMessage, isThumbnailMessage } from '../../utils';\n\ninterface Props {\n  message: FileMessage;\n}\n\nconst componentClassname = 'sendbird-quote_message_input__avatar';\n\nexport default function QuoteMessageThumbnail({ message }: Props): ReactElement {\n  if (!isFileMessage(message)) {\n    return null;\n  }\n\n  const thumbnailUrl: string = (message.thumbnails && message.thumbnails.length > 0 && message.thumbnails[0].url)\n    || (isImageMessage(message) && message.url);\n  if (isThumbnailMessage(message) && thumbnailUrl) {\n    return (\n      <ImageRenderer\n        className={componentClassname}\n        url={thumbnailUrl}\n        alt={message.type}\n        width=\"44px\"\n        height=\"44px\"\n        fixedSize\n      />\n    );\n  } else if (isAudioMessage(message)) {\n    return (\n      <div className={componentClassname}>\n        <Icon\n          type={IconTypes.FILE_AUDIO}\n          fillColor={IconColors.ON_BACKGROUND_2}\n          width=\"24px\"\n          height=\"24px\"\n        />\n      </div>\n    );\n  } else {\n    return (\n      <div className={componentClassname}>\n        <Icon\n          type={IconTypes.FILE_DOCUMENT}\n          fillColor={IconColors.ON_BACKGROUND_2}\n          width=\"24px\"\n          height=\"24px\"\n        />\n      </div>\n    );\n  }\n}\n","import React, { ReactElement, useContext } from 'react';\nimport { FileMessage, UserMessage } from 'sendbird';\nimport {\n  CoreMessageType,\n  getClassName,\n  isFileMessage,\n  isGifMessage,\n  isImageMessage,\n  isThumbnailMessage,\n  isUserMessage,\n  isVideoMessage,\n} from '../../utils';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport QuoteMessageThumbnail from './QuoteMessageThumbnail';\nimport './index.scss';\n\ninterface Props {\n  className?: string | Array<string>;\n  replyingMessage: CoreMessageType;\n  onClose?: (message: CoreMessageType) => void;\n}\n\nexport default function QuoteMessageInput({\n  className,\n  replyingMessage,\n  onClose,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const fileMessage = replyingMessage as FileMessage;\n  const sender = (replyingMessage as UserMessage | FileMessage)?.sender;\n\n  return (\n    <div className={getClassName(['sendbird-quote_message_input', className])}>\n      <QuoteMessageThumbnail message={fileMessage} />\n      <div\n        className=\"sendbird-quote_message_input__body\"\n        style={{\n          width: `calc(100% - ${fileMessage.isFileMessage() ? '164px' : '120px'})`,\n          left: fileMessage.isFileMessage() ? '92px' : '40px',\n        }}\n      >\n        <Label\n          className=\"sendbird-quote_message_input__body__sender-name\"\n          type={LabelTypography.CAPTION_1}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {`${stringSet.QUOTE_MESSAGE_INPUT__REPLY_TO} ${(sender && sender.nickname) ? sender.nickname : stringSet.NO_NAME}`}\n        </Label>\n        <Label\n          className=\"sendbird-quote_message_input__body__message-content\"\n          type={LabelTypography.BODY_2}\n          color={LabelColors.ONBACKGROUND_3}\n        >\n          {isImageMessage(fileMessage) && !isGifMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE_IMAGE}\n          {isVideoMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE__VIDEO}\n          {isGifMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE_GIF}\n          {isUserMessage(replyingMessage as UserMessage) && (replyingMessage as UserMessage).message}\n          {(isFileMessage(fileMessage) && !isThumbnailMessage(fileMessage)) && fileMessage.name}\n        </Label>\n      </div>\n      <Icon\n        className=\"sendbird-quote_message_input__close-button\"\n        type={IconTypes.CLOSE}\n        fillColor={IconColors.ON_BACKGROUND_2}\n        width=\"24px\"\n        height=\"24px\"\n        onClick={() => onClose(replyingMessage)}\n      />\n    </div>\n  );\n}\n","// Logic required to handle message input rendering\n\nimport React, { useContext } from 'react';\nimport Sendbird, { FileMessage, UserMessage } from 'sendbird';\n\nimport './message-input-wrapper.scss';\nimport { RenderGroupChannelMessageInputProps } from '../../../index';\nimport * as utils from '../utils.js';\n\nimport MessageInput from '../../../ui/MessageInput';\nimport QuoteMessageInput from '../../../ui/QuoteMessageInput';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\ninterface Props {\n  channel: Sendbird.GroupChannel;\n  user: Sendbird.User;\n  isOnline: boolean;\n  initialized: boolean;\n  quoteMessage?: UserMessage | FileMessage;\n  onSendMessage: (quoteMessage?: UserMessage | FileMessage) => void;\n  onFileUpload: (file: File, quoteMessage?: UserMessage | FileMessage) => void;\n  setQuoteMessage: (message: UserMessage | FileMessage) => void;\n  renderMessageInput: (renderProps: RenderGroupChannelMessageInputProps) => JSX.Element;\n}\n\nconst MessageInputWrapper = ({\n  channel,\n  user,\n  isOnline,\n  initialized,\n  quoteMessage,\n  onSendMessage,\n  onFileUpload,\n  setQuoteMessage,\n  renderMessageInput,\n}: Props, ref: React.RefObject<HTMLInputElement>): JSX.Element => {\n  const { stringSet } = useContext(LocalizationContext);\n  const disabled = !initialized\n    || utils.isDisabledBecauseFrozen(channel)\n    || utils.isDisabledBecauseMuted(channel)\n    || !isOnline;\n\n  const isOperator = utils.isOperator(channel);\n  const { isBroadcast } = channel;\n\n  // custom message\n  if (renderMessageInput) {\n    return renderMessageInput({ channel, user, disabled, quoteMessage });\n  }\n\n  // broadcast channel + not operator\n  if (isBroadcast && !isOperator) {\n    return null;\n  }\n\n  // other conditions\n  return (\n    <div className=\"sendbird-message-input-wrapper\">\n      {quoteMessage && (\n        <div className=\"sendbird-message-input-wrapper__quote-message-input\">\n          <QuoteMessageInput\n            replyingMessage={quoteMessage}\n            onClose={() => setQuoteMessage(null)}\n          />\n        </div>\n      )}\n      <MessageInput\n        className=\"sendbird-message-input-wrapper__message-input\"\n        channelUrl={channel?.url}\n        placeholder={\n          (quoteMessage && stringSet.MESSAGE_INPUT__QUOTE_REPLY__PLACE_HOLDER)\n          || (utils.isDisabledBecauseFrozen(channel) && stringSet.MESSAGE_INPUT__PLACE_HOLDER__DISABLED)\n          || (utils.isDisabledBecauseMuted(channel) && stringSet.MESSAGE_INPUT__PLACE_HOLDER__MUTED)\n        }\n        ref={ref}\n        disabled={disabled}\n        onStartTyping={() => {\n          channel.startTyping();\n        }}\n        onSendMessage={() => {\n          onSendMessage(quoteMessage);\n          setQuoteMessage(null);\n        }}\n        onFileUpload={(file) => {\n          onFileUpload(file, quoteMessage);\n          setQuoteMessage(null);\n        }}\n      />\n    </div>\n  );\n}\n\nexport default React.forwardRef(MessageInputWrapper);\n","import React, { useContext } from 'react';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport './index.scss';\n\nfunction ConnectionStatus() {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-connection-status\">\n      <Label\n        type={LabelTypography.BODY_2}\n        color={LabelColors.ONBACKGROUND_2}\n      >\n        {stringSet.TRYING_TO_CONNECT}\n      </Label>\n      <Icon\n        type={IconTypes.DISCONNECTED}\n        fillColor={IconColors.SENT}\n        width=\"14px\"\n        height=\"14px\"\n      />\n    </div>\n  );\n}\n\nexport default ConnectionStatus;\n","import formatDistanceToNowStrict from 'date-fns/formatDistanceToNowStrict';\nimport { LabelStringSet } from '../Label';\n\nexport const prettyDate = (date) => formatDistanceToNowStrict(date, { addSuffix: true });\n\nexport const getChannelTitle = (channel = {}, currentUserId, stringSet = LabelStringSet) => {\n  if (!channel || (!channel.name && !channel.members)) {\n    return stringSet.NO_TITLE;\n  }\n  if (channel.name && channel.name !== 'Group Channel') {\n    return channel.name;\n  }\n\n  if (channel.members.length === 1) {\n    return stringSet.NO_MEMBERS;\n  }\n\n  return channel.members\n    .filter(({ userId }) => userId !== currentUserId)\n    .map(({ nickname }) => (nickname || stringSet.NO_NAME))\n    .join(', ');\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport * as utils from './utils';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport ChannelAvatar from '../ChannelAvatar/index';\n\nconst noop = () => { };\nexport default function ChatHeader(props) {\n  const {\n    currentGroupChannel,\n    currentUser,\n    title,\n    subTitle,\n    isMuted,\n    theme,\n    showSearchIcon,\n    onSearchClick,\n    onActionClick,\n  } = props;\n  const { userId } = currentUser;\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-chat-header\">\n      <div className=\"sendbird-chat-header__left\">\n        <ChannelAvatar\n          theme={theme}\n          channel={currentGroupChannel}\n          userId={userId}\n          height={32}\n          width={32}\n        />\n        <Label\n          className=\"sendbird-chat-header__left__title\"\n          type={LabelTypography.H_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {title || utils.getChannelTitle(currentGroupChannel, userId, stringSet)}\n        </Label>\n        <Label\n          className=\"sendbird-chat-header__left__subtitle\"\n          type={LabelTypography.BODY_1}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {subTitle}\n        </Label>\n      </div>\n      <div className=\"sendbird-chat-header__right\">\n        {\n          ((typeof isMuted === 'string' && isMuted === 'true') || (typeof isMuted === 'boolean' && isMuted))\n            && (\n              <Icon\n                className=\"sendbird-chat-header__right__mute\"\n                type={IconTypes.NOTIFICATIONS_OFF_FILLED}\n                width=\"24px\"\n                height=\"24px\"\n              />\n            )\n        }\n        {\n          showSearchIcon && (\n            <IconButton\n              className=\"sendbird-chat-header__right__search\"\n              width=\"32px\"\n              height=\"32px\"\n              onClick={onSearchClick}\n            >\n              <Icon\n                type={IconTypes.SEARCH}\n                fillColor={IconColors.PRIMARY}\n                width=\"24px\"\n                height=\"24px\"\n              />\n            </IconButton>\n          )\n        }\n        <IconButton\n          className=\"sendbird-chat-header__right__info\"\n          width=\"32px\"\n          height=\"32px\"\n          onClick={onActionClick}\n        >\n          <Icon\n            type={IconTypes.INFO}\n            fillColor={IconColors.PRIMARY}\n            width=\"24px\"\n            height=\"24px\"\n          />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nChatHeader.propTypes = {\n  currentGroupChannel: PropTypes.shape({\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n    coverUrl: PropTypes.string,\n  }),\n  currentUser: PropTypes.shape({\n    userId: PropTypes.string,\n  }),\n  title: PropTypes.string,\n  subTitle: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.string,\n  ]),\n  isMuted: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  theme: PropTypes.string,\n  showSearchIcon: PropTypes.bool,\n  onSearchClick: PropTypes.func,\n  onActionClick: PropTypes.func,\n};\n\nChatHeader.defaultProps = {\n  currentGroupChannel: {},\n  currentUser: {},\n  title: '',\n  subTitle: '',\n  isMuted: false,\n  theme: 'light',\n  showSearchIcon: false,\n  onSearchClick: noop,\n  onActionClick: noop,\n};\n","import React, {\n  useEffect,\n  useRef,\n  useReducer,\n  useMemo,\n  useState,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport * as utils from './utils';\n\nimport { UserProfileProvider } from '../../lib/UserProfileContext';\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport * as messageActionTypes from './dux/actionTypes';\nimport messagesInitialState from './dux/initialState';\nimport messagesReducer from './dux/reducers';\n\nimport useHandleChannelEvents from './hooks/useHandleChannelEvents';\nimport useGetChannel from './hooks/useGetChannel';\nimport useInitialMessagesFetch from './hooks/useInitialMessagesFetch';\nimport useHandleReconnect from './hooks/useHandleReconnect';\nimport useScrollCallback from './hooks/useScrollCallback';\nimport useScrollDownCallback from './hooks/useScrollDownCallback';\nimport useDeleteMessageCallback from './hooks/useDeleteMessageCallback';\nimport useUpdateMessageCallback from './hooks/useUpdateMessageCallback';\nimport useResendMessageCallback from './hooks/useResendMessageCallback';\nimport useSendMessageCallback from './hooks/useSendMessageCallback';\nimport useSendFileMessageCallback from './hooks/useSendFileMessageCallback';\nimport useMemoizedEmojiListItems from './hooks/useMemoizedEmojiListItems';\nimport useToggleReactionCallback from './hooks/useToggleReactionCallback';\nimport useScrollToMessage from './hooks/useScrollToMessage';\n\nimport ConversationScroll from './components/ConversationScroll';\nimport Notification from './components/Notification';\nimport FrozenNotification from './components/FrozenNotification';\nimport TypingIndicator from './components/TypingIndicator';\nimport MessageInputWrapper from './components/MessageInputWrapper';\nimport ConnectionStatus from '../../ui/ConnectionStatus';\nimport ChatHeader from '../../ui/ChatHeader';\nimport PlaceHolder, { PlaceHolderTypes } from '../../ui/PlaceHolder';\n\nconst noop = () => { };\n\nexport const ConversationPanel = (props) => {\n  const {\n    channelUrl,\n    stores: { sdkStore, userStore },\n    config: {\n      userId,\n      logger,\n      pubSub,\n      isOnline,\n      theme,\n      imageCompression,\n    },\n    dispatchers: {\n      reconnect,\n    },\n    queries = {},\n    startingPoint,\n    highlightedMessage,\n    useReaction,\n    replyType,\n    showSearchIcon,\n    onSearchClick,\n    renderChatItem,\n    renderChatHeader,\n    renderCustomMessage,\n    renderUserProfile,\n    disableUserProfile,\n    renderMessageInput,\n    useMessageGrouping,\n    onChatHeaderActionClick,\n    onBeforeSendUserMessage,\n    onBeforeSendFileMessage,\n    onBeforeUpdateUserMessage,\n  } = props;\n  const { sdk } = sdkStore;\n  const { config } = props;\n  const sdkError = sdkStore.error;\n  const sdkInit = sdkStore.initialized;\n  const { user } = userStore;\n  if (queries.messageListQuery) {\n    // eslint-disable-next-line no-console\n    console.warn('messageListQuery has been deprecated, please use messageListParams instead');\n  }\n\n  useEffect(() => {\n    if (renderCustomMessage) {\n      // eslint-disable-next-line no-console\n      console.info('The parameter type of renderCustomMessage will be changed to the object in the next minor update.');\n    }\n  }, []);\n\n  const [intialTimeStamp, setIntialTimeStamp] = useState(startingPoint);\n  useEffect(() => {\n    setIntialTimeStamp(startingPoint);\n  }, [startingPoint, channelUrl]);\n  const [animatedMessageId, setAnimatedMessageId] = useState('');\n  const [highLightedMessageId, setHighLightedMessageId] = useState(highlightedMessage);\n  useEffect(() => {\n    setHighLightedMessageId(highlightedMessage);\n  }, [highlightedMessage]);\n  const userFilledMessageListQuery = queries.messageListParams;\n  const [quoteMessage, setQuoteMessage] = useState(null);\n\n  const [messagesStore, messagesDispatcher] = useReducer(messagesReducer, messagesInitialState);\n  const scrollRef = useRef(null);\n\n  const {\n    allMessages,\n    loading,\n    initialized,\n    unreadCount,\n    unreadSince,\n    isInvalid,\n    currentGroupChannel = {},\n    hasMore,\n    lastMessageTimeStamp,\n    hasMoreToBottom,\n    latestFetchedMessageTimeStamp,\n    emojiContainer,\n    readStatus,\n  } = messagesStore;\n  const { isFrozen, isBroadcast, isSuper } = currentGroupChannel;\n  const { appInfo = {} } = sdk;\n  const usingReaction = (\n    appInfo.isUsingReaction && !isBroadcast && !isSuper && useReaction\n    // TODO: Make useReaction independent from appInfo.isUsingReaction\n  );\n\n  const userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  const userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n  const showScrollBot = hasMoreToBottom;\n\n  // TODO: emojiAllMap, emoijAllList, nicknamesMap => should be moved to messagesStore\n  const emojiAllMap = useMemo(() => (\n    usingReaction\n      ? utils.getAllEmojisMapFromEmojiContainer(emojiContainer)\n      : new Map()\n  ), [emojiContainer]);\n  const emojiAllList = useMemo(() => (\n    usingReaction\n      ? utils.getAllEmojisFromEmojiContainer(emojiContainer)\n      : []\n  ), [emojiContainer]);\n  const nicknamesMap = useMemo(() => (\n    usingReaction\n      ? utils.getNicknamesMapFromMembers(currentGroupChannel.members)\n      : new Map()\n  ), [currentGroupChannel.members]);\n\n  // Scrollup is default scroll for channel\n  const onScrollCallback = useScrollCallback({\n    currentGroupChannel, lastMessageTimeStamp, userFilledMessageListQuery, replyType,\n  }, {\n    hasMore,\n    logger,\n    messagesDispatcher,\n    sdk,\n  });\n\n  const scrollToMessage = useScrollToMessage({\n    setIntialTimeStamp,\n    setAnimatedMessageId,\n    allMessages,\n  }, { logger });\n\n  // onScrollDownCallback is added for navigation to different timestamps on messageSearch\n  // hasMoreToBottom, onScrollDownCallback -> scroll down\n  // hasMore, onScrollCallback -> scroll up(default behavior)\n  const onScrollDownCallback = useScrollDownCallback({\n    currentGroupChannel,\n    latestFetchedMessageTimeStamp,\n    userFilledMessageListQuery,\n    hasMoreToBottom,\n    replyType,\n  }, {\n    logger,\n    messagesDispatcher,\n    sdk,\n  });\n\n  const toggleReaction = useToggleReactionCallback({ currentGroupChannel }, { logger });\n\n  const memoizedEmojiListItems = useMemoizedEmojiListItems({\n    emojiContainer, toggleReaction,\n  }, {\n    useReaction: usingReaction,\n    logger,\n    userId,\n    emojiAllList,\n  });\n\n  // to create message-datasource\n  // this hook sets currentGroupChannel asynchronously\n  useGetChannel(\n    { channelUrl, sdkInit },\n    { messagesDispatcher, sdk, logger },\n  );\n\n  useEffect(() => {\n    setQuoteMessage(null);\n  }, [channelUrl]);\n\n  // Hook to handle ChannelEvents and send values to useReducer using messagesDispatcher\n  useHandleChannelEvents(\n    { currentGroupChannel, sdkInit, hasMoreToBottom },\n    {\n      messagesDispatcher,\n      sdk,\n      logger,\n      scrollRef,\n      setQuoteMessage,\n    },\n  );\n\n  // hook that fetches messages when channel changes\n  // to be clear here useGetChannel sets currentGroupChannel\n  // and useInitialMessagesFetch executes when currentGroupChannel changes\n  // p.s This one executes on intialTimeStamp change too\n  useInitialMessagesFetch({\n    currentGroupChannel,\n    userFilledMessageListQuery,\n    intialTimeStamp,\n    replyType,\n  }, {\n    sdk,\n    logger,\n    messagesDispatcher,\n  });\n\n  // handles API calls from withSendbird\n  useEffect(() => {\n    const subScriber = utils.pubSubHandler(channelUrl, pubSub, messagesDispatcher);\n    return () => {\n      utils.pubSubHandleRemover(subScriber);\n    };\n  }, [channelUrl, sdkInit]);\n\n  // handling connection breaks\n  useHandleReconnect({ isOnline, replyType }, {\n    logger,\n    sdk,\n    currentGroupChannel,\n    messagesDispatcher,\n    userFilledMessageListQuery,\n  });\n\n  // callbacks for Message CURD actions\n  const deleteMessage = useDeleteMessageCallback({ currentGroupChannel, messagesDispatcher },\n    { logger });\n  const updateMessage = useUpdateMessageCallback(\n    { currentGroupChannel, messagesDispatcher, onBeforeUpdateUserMessage },\n    { logger, sdk, pubSub },\n  );\n  const resendMessage = useResendMessageCallback(\n    { currentGroupChannel, messagesDispatcher },\n    { logger },\n  );\n  const [messageInputRef, onSendMessage] = useSendMessageCallback(\n    { currentGroupChannel, onBeforeSendUserMessage },\n    {\n      sdk,\n      logger,\n      pubSub,\n      messagesDispatcher,\n    },\n  );\n  const [onSendFileMessage] = useSendFileMessageCallback(\n    { currentGroupChannel, onBeforeSendFileMessage, imageCompression },\n    {\n      sdk,\n      logger,\n      pubSub,\n      messagesDispatcher,\n    },\n  );\n\n  if (!channelUrl) {\n    return (<div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.NO_CHANNELS} /></div>);\n  }\n  if (isInvalid) {\n    return (<div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.WRONG} /></div>);\n  }\n  if (sdkError) {\n    return (\n      <div className=\"sendbird-conversation\">\n        <PlaceHolder\n          type={PlaceHolderTypes.WRONG}\n          retryToConnect={() => {\n            logger.info('Channel: reconnecting');\n            reconnect();\n          }}\n        />\n      </div>\n    );\n  }\n  return (\n    <UserProfileProvider\n      className=\"sendbird-conversation\"\n      disableUserProfile={userDefinedDisableUserProfile}\n      renderUserProfile={userDefinedRenderProfile}\n    >\n      {\n        renderChatHeader\n          ? renderChatHeader({ channel: currentGroupChannel, user })\n          : (\n            <ChatHeader\n              theme={theme}\n              currentGroupChannel={currentGroupChannel}\n              currentUser={user}\n              showSearchIcon={showSearchIcon}\n              onSearchClick={onSearchClick}\n              onActionClick={onChatHeaderActionClick}\n              subTitle={currentGroupChannel.members && currentGroupChannel.members.length !== 2}\n              isMuted={false}\n            />\n          )\n      }\n      {\n        isFrozen && (\n          <FrozenNotification />\n        )\n      }\n      {\n        unreadCount > 0 && (\n          <Notification\n            count={unreadCount}\n            onClick={() => {\n              if (intialTimeStamp) {\n                setIntialTimeStamp(null);\n                setAnimatedMessageId(null);\n                setHighLightedMessageId(null);\n              } else {\n                utils.scrollIntoLast();\n                // there is no scroll\n                if (scrollRef.current.scrollTop === 0) {\n                  try {\n                    currentGroupChannel.markAsRead();\n                  } catch {\n                    //\n                  }\n                  messagesDispatcher({\n                    type: messageActionTypes.MARK_AS_READ,\n                  });\n                }\n              }\n            }}\n            time={unreadSince}\n          />\n        )\n      }\n      {\n        loading\n          ? (\n            <div className=\"sendbird-conversation\">\n              <PlaceHolder type={PlaceHolderTypes.LOADING} />\n            </div>\n          ) : (\n            <ConversationScroll\n              swapParams={\n                sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback()\n              }\n              animatedMessageId={animatedMessageId}\n              highLightedMessageId={highLightedMessageId}\n              userId={userId}\n              hasMore={hasMore}\n              disabled={!isOnline}\n              onScroll={onScrollCallback}\n              onScrollDown={onScrollDownCallback}\n              scrollRef={scrollRef}\n              readStatus={readStatus}\n              useReaction={usingReaction}\n              replyType={replyType}\n              allMessages={allMessages}\n              scrollToMessage={scrollToMessage}\n              emojiAllMap={emojiAllMap}\n              membersMap={nicknamesMap}\n              editDisabled={utils.isDisabledBecauseFrozen(currentGroupChannel)}\n              deleteMessage={deleteMessage}\n              updateMessage={updateMessage}\n              resendMessage={resendMessage}\n              toggleReaction={toggleReaction}\n              emojiContainer={emojiContainer}\n              renderChatItem={renderChatItem}\n              quoteMessage={quoteMessage}\n              setQuoteMessage={setQuoteMessage}\n              showScrollBot={showScrollBot}\n              onClickScrollBot={() => {\n                setIntialTimeStamp(null);\n                setAnimatedMessageId(null);\n                setHighLightedMessageId(null);\n              }}\n              renderCustomMessage={renderCustomMessage}\n              useMessageGrouping={useMessageGrouping}\n              messagesDispatcher={messagesDispatcher}\n              currentGroupChannel={currentGroupChannel}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n            />\n          )\n      }\n      <div className=\"sendbird-conversation__footer\">\n        <MessageInputWrapper\n          channel={currentGroupChannel}\n          user={user}\n          ref={messageInputRef}\n          isOnline={isOnline}\n          initialized={initialized}\n          onSendMessage={onSendMessage}\n          onFileUpload={onSendFileMessage}\n          quoteMessage={quoteMessage}\n          setQuoteMessage={setQuoteMessage}\n          renderMessageInput={renderMessageInput}\n        />\n        <div className=\"sendbird-conversation__footer__typing-indicator\">\n          <TypingIndicator className=\"sendbird-conversation__footer__typing-indicator__text\" channelUrl={channelUrl} sb={sdk} logger={logger} />\n          {\n            !isOnline && (\n              <ConnectionStatus sdkInit={sdkInit} sb={sdk} logger={logger} />\n            )\n          }\n        </div>\n      </div>\n    </UserProfileProvider>\n  );\n};\n\nConversationPanel.propTypes = {\n  channelUrl: PropTypes.string,\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      initialized: PropTypes.bool,\n      sdk: PropTypes.shape({\n        getErrorFirstCallback: PropTypes.func,\n        removeChannelHandler: PropTypes.func,\n        GroupChannel: PropTypes.any,\n        ChannelHandler: PropTypes.any,\n        addChannelHandler: PropTypes.func,\n        UserMessageParams: PropTypes.any,\n        FileMessageParams: PropTypes.any,\n        getAllEmoji: PropTypes.func,\n        appInfo: PropTypes.shape({}),\n      }),\n      error: PropTypes.bool,\n    }),\n    userStore: PropTypes.shape({\n      user: PropTypes.shape({}),\n    }),\n  }).isRequired,\n  dispatchers: PropTypes.shape({\n    reconnect: PropTypes.func,\n  }).isRequired,\n  config: PropTypes.shape({\n    disableUserProfile: PropTypes.bool,\n    renderUserProfile: PropTypes.func,\n    userId: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    theme: PropTypes.string,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func,\n    }),\n    pubSub: PropTypes.shape({\n      subscribe: PropTypes.func,\n      publish: PropTypes.func,\n    }),\n    imageCompression: PropTypes.shape({\n      compressionRate: PropTypes.number,\n      resizingWidth: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n      resizingHeight: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n    }),\n  }).isRequired,\n  queries: PropTypes.shape({\n    messageListParams: PropTypes.shape({\n      includeMetaArray: PropTypes.bool,\n      includeParentMessageText: PropTypes.bool,\n      includeReaction: PropTypes.bool,\n      includeReplies: PropTypes.bool,\n      includeThreadInfo: PropTypes.bool,\n      limit: PropTypes.number,\n      reverse: PropTypes.bool,\n      senderUserIdsFilter: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }),\n  startingPoint: PropTypes.number,\n  highlightedMessage: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  onBeforeSendUserMessage: PropTypes.func, // onBeforeSendUserMessage(text)\n  onBeforeSendFileMessage: PropTypes.func, // onBeforeSendFileMessage(File)\n  onBeforeUpdateUserMessage: PropTypes.func,\n  renderChatItem: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  renderCustomMessage: PropTypes.func,\n  renderMessageInput: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  renderChatHeader: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  showSearchIcon: PropTypes.bool,\n  onSearchClick: PropTypes.func,\n  onChatHeaderActionClick: PropTypes.func,\n  useReaction: PropTypes.bool,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']),\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  useMessageGrouping: PropTypes.bool,\n};\n\nConversationPanel.defaultProps = {\n  channelUrl: null,\n  queries: {},\n  onBeforeSendUserMessage: null,\n  onBeforeSendFileMessage: null,\n  onBeforeUpdateUserMessage: null,\n  startingPoint: null,\n  highlightedMessage: null,\n  renderChatItem: null,\n  renderCustomMessage: null,\n  renderMessageInput: null,\n  renderChatHeader: null,\n  useReaction: true,\n  replyType: 'NONE',\n  showSearchIcon: false,\n  onSearchClick: noop,\n  disableUserProfile: false,\n  renderUserProfile: null,\n  useMessageGrouping: true,\n  onChatHeaderActionClick: noop,\n};\n\nexport const {\n  getEmojiCategoriesFromEmojiContainer,\n  getAllEmojisFromEmojiContainer,\n  getEmojisFromEmojiContainer,\n} = utils;\n\nexport default withSendbirdContext(ConversationPanel);\n"],"names":["MessageStatusTypes","getOutgoingMessageStates","MessageStatus","className","message","channel","dateLocale","useContext","LocalizationContext","showMessageStatusIcon","isGroupChannel","isSuper","isPublic","isBroadcast","iconType","SENT","IconTypes","DONE","DELIVERED","DONE_ALL","READ","FAILED","ERROR","iconColor","IconColors","messageStatus","useMemo","getOutgoingMessageState","getUnreadMemberCount","getUndeliveredMemberCount","React","Array","isArray","join","PENDING","Loader","Icon","SPINNER","PRIMARY","isSentStatus","Label","LabelTypography","CAPTION_3","LabelColors","ONBACKGROUND_2","format","createdAt","locale","propTypes","PropTypes","oneOfType","string","arrayOf","shape","number","sender","friendName","nickname","userId","profileUrl","sendingStatus","func","bool","defaultProps","MessageItemMenu","_a","_c","isByMe","_d","disabled","replyType","showEdit","showRemove","resendMessage","setQuoteMessage","setSupposedHover","stringSet","triggerRef","useRef","containerRef","showMenuItemCopy","isUserMessage","showMenuItemReply","isFailedMessage","isPendingMessage","showMenuItemEdit","isSentMessage","showMenuItemResend","_b","isResendable","showMenuItemDelete","getClassName","ContextMenu","toggleDropdown","IconButton","MORE","CONTENT_INVERSE","close","closeDropdown","MenuItems","MenuItem","copyToClipboard","MESSAGE_MENU__COPY","parentMessageId","MESSAGE_MENU__REPLY","MESSAGE_MENU__EDIT","MESSAGE_MENU__RESEND","threadInfo","replyCount","MESSAGE_MENU__DELETE","ReactionButton","forwardRef","props","ref","width","height","selected","onClick","children","slice","e","element","isRequired","MessageItemReactionMenu","spaceFromTrigger","emojiContainer","toggleReaction","EMOJI_MORE","EmojiListItems","getEmojiListAll","map","emoji","isReacted","reactions","filter","reaction","key","userIds","some","reactorId","ImageRenderer","url","style","QUESTION","ON_BACKGROUND_3","Tooltip","CAPTION_2","ONCONTENT_1","SPACE_FROM_TRIGGER","TooltipWrapper","hoverTooltip","showHoverTooltip","setShowHoverTooltip","useState","childrenRef","bottom","left","current","offsetWidth","ReactionBadge","count","isAdd","getClassNameTail","ONBACKGROUND_1","EmojiReactions2","memberNicknamesMap","_e","emojisMap","getEmojiMapAll","addReactionRef","length","reactedByMe","isReactedBy","getEmojiTooltipString","get","size","AdminMessage","isAdminMessage","messageType","TextMessageItemBody","mouseHover","BODY_1","isEditedMessage","ONCONTENT_2","concat","MESSAGE_EDITED","FileMessageItemBody","IMAGE","PHOTO","VIDEO","PLAY","AUDIO","FILE_AUDIO","GIF","OTHERS","FILE_DOCUMENT","getUIKitFileType","type","TextButton","window","open","truncateString","name","ThumbnailMessageItemBody","showFileViewer","_f","thumbnails","thumbnailUrl","_g","imageRendered","setImageRendered","isVideoMessage","ON_BACKGROUND_2","isGifMessage","GRAY","OGMessageItemBody","_k","_l","openOGUrl","ogMetaData","uuidv4","split","word","isUrl","LinkLabel","defaultImage","alt","THUMBNAIL_NONE","title","SUBTITLE_2","_h","description","BODY_2","_j","UnknownMessageItemBody","UNKNOWN__UNKNOWN_MESSAGE_TYPE","UNKNOWN__CANNOT_READ_MESSAGE","QuoteMessage","parentMessage","parentMessageSender","parentMessageSenderNickname","QUOTED_MESSAGE__CURRENT_USER","parentMessageUrl","parentMessageType","currentMessageSenderNickname","isThumbnailLoaded","setThumbnailLoaded","uikitFileTypes","getUIKitFileTypes","splitFileName","messageId","REPLY","ONBACKGROUND_3","QUOTED_MESSAGE__REPLIED_TO","isThumbnailMessage","isVideo","isGif","isFileMessage","isSupportedFileView","MessageContent","chainTop","chainBottom","useReaction","nicknamesMap","scrollToMessage","messageTypes","getUIKitMessageTypes","UserProfileContext","disableUserProfile","renderUserProfile","avatarRef","setMouseHover","supposedHover","isByMeClassName","chainTopClassName","useReactionClassName","supposedHoverClassName","useReplying","useReplyingClassName","call","ClientAdminMessage","Avatar","paddingTop","paddingBottom","user","UserProfile","getSenderName","isTextMessage","isOGMessage","getUIKitMessageType","FILE","UNKNOWN","EmojiReactions","RemoveMessage","onCloseModal","onDeleteMessage","Modal","ButtonTypes","DANGER","MODAL__DELETE_MESSAGE__TITLE","MessageHoc","editDisabled","hasSeparator","deleteMessage","updateMessage","membersMap","animatedMessageId","highLightedMessageId","quoteMessage","renderCustomMessage","currentGroupChannel","handleScroll","setShowEdit","setShowRemove","setShowFileViewer","isAnimated","setIsAnimated","isHighlighted","setIsHighlighted","editMessageInputRef","useMessageScrollRef","useLayoutEffect","scrollIntoView","block","inline","setTimeout","RenderedMessage","requestState","DateSeparator","MessageInput","marginBottom","RemoveMessageModal","FileViewer","isDateseparator","oneOf","instanceOf","Map","emojiCategories","emojis","RESET_MESSAGES","RESET_STATE","CLEAR_SENT_MESSAGES","GET_PREV_MESSAGES_START","GET_PREV_MESSAGES_SUCESS","GET_NEXT_MESSAGES_SUCESS","GET_NEXT_MESSAGES_FAILURE","SEND_MESSAGEGE_START","SEND_MESSAGEGE_SUCESS","SEND_MESSAGEGE_FAILURE","RESEND_MESSAGEGE_START","ON_MESSAGE_RECEIVED","UPDATE_UNREAD_COUNT","ON_MESSAGE_UPDATED","ON_MESSAGE_THREAD_INFO_UPDATED","ON_MESSAGE_DELETED","ON_MESSAGE_DELETED_BY_REQ_ID","SET_CURRENT_CHANNEL","SET_CHANNEL_INVALID","MARK_AS_READ","ON_REACTION_UPDATED","SET_EMOJI_CONTAINER","MESSAGE_LIST_PARAMS_CHANGED","MessageStatusType","UNDEFINED","SUCCEEDED","getSendingMessageStatus","scrollIntoLast","intialTry","MAX_TRIES","currentTry","scrollDOM","document","querySelector","scrollTop","scrollHeight","error","pubSubHandleRemover","subscriber","forEach","s","remove","pubSubHandler","channelUrl","pubSub","dispatcher","subscribe","set","topics","msg","channelActions","payload","fromSelector","getParsedStatus","unreadCount","getReadReceipt","isDelivered","getDeliveryReceipt","isOperator","groupChannel","myRole","isDisabledBecauseFrozen","isFrozen","isDisabledBecauseMuted","myMutedState","getEmojiCategoriesFromEmojiContainer","getAllEmojisFromEmojiContainer","allEmojis","categoryIndex","emojiIndex","push","getEmojisFromEmojiContainer","emojiCategoryId","emojiCategory","id","getAllEmojisMapFromEmojiContainer","allEmojisMap","getNicknamesMapFromMembers","members","memberIndex","getMessageCreatedAt","isSameGroup","comparingMessage","compareMessagesForGrouping","prevMessage","currMessage","nextMessage","isAcceptable","hasOwnProperty","property","passUnsuccessfullMessages","allMessages","newMessage","lastIndexOfSucceededMessage","lastIndexOf","messages","splice","pxToNumber","px","parsed","Number","parseFloat","isNaN","initialized","loading","hasMore","lastMessageTimeStamp","hasMoreToBottom","latestFetchedMessageTimeStamp","unreadSince","isInvalid","messageListParams","reducer","state","action","actionTypes","initialState","_objectSpread","m","receivedMessages","stateChannel","stateChannelUrl","actionChannelUrl","duplicatedMessageIds","updatedAllMessages","duplicatedMessage","find","compareIds","updatedAt","filteredNewMessages","hasHasMoreToBottom","hasLatestFetchedMessageTimeStamp","newMessages","reqId","sort","a","b","failed","currentGroupChannelUrl","scrollToEnd","filterMessageListParams","Date","event","targetMessageId","applyReactionEvent","useHandleChannelEvents","sdkInit","messagesDispatcher","sdk","logger","scrollRef","useEffect","messageReceiverId","ChannelHandler","info","onMessageReceived","offsetHeight","messageActions","markAsRead","warning","onReadReceiptUpdated","onDeliveryReceiptUpdated","onMessageUpdated","onThreadInfoUpdated","onMessageDeleted","_","onReactionUpdated","reactionEvent","onChannelChanged","onChannelFrozen","onChannelUnfrozen","onUserMuted","onUserUnmuted","onUserBanned","onOperatorUpdated","addChannelHandler","removeChannelHandler","useSetChannel","GroupChannel","getChannel","then","messageActionTypes","catch","getAllEmoji","emojiContainer_","err","PREV_RESULT_SIZE","NEXT_RESULT_SIZE","getLatestMessageTimeStamp","latestMessage","useInitialMessagesFetch","userFilledMessageListQuery","intialTimeStamp","MessageListParams","getMessagesByTimestamp","prevResultSize","isInclusive","includeReplies","includeReaction","includeThreadInfo","includeParentMessageInfo","Object","keys","nextResultSize","nextMessageListParams","getTime","nextMessages","finally","utils","useHandleReconnect","isOnline","wasOffline","appInfo","isUsingReaction","messageListParams_1","lastMessageTime","useScrollCallback","useCallback","cb","hasMoreMessages","lastMessageTs","RESULT_SIZE","useScrollDownCallback","messagesLength","useDeleteMessageCallback","useUpdateMessageCallback","onBeforeUpdateUserMessage","text","createParamsDefault","txt","params","UserMessageParams","createCustomPrams","updateUserMessage","r","swapParams","getErrorFirstCallback","publish","useResendMessageCallback","failedMessage","file","resendUserMessage","resendFileMessage","console","useSendMessageCallback","onBeforeSendUserMessage","messageInputRef","sendMessage","value","trim","isReplyToChannel","pendingMsg","sendUserMessage","res","useSendFileMessageCallback","onBeforeSendFileMessage","imageCompression","compressionRate","resizingWidth","resizingHeight","createCustomParams","compressibleFileType","compressibleRatio","compressibleDiamensions","canCompressImage","file_","FileMessageParams","image","createElement","src","URL","createObjectURL","onload","revokeObjectURL","canvas","imageWdith","naturalWidth","imageHeight","naturalHeight","targetWidth","targetHeight","context","getContext","drawImage","toBlob","newImageBlob","compressedFile","File","pendingMessage","sendFileMessage","response","localUrl","useMemoizedEmojiListItems","emojiAllList","parentRef","parentContainRef","reactedReaction","indexOf","useToggleReactionCallback","deleteReaction","addReaction","useScrollToMessage","setIntialTimeStamp","setAnimatedMessageId","isPresent","SCROLL_REF_CLASS_NAME","ConversationScroll","Component","constructor","_defineProperty","scrollBottom","onScroll","onScrollDown","target","clientHeight","nodes","querySelectorAll","first","last","setState","render","emojiAllMap","renderChatItem","useMessageGrouping","memoizedEmojiListItems","showScrollBot","onClickScrollBot","PlaceHolder","PlaceHolderTypes","NO_MESSAGES","idx","previousMessage","previousMessageCreatedAt","currentCreatedAt","isSameDay","rendered","onUpdateMessage","onResendMessage","onScrollToMessage","onReplyMessage","menuDisabled","log","undefined","MessageHOC","CHEVRON_DOWN","Notification","time","timeArray","CHANNEL__MESSAGE_LIST__NOTIFICATION__ON","CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE","CONTENT","FrozenNotification","CHANNEL_FROZEN","TypingIndicatorText","TYPING_INDICATOR__IS_TYPING","TYPING_INDICATOR__AND","TYPING_INDICATOR__ARE_TYPING","TYPING_INDICATOR__MULTIPLE_TYPING","TypingIndicator","sb","handlerId","setHandlerId","typingMembers","setTypingMembers","newHandlerId","handler","onTypingStatusUpdated","getTypingMembers","componentClassname","QuoteMessageThumbnail","isImageMessage","isAudioMessage","QuoteMessageInput","replyingMessage","onClose","fileMessage","CAPTION_1","QUOTE_MESSAGE_INPUT__REPLY_TO","NO_NAME","QUOTE_MESSAGE_INPUT__FILE_TYPE_IMAGE","QUOTE_MESSAGE_INPUT__FILE_TYPE__VIDEO","QUOTE_MESSAGE_INPUT__FILE_TYPE_GIF","CLOSE","MessageInputWrapper","onSendMessage","onFileUpload","renderMessageInput","MESSAGE_INPUT__QUOTE_REPLY__PLACE_HOLDER","MESSAGE_INPUT__PLACE_HOLDER__DISABLED","MESSAGE_INPUT__PLACE_HOLDER__MUTED","startTyping","ConnectionStatus","TRYING_TO_CONNECT","DISCONNECTED","getChannelTitle","currentUserId","LabelStringSet","NO_TITLE","NO_MEMBERS","noop","ChatHeader","currentUser","subTitle","isMuted","theme","showSearchIcon","onSearchClick","onActionClick","ChannelAvatar","H_2","NOTIFICATIONS_OFF_FILLED","SEARCH","INFO","coverUrl","ConversationPanel","stores","sdkStore","userStore","config","dispatchers","reconnect","queries","startingPoint","highlightedMessage","renderChatHeader","onChatHeaderActionClick","sdkError","messageListQuery","warn","setHighLightedMessageId","messagesStore","useReducer","messagesReducer","messagesInitialState","readStatus","usingReaction","userDefinedDisableUserProfile","userDefinedRenderProfile","onScrollCallback","onScrollDownCallback","useGetChannel","subScriber","onSendFileMessage","NO_CHANNELS","WRONG","UserProfileProvider","LOADING","any","includeMetaArray","includeParentMessageText","limit","reverse","senderUserIdsFilter","withSendbirdContext"],"mappings":"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"}