{"version":3,"file":"ChannelSettings.js","sources":["../src/smart-components/ChannelSettings/components/EditDetails.jsx","../src/smart-components/ChannelSettings/components/ChannelProfile.jsx","../src/smart-components/ChannelSettings/components/AdminPanel/MembersModal.tsx","../src/smart-components/ChannelSettings/components/MembersAccordion.jsx","../src/smart-components/ChannelSettings/components/UserListItem.tsx","../src/smart-components/ChannelSettings/components/AdminPanel/OperatorsModal.tsx","../src/smart-components/ChannelSettings/components/AdminPanel/AddOperatorsModal.tsx","../src/smart-components/ChannelSettings/components/AdminPanel/OperatorList.tsx","../src/smart-components/ChannelSettings/components/AdminPanel/InviteMembersModal.tsx","../src/smart-components/ChannelSettings/components/AdminPanel/MemberList.tsx","../src/smart-components/ChannelSettings/components/AdminPanel/BannedMembersModal.tsx","../src/smart-components/ChannelSettings/components/AdminPanel/BannedMemberList.tsx","../src/smart-components/ChannelSettings/components/AdminPanel/MutedMembersModal.tsx","../src/smart-components/ChannelSettings/components/AdminPanel/MutedMemberList.tsx","../src/smart-components/ChannelSettings/components/AdminPanel/index.tsx","../src/smart-components/ChannelSettings/index.jsx"],"sourcesContent":["import React, { useState, useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Modal from '../../../ui/Modal';\nimport Input, { InputLabel } from '../../../ui/Input';\nimport Avatar from '../../../ui/Avatar/index';\nimport { Type as ButtonType } from '../../../ui/Button/type';\nimport Label, { LabelColors, LabelTypography } from '../../../ui/Label';\nimport TextButton from '../../../ui/TextButton';\nimport ChannelAvatar from '../../../ui/ChannelAvatar/index';\n\nconst EditDetails = (props) => {\n  const {\n    onSubmit,\n    onCancel,\n    channel,\n    userId,\n    theme,\n  } = props;\n  const inputRef = useRef(null);\n  const formRef = useRef(null);\n  const hiddenInputRef = useRef(null);\n  const [currentImg, setCurrentImg] = useState(null);\n  const [newFile, setNewFile] = useState(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const title = channel.name;\n  return (\n    <Modal\n      titleText={stringSet.MODAL__CHANNEL_INFORMATION__TITLE}\n      submitText={stringSet.BUTTON__SAVE}\n      onCancel={onCancel}\n      onSubmit={() => {\n        if (title !== '' && !inputRef.current.value) {\n          if (formRef.current.reportValidity) { // might not work in explorer\n            formRef.current.reportValidity();\n          }\n          return;\n        }\n        onSubmit(newFile, inputRef.current.value);\n        onCancel();\n      }}\n      type={ButtonType.PRIMARY}\n    >\n      <form\n        className=\"channel-profile-form\"\n        ref={formRef}\n        onSubmit={(e) => { e.preventDefault(); }}\n      >\n        <div className=\"channel-profile-form__img-section\">\n          <InputLabel>\n            {stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE}\n          </InputLabel>\n          <div className=\"channel-profile-form__avatar\">\n            {\n              currentImg\n                ? (\n                  <Avatar\n                    height=\"80px\"\n                    width=\"80px\"\n                    src={currentImg}\n                  />\n                ) : (\n                  <ChannelAvatar\n                    height={80}\n                    width={80}\n                    channel={channel}\n                    userId={userId}\n                    theme={theme}\n                  />\n                )\n              }\n          </div>\n          <input\n            ref={hiddenInputRef}\n            type=\"file\"\n            accept=\"image/gif, image/jpeg, image/png\"\n            style={{ display: 'none' }}\n            onChange={(e) => {\n              setCurrentImg(URL.createObjectURL(e.target.files[0]));\n              setNewFile(e.target.files[0]);\n              hiddenInputRef.current.value = '';\n            }}\n          />\n          <TextButton\n            className=\"channel-profile-form__avatar-button\"\n            onClick={() => hiddenInputRef.current.click()}\n            notUnderline\n          >\n            <Label type={LabelTypography.BUTTON_1} color={LabelColors.PRIMARY}>\n              {stringSet.MODAL__CHANNEL_INFORMATION__UPLOAD}\n            </Label>\n          </TextButton>\n        </div>\n        <div className=\"channel-profile-form__name-section\">\n          <InputLabel>\n            {stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_NAME}\n          </InputLabel>\n          <Input\n            required={title !== ''}\n            name=\"channel-profile-form__name\"\n            ref={inputRef}\n            value={title}\n            placeHolder={stringSet.MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER}\n          />\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nEditDetails.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  channel: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  theme: PropTypes.string.isRequired,\n};\n\nexport default EditDetails;\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './channel-profile.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelColors, LabelTypography } from '../../../ui/Label';\nimport EditDetailsModal from './EditDetails';\nimport TextButton from '../../../ui/TextButton';\nimport ChannelAvatar from '../../../ui/ChannelAvatar/index';\n\nconst ChannelProfile = (props) => {\n  const {\n    disabled,\n    channel,\n    userId,\n    theme,\n    onChannelInfoChange,\n  } = props;\n  const [showModal, setShowModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  const getChannelName = () => {\n    if (channel && channel.name && channel.name !== 'Group Channel') {\n      return channel.name;\n    }\n    if (channel && (channel.name === 'Group Channel' || !channel.name)) {\n      return channel.members.map((member) => member.nickname || stringSet.NO_NAME).join(', ');\n    }\n    return stringSet.NO_TITLE;\n  };\n\n  return (\n    <div className=\"sendbird-channel-profile\">\n      <div className=\"sendbird-channel-profile--inner\">\n        <div className=\"sendbird-channel-profile__avatar\">\n          <ChannelAvatar\n            channel={channel}\n            userId={userId}\n            theme={theme}\n            width={80}\n            height={80}\n          />\n        </div>\n        <Label\n          className=\"sendbird-channel-profile__title\"\n          type={LabelTypography.SUBTITLE_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {getChannelName()}\n        </Label>\n        <TextButton\n          disabled={disabled}\n          className=\"sendbird-channel-profile__edit\"\n          onClick={() => {\n            if (disabled) { return; }\n            setShowModal(true);\n          }}\n          notUnderline\n        >\n          <Label\n            type={LabelTypography.BUTTON_1}\n            color={disabled ? LabelColors.ONBACKGROUND_2 : LabelColors.PRIMARY}\n          >\n            {stringSet.CHANNEL_SETTING__PROFILE__EDIT}\n          </Label>\n        </TextButton>\n        {\n          showModal && (\n            <EditDetailsModal\n              onCancel={() => setShowModal(false)}\n              onSubmit={onChannelInfoChange}\n              channel={channel}\n              userId={userId}\n              theme={theme}\n            />\n          )\n        }\n      </div>\n    </div>\n  );\n};\n\nChannelProfile.propTypes = {\n  channel: PropTypes.shape({\n    name: PropTypes.string,\n    members: PropTypes.arrayOf(\n      PropTypes.shape({\n        nickname: PropTypes.string,\n      }),\n    ),\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  theme: PropTypes.string,\n  disabled: PropTypes.bool,\n  onChannelInfoChange: PropTypes.func,\n};\n\nChannelProfile.defaultProps = {\n  theme: 'light',\n  disabled: false,\n  onChannelInfoChange: () => { },\n};\n\nexport default ChannelProfile;\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  currentUser?: string;\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport default function MembersModal({\n  hideModal,\n  channel,\n  currentUser,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  useEffect(() => {\n    const memberListQuery = channel.createMemberListQuery();\n    memberListQuery.limit = 20;\n    memberListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, [])\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"All Members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              user={member}\n              key={member.userId}\n              currentUser={currentUser}\n              action={({ parentRef, actionRef }) => (\n                <>\n                  {channel.myRole === 'operator' && (\n                    <ContextMenu\n                      menuTrigger={(toggleDropdown) => (\n                        <IconButton\n                          className=\"sendbird-user-message__more__menu\"\n                          width=\"32px\"\n                          height=\"32px\"\n                          onClick={toggleDropdown}\n                        >\n                          <Icon\n                            width=\"24px\"\n                            height=\"24px\"\n                            type={IconTypes.MORE}\n                            fillColor={IconColors.CONTENT_INVERSE}\n                          />\n                        </IconButton>\n                      )}\n                      menuItems={(closeDropdown) => (\n                        <MenuItems\n                          parentContainRef={parentRef}\n                          parentRef={actionRef} // for catching location(x, y) of MenuItems\n                          closeDropdown={closeDropdown}\n                          openLeft\n                        >\n                          <MenuItem\n                            onClick={() => {\n                              if ((member.role !== 'operator')) {\n                                channel.addOperators([member.userId], () => {\n                                  setMembers(members.map(m => {\n                                    if(m.userId === member.userId) {\n                                      return {\n                                        ...member,\n                                        role: 'operator',\n                                      };\n                                    }\n                                    return m;\n                                  }));\n                                  closeDropdown();\n                                });\n                              } else {\n                                channel.removeOperators([member.userId], () => {\n                                  setMembers(members.map(m => {\n                                    if(m.userId === member.userId) {\n                                      return {\n                                        ...member,\n                                        role: '',\n                                      };\n                                    }\n                                    return m;\n                                  }));\n                                  closeDropdown();\n                                });\n                              }\n                            }}\n                          >\n                            { member.role !== 'operator' ? 'Promote to operator' : 'Demote operator'}\n                          </MenuItem>\n                          {\n                            // No muted members in broadcast channel\n                            !channel.isBroadcast && (\n                              <MenuItem\n                                onClick={() => {\n                                  if (member.isMuted) {\n                                    channel.unmuteUser(member, () => {\n                                      setMembers(members.map(m => {\n                                        if(m.userId === member.userId) {\n                                          return {\n                                            ...member,\n                                            isMuted: false,\n                                          };\n                                        }\n                                        return m;\n                                      }));\n                                      closeDropdown();\n                                    })\n                                  } else {\n                                    channel.muteUser(member, () => {\n                                      setMembers(members.map(m => {\n                                        if(m.userId === member.userId) {\n                                          return {\n                                            ...member,\n                                            isMuted: true,\n                                          };\n                                        }\n                                        return m;\n                                      }));\n                                      closeDropdown();\n                                    });\n                                  }\n                                }}\n                              >\n                                { member.isMuted ? 'Unmute' : 'Mute' }\n                              </MenuItem>\n                            )\n                          }\n                          <MenuItem\n                            onClick={() => {\n                              channel.banUser(member, -1, '', () => {\n                                setMembers(members.filter(({ userId }) => {\n                                  return userId !== member.userId;\n                                }));\n                              });\n                            }}\n                          >\n                            Ban\n                          </MenuItem>\n                        </MenuItems>\n                      )}\n                    />\n                  )}\n                </>\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useState, useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './members-accordion.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport { UserProfileContext } from '../../../lib/UserProfileContext';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../ui/Button';\nimport Avatar from '../../../ui/Avatar/index';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport InviteMembers from '../../InviteMembers';\nimport MembersModal from './AdminPanel/MembersModal';\nimport UserProfile from '../../../ui/UserProfile';\nimport ContextMenu, { MenuItems } from '../../../ui/ContextMenu';\n\nconst SHOWN_MEMBER_MAX = 10;\n\nconst UserListItem = ({ member = {}, currentUser = '' }) => {\n  const avatarRef = useRef(null);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = useContext(UserProfileContext);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-members-accordion__member\">\n      <div className=\"sendbird-members-accordion__member-avatar\">\n        <ContextMenu\n          menuTrigger={(toggleDropdown) => (\n            <Avatar\n              onClick={() => {\n                if (!disableUserProfile) {\n                  toggleDropdown();\n                }\n              }}\n              ref={avatarRef}\n              src={member.profileUrl}\n              width={24}\n              height={24}\n            />\n          )}\n          menuItems={(closeDropdown) => (\n            <MenuItems\n              openLeft\n              parentRef={avatarRef}\n              // for catching location(x, y) of MenuItems\n              parentContainRef={avatarRef}\n              // for toggling more options(menus & reactions)\n              closeDropdown={closeDropdown}\n              style={{ paddingTop: 0, paddingBottom: 0 }}\n            >\n              {\n                renderUserProfile\n                  ? renderUserProfile({\n                    user: member,\n                    currentUserId: currentUser,\n                    close: closeDropdown,\n                  })\n                  : (\n                    <UserProfile\n                      user={member}\n                      currentUserId={currentUser}\n                      onSuccess={closeDropdown}\n                    />\n                  )\n              }\n            </MenuItems>\n          )}\n        />\n      </div>\n      <Label type={LabelTypography.SUBTITLE_2} color={LabelColors.ONBACKGROUND_1}>\n        {member.nickname || stringSet.NO_NAME}\n        {\n          (currentUser === member.userId) && (\n            stringSet.CHANNEL_SETTING__MEMBERS__YOU\n          )\n        }\n      </Label>\n    </div>\n  );\n};\n\nUserListItem.propTypes = {\n  member: PropTypes.shape({\n    userId: PropTypes.string,\n    profileUrl: PropTypes.string,\n    nickname: PropTypes.string,\n  }).isRequired,\n  currentUser: PropTypes.string.isRequired,\n};\n\nconst MembersAccordion = ({\n  channel,\n  disabled,\n  currentUser,\n  userQueryCreator,\n  onInviteMembers,\n  swapParams,\n}) => {\n  const members = channel.members || [];\n  const [showMoreModal, setShowMoreModal] = useState(false);\n  const [showAddUserModal, setShowAddUserModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-members-accordion\">\n      <div className=\"sendbird-members-accordion__list\">\n        {\n          members.slice(0, SHOWN_MEMBER_MAX).map((member) => (\n            <UserListItem\n              member={member}\n              currentUser={currentUser}\n              key={member.userId}\n            />\n          ))\n        }\n      </div>\n      <div className=\"sendbird-members-accordion__footer\">\n        {\n          members.length >= SHOWN_MEMBER_MAX && (\n            <Button\n              className=\"sendbird-members-accordion__footer__all-members\"\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => setShowMoreModal(true)}\n            >\n              {stringSet.CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS}\n            </Button>\n          )\n        }\n        {\n          members.length >= SHOWN_MEMBER_MAX && showMoreModal && (\n            <MembersModal\n              currentUser={currentUser}\n              hideModal={() => {\n                setShowMoreModal(false);\n              }}\n              channel={channel}\n            />\n          )\n        }\n        {/* <Button\n          className=\"sendbird-members-accordion__footer__invite-users\"\n          type={ButtonTypes.SECONDARY}\n          size={ButtonSizes.SMALL}\n          disabled={disabled}\n          onClick={() => {\n            if (disabled) { return; }\n            setShowAddUserModal(true);\n          }}\n        >\n          {stringSet.CHANNEL_SETTING__MEMBERS__INVITE_MEMBER}\n        </Button> */}\n        {\n          showAddUserModal && (\n            <InviteMembers\n              swapParams={swapParams}\n              titleText={stringSet.MODAL__INVITE_MEMBER__TITLE}\n              submitText={stringSet.BUTTON__INVITE}\n              closeModal={() => setShowAddUserModal(false)}\n              idsToFilter={members.map((member) => (member.userId))}\n              userQueryCreator={userQueryCreator}\n              onSubmit={onInviteMembers}\n            />\n          )\n        }\n      </div>\n    </div>\n  );\n};\n\nMembersAccordion.propTypes = {\n  swapParams: PropTypes.bool,\n  disabled: PropTypes.bool,\n  channel: PropTypes.shape({\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n  }),\n  currentUser: PropTypes.string,\n  userQueryCreator: PropTypes.func.isRequired,\n  onInviteMembers: PropTypes.func.isRequired,\n};\n\nMembersAccordion.defaultProps = {\n  swapParams: false,\n  currentUser: '',\n  disabled: false,\n  channel: {},\n};\n\nexport default MembersAccordion;\n","// might move to reusable/UI\n\nimport React, { ReactElement, useRef, useContext } from 'react';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport { UserProfileContext } from '../../../lib/UserProfileContext';\nimport Avatar from '../../../ui/Avatar/index';\nimport MutedAvatarOverlay from '../../../ui/Avatar/MutedAvatarOverlay';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport UserProfile from '../../../ui/UserProfile';\nimport ContextMenu, { MenuItems } from '../../../ui/ContextMenu';\n\nimport './user-list-item.scss';\nimport { SendbirdTypes } from '../../../types';\n\nconst COMPONENT_NAME = 'sendbird-user-list-item--small';\n\ninterface ActionProps {\n  actionRef: React.RefObject<HTMLInputElement>;\n  parentRef: React.RefObject<HTMLInputElement>;\n}\n\ntype CustomUser = SendbirdTypes['User'] & {\n  isMuted: boolean;\n  role: string;\n};\n\ninterface Props {\n  user: CustomUser;\n  currentUser?: string;\n  className?: string;\n  action?(props: ActionProps): ReactElement;\n}\n\nconst UserListItem = ({\n  user,\n  className,\n  currentUser,\n  action,\n}: Props): ReactElement => {\n  const actionRef = useRef(null);\n  const parentRef = useRef(null);\n  const avatarRef = useRef(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = useContext(UserProfileContext);\n  const injectingClassNames = Array.isArray(className) ? className : [className];\n  return (\n    <div\n      ref={parentRef}\n      className={[\n        COMPONENT_NAME, ...injectingClassNames,\n      ].join(' ')}\n    >\n      {\n        user.isMuted && (\n          <MutedAvatarOverlay />\n        )\n      }\n      <ContextMenu\n        menuTrigger={(toggleDropdown) => (\n          <Avatar\n            onClick={() => {\n              if (!disableUserProfile) {\n                toggleDropdown();\n              }\n            }}\n            ref={avatarRef}\n            className={`${COMPONENT_NAME}__avatar`}\n            src={user.profileUrl}\n            width={24}\n            height={24}\n          />\n        )}\n        menuItems={(closeDropdown) => (\n          <MenuItems\n            openLeft\n            parentRef={avatarRef}\n            // for catching location(x, y) of MenuItems\n            parentContainRef={avatarRef}\n            // for toggling more options(menus & reactions)\n            closeDropdown={closeDropdown}\n            style={{ paddingTop: 0, paddingBottom: 0 }}\n          >\n            {\n              renderUserProfile\n                ? renderUserProfile({\n                  user,\n                  currentUserId: currentUser,\n                  close: closeDropdown,\n                })\n                : (\n                  <UserProfile\n                    user={user}\n                    currentUserId={currentUser}\n                    onSuccess={closeDropdown}\n                  />\n                )\n            }\n          </MenuItems>\n        )}\n      />\n      <Label\n        className={`${COMPONENT_NAME}__title`}\n        type={LabelTypography.SUBTITLE_1}\n        color={LabelColors.ONBACKGROUND_1}\n      >\n        {user.nickname || stringSet.NO_NAME}\n        {\n          (currentUser === user.userId) && (\n            \" (You)\"\n          )\n        }\n      </Label>\n      { // if there is now nickname, display userId\n        !user.nickname && (\n          <Label\n            className={`${COMPONENT_NAME}__subtitle`}\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {user.userId}\n          </Label>\n        )\n      }\n      {\n        user.role === 'operator' && (\n          <Label\n            className={`${COMPONENT_NAME}__operator`}\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            Operator\n          </Label>\n        )\n      }\n      {\n        action && (\n          <div ref={actionRef} className={`${COMPONENT_NAME}__action`}>\n            { action({ actionRef, parentRef }) }\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nexport default UserListItem;\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n  currentUser?: string;\n}\n\nexport default function OperatorsModal({\n  hideModal,\n  channel,\n  currentUser,\n}: Props): ReactElement {\n  const [operators, setOperators] = useState([]);\n  const [operatorQuery, setOperatorQuery] = useState(null);\n\n  useEffect(() => {\n    const operatorListQuery = channel.createOperatorListQuery();\n    operatorListQuery.limit = 20;\n    operatorListQuery.next((operators, error) => {\n      if (error) {\n        return;\n      }\n      setOperators(operators);\n    });\n    setOperatorQuery(operatorListQuery);\n  }, [])\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"All operators\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = operatorQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              operatorQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setOperators([\n                  ...operators,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { operators.map((member) => (\n            <UserListItem\n              currentUser={currentUser}\n              user={member}\n              key={member.userId}\n              action={({ parentRef, actionRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.removeOperators([member.userId], (response, error) => {\n                            if (error) {\n                              return;\n                            }\n                            setOperators(operators.filter(({ userId }) => {\n                              return userId !== member.userId;\n                            }));\n                          });\n                          closeDropdown();\n                        }}\n                      >\n                        Dismiss operator\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  )\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Modal from '../../../../ui/Modal';\nimport Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport { Type as ButtonType } from '../../../../ui/Button/type';\nimport UserListItem from '../../../../ui/UserListItem';\n\ninterface Props {\n  hideModal(): void;\n  onSubmit(members: Array<string>): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport default function AddOperatorsModal({\n  hideModal,\n  channel,\n  onSubmit,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState({});\n  const [memberQuery, setMemberQuery] = useState(null);\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    const memberListQuery = channel.createMemberListQuery();\n    memberListQuery.limit = 20;\n    memberListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, [])\n\n  const selectedCount = Object.keys(selectedMembers).filter((m) => selectedMembers[m]).length;\n  return (\n    <div>\n      <Modal\n        type={ButtonType.PRIMARY}\n        submitText=\"Add\"\n        onCancel={() => hideModal()}\n        onSubmit={() => {\n          const members = Object.keys(selectedMembers).filter((m) => selectedMembers[m]);\n          onSubmit(members);\n        }}\n        titleText=\"Select members\"\n      >\n        <Label\n          color={(selectedCount > 0) ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3}\n          type={LabelTypography.CAPTION_1}\n        >\n          {`${selectedCount} ${stringSet.MODAL__INVITE_MEMBER__SELECTEC}`}\n        </Label>\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              checkBox\n              checked={selectedMembers[member.userId]}\n              onChange={\n                (event) => {\n                  const modifiedSelectedMembers = {\n                    ...selectedMembers,\n                    [event.target.id]: event.target.checked,\n                  };\n                  if (!event.target.checked) {\n                    delete modifiedSelectedMembers[event.target.id];\n                  }\n                  setSelectedMembers(modifiedSelectedMembers);\n                }\n              }\n              user={member}\n              key={member.userId}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n  useContext,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport OperatorsModal from './OperatorsModal';\nimport AddOperatorsModal from './AddOperatorsModal';\n\ninterface Props {\n  sdk: SendbirdTypes[\"SendBirdInstance\"];\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport const OperatorList = ({ sdk, channel }: Props): ReactElement => {\n  const [operators, setOperators] = useState([]);\n  const [showMore, setShowMore] = useState(false);\n  const [showAdd, setShowAdd] = useState(false);\n  const [hasNext, setHasNext] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    if (!channel) {\n      setOperators([]);\n      return;\n    }\n\n    const operatorListQuery = channel.createOperatorListQuery();\n    operatorListQuery.limit = 10;\n    operatorListQuery.next((operators, error) => {\n      if (error) {\n        return;\n      }\n      setOperators(operators);\n      setHasNext(operatorListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refershList = useCallback(\n    () => {\n      if (!channel) {\n        setOperators([]);\n        return;\n      }\n      const operatorListQuery = channel.createOperatorListQuery();\n      operatorListQuery.limit = 10;\n      operatorListQuery.next((operators, error) => {\n        if (error) {\n          return;\n        }\n        setOperators(operators);\n        setHasNext(operatorListQuery.hasNext);\n      });\n    },\n    [channel],\n  );\n\n  return (\n    <>\n      {\n        operators.map((operator) => (\n          <UserListItem\n            key={operator.userId}\n            user={operator}\n            currentUser={sdk.currentUser.userId}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.removeOperators([operator.userId], (response, error) => {\n                            if (error) {\n                              return;\n                            }\n                            setOperators(operators.filter(({ userId }) => {\n                              return userId !== operator.userId;\n                            }))\n                          });\n                          closeDropdown();\n                        }}\n                      >\n                        Dismiss operator\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }}\n          />\n        ))\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowMore(true);\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ALL}\n            </Button>\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowAdd(true);\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ADD}\n            </Button>\n          </div>\n        )\n      }\n      {\n        showMore && (\n          <OperatorsModal\n            currentUser={sdk.currentUser.userId}\n            hideModal={() => {\n              setShowMore(false);\n              refershList();\n            }}\n            channel={channel}\n          />\n        )\n      }\n      {\n        showAdd && (\n          <AddOperatorsModal\n            hideModal={() => setShowAdd(false)}\n            channel={channel}\n            onSubmit={(members) => {\n              setShowAdd(false);\n              channel.addOperators(members, () => {\n                refershList();\n              });\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(OperatorList, mapStoreToProps);\n","import React, { ReactElement, useEffect, useState } from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport { Type as ButtonType } from '../../../../ui/Button/type';\nimport UserListItem from '../../../../ui/UserListItem';\n\ninterface Props {\n  hideModal(): void;\n  onSubmit(members: Array<string>): void;\n  channel: SendbirdTypes['GroupChannel'];\n  userQueryCreator(): SendbirdTypes['UserListQuery'];\n}\n\nexport default function InviteMembers({\n  hideModal,\n  userQueryCreator,\n  onSubmit,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState({});\n  const [userQuery, setUserQuery] = useState(null);\n\n  useEffect(() => {\n    const userListQuery = userQueryCreator();\n    userListQuery.limit = 20;\n    userListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setUserQuery(userListQuery);\n  }, [])\n  return (\n    <div>\n      <Modal\n        disabled={Object.keys(selectedMembers).length === 0}\n        submitText=\"Invite\"\n        type={ButtonType.PRIMARY}\n        onCancel={() => hideModal()}\n        onSubmit={() => {\n          const members = Object.keys(selectedMembers).filter((m) => selectedMembers[m]);\n          onSubmit(members);\n        }}\n        titleText=\"Select members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = userQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              userQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              checkBox\n              checked={selectedMembers[member.userId]}\n              onChange={\n                (event) => {\n                  const modifiedSelectedMembers = {\n                    ...selectedMembers,\n                    [event.target.id]: event.target.checked,\n                  };\n                  if (!event.target.checked) {\n                    delete modifiedSelectedMembers[event.target.id];\n                  }\n                  setSelectedMembers(modifiedSelectedMembers);\n                }\n              }\n              user={member}\n              key={member.userId}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport MembersModal from './MembersModal';\nimport InviteMembers from './InviteMembersModal';\n\ninterface Props {\n  sdk: SendbirdTypes['SendBirdInstance'];\n  channel: SendbirdTypes['GroupChannel'];\n  userQueryCreator(): SendbirdTypes['UserListQuery'];\n  userId: string;\n}\n\nexport const MemberList = ({\n  sdk,\n  channel,\n  userQueryCreator,\n  userId,\n}: Props): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showAllMembers, setShowAllMembers] = useState(false);\n  const [showInviteMembers, setShowInviteMembers] = useState(false);\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refershList = useCallback(\n    () => {\n      if (!channel) {\n        setMembers([]);\n        return;\n      }\n      const memberUserListQuery = channel.createMemberListQuery();\n      memberUserListQuery.limit = 10;\n      memberUserListQuery.next((members, error) => {\n        if (error) {\n          return;\n        }\n        setMembers(members);\n        setHasNext(memberUserListQuery.hasNext);\n      });\n    },\n    [channel],\n  );\n\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            currentUser={sdk.currentUser.userId}\n            action={\n              (userId !== member.userId)\n                ? ({ actionRef, parentRef }) => (\n                  <ContextMenu\n                    menuTrigger={(toggleDropdown) => (\n                      <IconButton\n                        className=\"sendbird-user-message__more__menu\"\n                        width=\"32px\"\n                        height=\"32px\"\n                        onClick={toggleDropdown}\n                      >\n                        <Icon\n                          width=\"24px\"\n                          height=\"24px\"\n                          type={IconTypes.MORE}\n                          fillColor={IconColors.CONTENT_INVERSE}\n                        />\n                      </IconButton>\n                    )}\n                    menuItems={(closeDropdown) => (\n                      <MenuItems\n                        parentContainRef={parentRef}\n                        parentRef={actionRef} // for catching location(x, y) of MenuItems\n                        closeDropdown={closeDropdown}\n                        openLeft\n                      >\n                        <MenuItem\n                          onClick={() => {\n                            if ((member.role !== 'operator')) {\n                              channel.addOperators([member.userId], () => {\n                                refershList();\n                                closeDropdown();\n                              });\n                            } else {\n                              channel.removeOperators([member.userId], () => {\n                                refershList();\n                                closeDropdown();\n                              });\n                            }\n                          }}\n                        >\n                          {member.role !== 'operator' ? 'Promote to operator' : 'Demote operator'}\n                        </MenuItem>\n                        {\n                          // No muted members in broadcast channel\n                          !channel.isBroadcast && (\n                            <MenuItem\n                              onClick={() => {\n                                if (member.isMuted) {\n                                  channel.unmuteUser(member, () => {\n                                    refershList();\n                                    closeDropdown();\n                                  })\n                                } else {\n                                  channel.muteUser(member, () => {\n                                    refershList();\n                                    closeDropdown();\n                                  });\n                                }\n                              }}\n                            >\n                              { member.isMuted ? 'Unmute' : 'Mute'}\n                            </MenuItem>\n                          )\n                        }\n                        <MenuItem\n                          onClick={() => {\n                            channel.banUser(member, -1, '', () => {\n                              refershList();\n                              closeDropdown();\n                            });\n                          }}\n                        >\n                          Ban\n                    </MenuItem>\n                      </MenuItems>\n                    )}\n                  />\n                )\n                : null\n            }\n          />\n        ))\n      }\n      <div\n        className=\"sendbird-channel-settings-accordion__footer\"\n      >\n        {\n          hasNext && (\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => setShowAllMembers(true)}\n            >\n              All members\n            </Button>\n          )\n        }\n        <Button\n          type={ButtonTypes.SECONDARY}\n          size={ButtonSizes.SMALL}\n          onClick={() => setShowInviteMembers(true)}\n        >\n          Invite members\n        </Button>\n      </div>\n      {\n        showAllMembers && (\n          <MembersModal\n            currentUser={sdk.currentUser.userId}\n            channel={channel}\n            hideModal={() => {\n              setShowAllMembers(false);\n              refershList();\n            }}\n          />\n        )\n      }\n      {\n        showInviteMembers && (\n          <InviteMembers\n            userQueryCreator={userQueryCreator}\n            onSubmit={(selectedMembers: Array<string>) => {\n              channel.inviteWithUserIds(selectedMembers, () => {\n                setShowInviteMembers(false);\n                refershList();\n              });\n            }}\n            channel={channel}\n            hideModal={() => setShowInviteMembers(false)}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(MemberList, mapStoreToProps);\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport default function BannedMembersModal({\n  hideModal,\n  channel,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  useEffect(() => {\n    const bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next((users, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(users);\n    });\n    setMemberQuery(bannedUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"Muted members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              user={member}\n              key={member.userId}\n              action={({ parentRef, actionRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unbanUser(member, () => {\n                            closeDropdown();\n                            setMembers(members.filter(m => {\n                              return (m.userId !== member.userId);\n                            }));\n                          })\n                        }}\n                      >\n                        Unban\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )\n              }\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport\n  Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport BannedMembersModal from './BannedMembersModal';\n\ninterface Props {\n  sdk: SendbirdTypes[\"SendBirdInstance\"];\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport const BannedMemberList = ({ channel }: Props): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next((users, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next(function(users, error) {\n      if (error) {\n        return;\n      }\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unbanUser(member, () => {\n                            closeDropdown();\n                            refreshList();\n                          })\n                        }}\n                      >\n                        Unban\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )\n            }}\n          />\n        ))\n      }\n      {\n        members && members.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            No banned members yet\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              All banned members\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <BannedMembersModal\n            channel={channel}\n            hideModal={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(BannedMemberList, mapStoreToProps);\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n  currentUser?: string;\n}\n\nexport default function MutedMembersModal({\n  hideModal,\n  channel,\n  currentUser,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  useEffect(() => {\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setMemberQuery(memberUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"Muted members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              currentUser={currentUser}\n              user={member}\n              key={member.userId}\n              action={({ actionRef, parentRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unmuteUser(member, () => {\n                            closeDropdown();\n                            setMembers(members.filter(m => {\n                              return (m.userId !== member.userId);\n                            }));\n                          })\n                        }}\n                      >\n                        Unmute\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport\n  Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport UserListItem from '../UserListItem';\nimport MutedMembersModal from './MutedMembersModal';\n\ninterface Props {\n  sdk: SendbirdTypes[\"SendBirdInstance\"];\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport const MutedMemberList = ({ sdk, channel }: Props): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            currentUser={sdk.currentUser.userId}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unmuteUser(member, () => {\n                            refreshList();\n                            closeDropdown();\n                          })\n                        }}\n                      >\n                        Unmute\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }\n            }\n          />\n        ))\n      }\n      {\n        members && members.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            No muted members yet\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              All muted members\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <MutedMembersModal\n            currentUser={sdk.currentUser.userId}\n            channel={channel}\n            hideModal={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(MutedMemberList, mapStoreToProps);\n","import './index.scss';\nimport React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react';\nimport { SendbirdTypes } from '../../../../types';\n\nimport Accordion, { AccordionGroup } from '../../../../ui/Accordion';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport\n  Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport Badge from '../../../../ui/Badge';\n\nimport OperatorList from './OperatorList';\nimport MemberList from './MemberList';\nimport BannedMemberList from './BannedMemberList';\nimport MutedMemberList from './MutedMemberList';\n\nconst kFormatter = (num: number): string|number => {\n  return Math.abs(num) > 999\n    ? `${(Math.abs(num)/1000).toFixed(1)}K`\n    : num;\n}\n\ninterface Props {\n  channel: SendbirdTypes['GroupChannel'];\n  userQueryCreator(): SendbirdTypes['UserListQuery'];\n  userId: string;\n}\n\nexport default function AdminPannel({\n  userQueryCreator,\n  channel,\n  userId,\n}: Props): ReactElement {\n  const [frozen, setFrozen] = useState(false);\n\n  // work around for\n  // https://sendbird.slack.com/archives/G01290GCDCN/p1595922832000900\n  // SDK bug - after frozen/unfrozen myRole becomes \"none\"\n  useEffect(() => {\n    setFrozen(channel.isFrozen);\n  }, [channel]);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <AccordionGroup className=\"sendbird-channel-settings__operator\">\n      <Accordion\n        className=\"sendbird-channel-settings__operators-list\"\n        id=\"operators\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.OPERATOR}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE}\n            </Label>\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <OperatorList channel={channel} />\n          </>\n        )}\n      />\n      <Accordion\n        className=\"sendbird-channel-settings__members-list\"\n        id=\"members\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.MEMBERS}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__MEMBERS__TITLE}\n            </Label>\n            <Badge count={kFormatter(channel.memberCount)} />\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <MemberList\n              userQueryCreator={userQueryCreator}\n              channel={channel}\n              userId={userId}\n            />\n          </>\n        )}\n      />\n      {\n        // No muted members in broadcast channel\n        !channel.isBroadcast && (\n          <Accordion\n            id=\"mutedMembers\"\n            className=\"sendbird-channel-settings__muted-members-list\"\n            renderTitle={() => (\n              <>\n                <Icon\n                  type={IconTypes.MUTE}\n                  fillColor={IconColors.PRIMARY}\n                  width={24}\n                  height={24}\n                  className=\"sendbird-channel-settings__accordion-icon\"\n                />\n                <Label\n                  type={LabelTypography.SUBTITLE_1}\n                  color={LabelColors.ONBACKGROUND_1}\n                >\n                  {stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE}\n                </Label>\n              </>\n            )}\n            renderContent={() => (\n              <>\n                <MutedMemberList channel={channel} />\n              </>\n            )}\n          />\n        )\n      }\n      <Accordion\n        className=\"sendbird-channel-settings__banned-members-list\"\n        id=\"bannedMembers\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.BAN}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__BANNED_MEMBERS__TITLE}\n            </Label>\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <BannedMemberList channel={channel} />\n          </>\n        )}\n      />\n      {\n        // cannot frozen broadcast channel\n        !channel.isBroadcast && (\n          <div className=\"sendbird-channel-settings__freeze\">\n            <Icon\n              type={IconTypes.FREEZE}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__FREEZE_CHANNEL}\n            </Label>\n            <div className=\"sendbird-channel-settings__frozen-icon\">\n              {\n                frozen\n                  ? (\n                    <Icon\n                      onClick={() => {\n                        channel.unfreeze(() => {\n                          setFrozen(false);\n                        });\n                      }}\n                      type={IconTypes.TOGGLE_ON}\n                      fillColor={IconColors.PRIMARY}\n                      width={44}\n                      height={24}\n                    />\n                  )\n                  : (\n                    <Icon\n                      onClick={() => {\n                        channel.freeze(() => {\n                          setFrozen(true);\n                        });\n                      }}\n                      type={IconTypes.TOGGLE_OFF}\n                      fillColor={IconColors.PRIMARY}\n                      width={44}\n                      height={24}\n                    />\n                  )\n              }\n            </div>\n          </div>\n        )\n      }\n    </AccordionGroup>\n  );\n}\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport { UserProfileProvider } from '../../lib/UserProfileContext';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport './index.scss';\nimport Badge from '../../ui/Badge';\nimport Label, { LabelTypography, LabelColors } from '../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../ui/Icon';\nimport IconButton from '../../ui/IconButton';\n\nimport ChannelProfile from './components/ChannelProfile';\nimport MembersAccordion from './components/MembersAccordion';\nimport LeaveChannelModal from './components/LeaveChannel';\nimport AdminPanel from './components/AdminPanel';\nimport PlaceHolder from '../../ui/PlaceHolder';\nimport PlaceHolderTypes from '../../ui/PlaceHolder/type';\nimport { uuidv4 } from '../../utils/uuid';\nimport { createDefaultUserListQuery } from '../ChannelList/components/utils';\n\nconst COMPONENT_CLASS_NAME = 'sendbird-channel-settings';\n\nconst kFormatter = (num) => (\n  Math.abs(num) > 999\n    ? `${(Math.abs(num) / 1000).toFixed(1)}K`\n    : num\n);\n\nfunction ChannelSettings(props) {\n  const {\n    className,\n    onCloseClick,\n    channelUrl,\n    disableUserProfile,\n    renderUserProfile,\n    onChannelModified,\n    renderChannelProfile,\n    onBeforeUpdateChannel,\n  } = props;\n\n  const {\n    stores: { sdkStore },\n    config: {\n      userListQuery,\n      theme,\n      userId,\n      logger,\n      isOnline,\n    },\n    queries = {},\n  } = props;\n\n  const { config = {} } = props;\n  const userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  const userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n\n  const userFilledApplicationUserListQuery = queries.applicationUserListQuery;\n  const { stringSet } = useContext(LocalizationContext);\n\n  const { sdk, initialized } = sdkStore;\n\n  // hack to kepp track of channel updates by triggering useEffect\n  const [channelUpdateId, setChannelUpdateId] = useState(uuidv4());\n  const [channel, setChannel] = useState(null);\n  const [invalidChannel, setInvalidChannel] = useState(false);\n  const [showAccordion, setShowAccordion] = useState(false);\n  const [showLeaveChannelModal, setShowLeaveChannelModal] = useState(false);\n\n  const componentClassNames = (\n    Array.isArray(className)\n      ? [COMPONENT_CLASS_NAME, ...className]\n      : [COMPONENT_CLASS_NAME, className]\n  ).join(' ');\n\n  useEffect(() => {\n    logger.info('ChannelSettings: Setting up');\n    if (!channelUrl || !initialized || !sdk) {\n      logger.warning('ChannelSettings: Setting up failed', 'No channelUrl or sdk uninitialized');\n      setInvalidChannel(false);\n    } else {\n      if (!sdk || !sdk.GroupChannel) {\n        logger.warning('ChannelSettings: No GroupChannel');\n        return;\n      }\n      sdk.GroupChannel.getChannel(channelUrl, (groupChannel) => {\n        if (!groupChannel) {\n          logger.warning('ChannelSettings: Channel not found');\n          setInvalidChannel(true);\n        } else {\n          logger.info('ChannelSettings: Fetched group channel', groupChannel);\n          setInvalidChannel(false);\n          setChannel(groupChannel);\n        }\n      });\n    }\n  }, [channelUrl, initialized, channelUpdateId]);\n\n  if (!channel || invalidChannel) {\n    return (\n      <div className={componentClassNames}>\n        <div className=\"sendbird-channel-settings__header\">\n          <Label type={LabelTypography.H_2} color={LabelColors.ONBACKGROUND_1}>\n            {stringSet.CHANNEL_SETTING__HEADER__TITLE}\n          </Label>\n          <Icon\n            className=\"sendbird-channel-settings__close-icon\"\n            type={IconTypes.CLOSE}\n            height=\"24px\"\n            width=\"24px\"\n            onClick={() => {\n              logger.info('ChannelSettings: Click close');\n              onCloseClick();\n            }}\n          />\n        </div>\n        <div>\n          <PlaceHolder type={PlaceHolderTypes.WRONG} />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <UserProfileProvider\n      className={componentClassNames}\n      disableUserProfile={userDefinedDisableUserProfile}\n      renderUserProfile={userDefinedRenderProfile}\n    >\n      <div className=\"sendbird-channel-settings__header\">\n        <Label type={LabelTypography.H_2} color={LabelColors.ONBACKGROUND_1}>\n          {stringSet.CHANNEL_SETTING__HEADER__TITLE}\n        </Label>\n        <div className=\"sendbird-channel-settings__header-icon\">\n          <IconButton\n            width=\"32px\"\n            height=\"32px\"\n            onClick={() => {\n              logger.info('ChannelSettings: Click close');\n              onCloseClick();\n            }}\n          >\n            <Icon\n              className=\"sendbird-channel-settings__close-icon\"\n              type={IconTypes.CLOSE}\n              height=\"22px\"\n              width=\"22px\"\n            />\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"sendbird-channel-settings__scroll-area\">\n        {\n          renderChannelProfile\n            ? renderChannelProfile({ channel })\n            : (\n              <ChannelProfile\n                disabled={!isOnline}\n                channel={channel}\n                userId={userId}\n                theme={theme}\n                onChannelInfoChange={(currentImg, currentTitle) => {\n                  logger.info('ChannelSettings: Channel information being updated');\n                  const swapParams = sdk.getErrorFirstCallback();\n                  if (onBeforeUpdateChannel) {\n                    const params = onBeforeUpdateChannel(currentTitle, currentImg, channel.data);\n                    // swapParams\n                    channel.updateChannel(params, (response, error) => {\n                      let groupChannel = response;\n                      if (swapParams) {\n                        groupChannel = error;\n                      }\n\n                      onChannelModified(groupChannel);\n                      setChannelUpdateId(uuidv4());\n                    });\n                    return;\n                  }\n                  channel.updateChannel(\n                    currentTitle,\n                    currentImg,\n                    channel.data,\n                    (response, error) => {\n                      let groupChannel = response;\n                      if (swapParams) {\n                        groupChannel = error;\n                      }\n                      logger.info('ChannelSettings: Channel information updated', groupChannel);\n                      onChannelModified(groupChannel);\n                      setChannelUpdateId(uuidv4());\n                    },\n                  );\n                }}\n              />\n            )\n        }\n        {\n          channel.myRole === 'operator'\n            ? (\n              <AdminPanel\n                channel={channel}\n                userId={userId}\n                onChannelModified={(groupChannel) => {\n                  // setChannelUpdateId(uuidv4());\n                  onChannelModified(groupChannel);\n                }}\n                userQueryCreator={\n                  () => ((userListQuery && typeof userListQuery === 'function')\n                    ? userListQuery()\n                    : createDefaultUserListQuery({ sdk, userFilledApplicationUserListQuery })\n                  )\n                }\n              />\n            )\n            : (\n              <>\n                {/* Move to different file */}\n                <div\n                  className={[\n                    'sendbird-channel-settings__panel-item',\n                    'sendbird-channel-settings__members',\n                  ].join(' ')}\n                  role=\"switch\"\n                  aria-checked={showAccordion}\n                  onKeyDown={() => setShowAccordion(!showAccordion)}\n                  onClick={() => setShowAccordion(!showAccordion)}\n                  tabIndex={0}\n                >\n                  <Icon\n                    className=\"sendbird-channel-settings__panel-icon-left\"\n                    type={IconTypes.MEMBERS}\n                    fillColor={IconColors.PRIMARY}\n                    height=\"24px\"\n                    width=\"24px\"\n                  />\n                  <Label\n                    type={LabelTypography.SUBTITLE_1}\n                    color={LabelColors.ONBACKGROUND_1}\n                  >\n                    {stringSet.CHANNEL_SETTING__MEMBERS__TITLE}\n                    <Badge count={kFormatter(channel.memberCount)} />\n                  </Label>\n                  <Icon\n                    className={[\n                      'sendbird-channel-settings__panel-icon-right',\n                      'sendbird-channel-settings__panel-icon--chevron',\n                      (showAccordion ? 'sendbird-channel-settings__panel-icon--open' : ''),\n                    ].join(' ')}\n                    type={IconTypes.CHEVRON_RIGHT}\n                    height=\"24px\"\n                    width=\"24px\"\n                  />\n                </div>\n                {\n                  showAccordion && (\n                    <MembersAccordion\n                      currentUser={userId}\n                      disabled={!isOnline}\n                      // eslint-disable-next-line\n                      userQueryCreator={\n                        () => ((userListQuery && typeof userListQuery === 'function')\n                          ? userListQuery()\n                          : createDefaultUserListQuery({ sdk, userFilledApplicationUserListQuery })\n                        )\n                      }\n                      swapParams={\n                        sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback()\n                      }\n                      channel={channel}\n                      members={channel.members}\n                      onInviteMembers={(selectedMembers) => {\n                        logger.info('ChannelSettings: Inviting new users');\n                        channel.inviteWithUserIds(selectedMembers)\n                          .then((res) => {\n                            onChannelModified(res);\n                            setChannelUpdateId(uuidv4());\n                            logger.info('ChannelSettings: Inviting new users success!', res);\n                          });\n                      }}\n                    />\n                  )\n                }\n              </>\n            )\n        }\n\n        <div\n          className={[\n            'sendbird-channel-settings__panel-item',\n            'sendbird-channel-settings__leave-channel',\n            !isOnline ? 'sendbird-channel-settings__panel-item__disabled' : '',\n          ].join(' ')}\n          role=\"button\"\n          disabled\n          onKeyDown={() => {\n            if (!isOnline) { return; }\n            setShowLeaveChannelModal(true);\n          }}\n          onClick={() => {\n            if (!isOnline) { return; }\n            setShowLeaveChannelModal(true);\n          }}\n          tabIndex={0}\n        >\n          <Icon\n            className={[\n              'sendbird-channel-settings__panel-icon-left',\n              'sendbird-channel-settings__panel-icon__leave',\n            ].join(' ')}\n            type={IconTypes.LEAVE}\n            fillColor={IconColors.ERROR}\n            height=\"24px\"\n            width=\"24px\"\n          />\n          <Label\n            type={LabelTypography.SUBTITLE_1}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {stringSet.CHANNEL_SETTING__LEAVE_CHANNEL__TITLE}\n          </Label>\n        </div>\n        {\n          showLeaveChannelModal && (\n            <LeaveChannelModal\n              onCloseModal={() => setShowLeaveChannelModal(false)}\n              onLeaveChannel={() => {\n                logger.info('ChannelSettings: Leaving channel', channel);\n                channel.leave()\n                  .then(() => {\n                    logger.info('ChannelSettings: Leaving channel successful!', channel);\n                    onCloseClick();\n                  });\n              }}\n            />\n          )\n        }\n      </div>\n    </UserProfileProvider>\n  );\n}\n\nChannelSettings.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  onCloseClick: PropTypes.func,\n  onChannelModified: PropTypes.func,\n  onBeforeUpdateChannel: PropTypes.func,\n  renderChannelProfile: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  channelUrl: PropTypes.string.isRequired,\n  queries: PropTypes.shape({\n    applicationUserListQuery: PropTypes.shape({\n      limit: PropTypes.number,\n      userIdsFilter: PropTypes.arrayOf(PropTypes.string),\n      metaDataKeyFilter: PropTypes.string,\n      metaDataValuesFilter: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }),\n  // from withSendbirdContext\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      sdk: PropTypes.shape({\n        getErrorFirstCallback: PropTypes.func,\n        GroupChannel: PropTypes.oneOfType([\n          PropTypes.shape({\n            getChannel: PropTypes.func,\n          }),\n          PropTypes.func,\n        ]),\n        createApplicationUserListQuery: PropTypes.any,\n      }),\n      initialized: PropTypes.bool,\n    }),\n  }).isRequired,\n  config: PropTypes.shape({\n    userId: PropTypes.string,\n    theme: PropTypes.string,\n    userListQuery: PropTypes.func,\n    isOnline: PropTypes.bool,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func,\n    }),\n  }).isRequired,\n};\n\nChannelSettings.defaultProps = {\n  className: '',\n  onBeforeUpdateChannel: null,\n  queries: {},\n  disableUserProfile: false,\n  renderUserProfile: null,\n  renderChannelProfile: null,\n  onCloseClick: () => { },\n  onChannelModified: () => { },\n};\n\nexport default withSendbirdContext(ChannelSettings);\n"],"names":["EditDetails","props","onSubmit","onCancel","channel","userId","theme","inputRef","useRef","formRef","hiddenInputRef","currentImg","setCurrentImg","useState","newFile","setNewFile","stringSet","useContext","LocalizationContext","title","name","React","MODAL__CHANNEL_INFORMATION__TITLE","BUTTON__SAVE","current","value","reportValidity","ButtonType","PRIMARY","e","preventDefault","MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE","display","URL","createObjectURL","target","files","click","LabelTypography","BUTTON_1","LabelColors","MODAL__CHANNEL_INFORMATION__UPLOAD","MODAL__CHANNEL_INFORMATION__CHANNEL_NAME","MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER","propTypes","PropTypes","func","isRequired","shape","string","ChannelProfile","disabled","onChannelInfoChange","showModal","setShowModal","getChannelName","members","map","member","nickname","NO_NAME","join","NO_TITLE","SUBTITLE_2","ONBACKGROUND_1","ONBACKGROUND_2","CHANNEL_SETTING__PROFILE__EDIT","EditDetailsModal","arrayOf","bool","defaultProps","MembersModal","_a","hideModal","currentUser","_b","setMembers","_c","memberQuery","setMemberQuery","useEffect","memberListQuery","createMemberListQuery","limit","next","error","noop","hasNext","fetchMore","clientHeight","scrollTop","scrollHeight","o","__spreadArray","UserListItem","parentRef","actionRef","myRole","toggleDropdown","IconTypes","MORE","IconColors","CONTENT_INVERSE","closeDropdown","role","addOperators","m","__assign","removeOperators","isBroadcast","isMuted","unmuteUser","muteUser","banUser","filter","SHOWN_MEMBER_MAX","avatarRef","disableUserProfile","renderUserProfile","UserProfileContext","profileUrl","paddingTop","paddingBottom","user","currentUserId","close","UserProfile","CHANNEL_SETTING__MEMBERS__YOU","MembersAccordion","userQueryCreator","onInviteMembers","swapParams","showMoreModal","setShowMoreModal","showAddUserModal","setShowAddUserModal","slice","length","ButtonTypes","SECONDARY","ButtonSizes","SMALL","CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS","InviteMembers","MODAL__INVITE_MEMBER__TITLE","BUTTON__INVITE","COMPONENT_NAME","className","action","injectingClassNames","Array","isArray","concat","SUBTITLE_1","CAPTION_3","OperatorsModal","operators","setOperators","operatorQuery","setOperatorQuery","operatorListQuery","createOperatorListQuery","response","AddOperatorsModal","selectedMembers","setSelectedMembers","_d","selectedCount","Object","keys","ONBACKGROUND_3","CAPTION_1","MODAL__INVITE_MEMBER__SELECTEC","event","modifiedSelectedMembers","id","checked","OperatorList","sdk","showMore","setShowMore","showAdd","setShowAdd","_e","setHasNext","refershList","useCallback","operator","CHANNEL_SETTING__OPERATORS__TITLE_ALL","CHANNEL_SETTING__OPERATORS__TITLE_ADD","mapStoreToProps","store","getSdk","withSendbirdContext","userQuery","setUserQuery","userListQuery","MemberList","showAllMembers","setShowAllMembers","showInviteMembers","setShowInviteMembers","memberUserListQuery","inviteWithUserIds","BannedMembersModal","bannedUserListQuery","createBannedUserListQuery","users","unbanUser","BannedMemberList","refreshList","MutedMembersModal","mutedMemberFilter","MutedMemberList","kFormatter","num","Math","abs","toFixed","AdminPannel","frozen","setFrozen","isFrozen","OPERATOR","CHANNEL_SETTING__OPERATORS__TITLE","MEMBERS","CHANNEL_SETTING__MEMBERS__TITLE","memberCount","MUTE","CHANNEL_SETTING__MUTED_MEMBERS__TITLE","BAN","CHANNEL_SETTING__BANNED_MEMBERS__TITLE","FREEZE","CHANNEL_SETTING__FREEZE_CHANNEL","unfreeze","TOGGLE_ON","freeze","TOGGLE_OFF","COMPONENT_CLASS_NAME","ChannelSettings","onCloseClick","channelUrl","onChannelModified","renderChannelProfile","onBeforeUpdateChannel","stores","sdkStore","config","logger","isOnline","queries","userDefinedDisableUserProfile","userDefinedRenderProfile","userFilledApplicationUserListQuery","applicationUserListQuery","initialized","channelUpdateId","setChannelUpdateId","uuidv4","setChannel","invalidChannel","setInvalidChannel","showAccordion","setShowAccordion","showLeaveChannelModal","setShowLeaveChannelModal","componentClassNames","info","warning","GroupChannel","getChannel","groupChannel","H_2","CHANNEL_SETTING__HEADER__TITLE","CLOSE","PlaceHolderTypes","WRONG","currentTitle","getErrorFirstCallback","params","data","updateChannel","AdminPanel","createDefaultUserListQuery","CHEVRON_RIGHT","then","res","LEAVE","ERROR","CHANNEL_SETTING__LEAVE_CHANNEL__TITLE","LeaveChannelModal","leave","oneOfType","element","number","userIdsFilter","metaDataKeyFilter","metaDataValuesFilter","createApplicationUserListQuery","any"],"mappings":"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"}